<?php
/**
 * CardDetailReplyExpenselist
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * CardDetailReplyExpenselist Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CardDetailReplyExpenselist implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CardDetailReply.Expenselist';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'seq' => 'string',
        'expense_list_dept_id' => 'string',
        'expense_list_dept_number' => 'string',
        'expense_list_dept_name' => 'string',
        'expense_list_acct_id' => 'string',
        'expense_list_acct_number' => 'string',
        'expense_list_acct_name' => 'string',
        'expense_list_detail_id' => 'string',
        'expense_list_percent' => 'string',
        'expense_list_all_pct' => 'string',
        'id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'seq' => null,
        'expense_list_dept_id' => null,
        'expense_list_dept_number' => null,
        'expense_list_dept_name' => null,
        'expense_list_acct_id' => null,
        'expense_list_acct_number' => null,
        'expense_list_acct_name' => null,
        'expense_list_detail_id' => null,
        'expense_list_percent' => null,
        'expense_list_all_pct' => null,
        'id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'seq' => 'seq',
        'expense_list_dept_id' => 'expense_list_dept_id',
        'expense_list_dept_number' => 'expense_list_dept_number',
        'expense_list_dept_name' => 'expense_list_dept_name',
        'expense_list_acct_id' => 'expense_list_acct_id',
        'expense_list_acct_number' => 'expense_list_acct_number',
        'expense_list_acct_name' => 'expense_list_acct_name',
        'expense_list_detail_id' => 'expense_list_detail_id',
        'expense_list_percent' => 'expense_list_percent',
        'expense_list_all_pct' => 'expense_list_all_pct',
        'id' => 'id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'seq' => 'setSeq',
        'expense_list_dept_id' => 'setExpenseListDeptId',
        'expense_list_dept_number' => 'setExpenseListDeptNumber',
        'expense_list_dept_name' => 'setExpenseListDeptName',
        'expense_list_acct_id' => 'setExpenseListAcctId',
        'expense_list_acct_number' => 'setExpenseListAcctNumber',
        'expense_list_acct_name' => 'setExpenseListAcctName',
        'expense_list_detail_id' => 'setExpenseListDetailId',
        'expense_list_percent' => 'setExpenseListPercent',
        'expense_list_all_pct' => 'setExpenseListAllPct',
        'id' => 'setId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'seq' => 'getSeq',
        'expense_list_dept_id' => 'getExpenseListDeptId',
        'expense_list_dept_number' => 'getExpenseListDeptNumber',
        'expense_list_dept_name' => 'getExpenseListDeptName',
        'expense_list_acct_id' => 'getExpenseListAcctId',
        'expense_list_acct_number' => 'getExpenseListAcctNumber',
        'expense_list_acct_name' => 'getExpenseListAcctName',
        'expense_list_detail_id' => 'getExpenseListDetailId',
        'expense_list_percent' => 'getExpenseListPercent',
        'expense_list_all_pct' => 'getExpenseListAllPct',
        'id' => 'getId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['seq'] = isset($data['seq']) ? $data['seq'] : null;
        $this->container['expense_list_dept_id'] = isset($data['expense_list_dept_id']) ? $data['expense_list_dept_id'] : null;
        $this->container['expense_list_dept_number'] = isset($data['expense_list_dept_number']) ? $data['expense_list_dept_number'] : null;
        $this->container['expense_list_dept_name'] = isset($data['expense_list_dept_name']) ? $data['expense_list_dept_name'] : null;
        $this->container['expense_list_acct_id'] = isset($data['expense_list_acct_id']) ? $data['expense_list_acct_id'] : null;
        $this->container['expense_list_acct_number'] = isset($data['expense_list_acct_number']) ? $data['expense_list_acct_number'] : null;
        $this->container['expense_list_acct_name'] = isset($data['expense_list_acct_name']) ? $data['expense_list_acct_name'] : null;
        $this->container['expense_list_detail_id'] = isset($data['expense_list_detail_id']) ? $data['expense_list_detail_id'] : null;
        $this->container['expense_list_percent'] = isset($data['expense_list_percent']) ? $data['expense_list_percent'] : null;
        $this->container['expense_list_all_pct'] = isset($data['expense_list_all_pct']) ? $data['expense_list_all_pct'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets seq
     *
     * @return string
     */
    public function getSeq()
    {
        return $this->container['seq'];
    }

    /**
     * Sets seq
     *
     * @param string $seq seq
     *
     * @return $this
     */
    public function setSeq($seq)
    {
        $this->container['seq'] = $seq;

        return $this;
    }

    /**
     * Gets expense_list_dept_id
     *
     * @return string
     */
    public function getExpenseListDeptId()
    {
        return $this->container['expense_list_dept_id'];
    }

    /**
     * Sets expense_list_dept_id
     *
     * @param string $expense_list_dept_id expense_list_dept_id
     *
     * @return $this
     */
    public function setExpenseListDeptId($expense_list_dept_id)
    {
        $this->container['expense_list_dept_id'] = $expense_list_dept_id;

        return $this;
    }

    /**
     * Gets expense_list_dept_number
     *
     * @return string
     */
    public function getExpenseListDeptNumber()
    {
        return $this->container['expense_list_dept_number'];
    }

    /**
     * Sets expense_list_dept_number
     *
     * @param string $expense_list_dept_number expense_list_dept_number
     *
     * @return $this
     */
    public function setExpenseListDeptNumber($expense_list_dept_number)
    {
        $this->container['expense_list_dept_number'] = $expense_list_dept_number;

        return $this;
    }

    /**
     * Gets expense_list_dept_name
     *
     * @return string
     */
    public function getExpenseListDeptName()
    {
        return $this->container['expense_list_dept_name'];
    }

    /**
     * Sets expense_list_dept_name
     *
     * @param string $expense_list_dept_name expense_list_dept_name
     *
     * @return $this
     */
    public function setExpenseListDeptName($expense_list_dept_name)
    {
        $this->container['expense_list_dept_name'] = $expense_list_dept_name;

        return $this;
    }

    /**
     * Gets expense_list_acct_id
     *
     * @return string
     */
    public function getExpenseListAcctId()
    {
        return $this->container['expense_list_acct_id'];
    }

    /**
     * Sets expense_list_acct_id
     *
     * @param string $expense_list_acct_id expense_list_acct_id
     *
     * @return $this
     */
    public function setExpenseListAcctId($expense_list_acct_id)
    {
        $this->container['expense_list_acct_id'] = $expense_list_acct_id;

        return $this;
    }

    /**
     * Gets expense_list_acct_number
     *
     * @return string
     */
    public function getExpenseListAcctNumber()
    {
        return $this->container['expense_list_acct_number'];
    }

    /**
     * Sets expense_list_acct_number
     *
     * @param string $expense_list_acct_number expense_list_acct_number
     *
     * @return $this
     */
    public function setExpenseListAcctNumber($expense_list_acct_number)
    {
        $this->container['expense_list_acct_number'] = $expense_list_acct_number;

        return $this;
    }

    /**
     * Gets expense_list_acct_name
     *
     * @return string
     */
    public function getExpenseListAcctName()
    {
        return $this->container['expense_list_acct_name'];
    }

    /**
     * Sets expense_list_acct_name
     *
     * @param string $expense_list_acct_name expense_list_acct_name
     *
     * @return $this
     */
    public function setExpenseListAcctName($expense_list_acct_name)
    {
        $this->container['expense_list_acct_name'] = $expense_list_acct_name;

        return $this;
    }

    /**
     * Gets expense_list_detail_id
     *
     * @return string
     */
    public function getExpenseListDetailId()
    {
        return $this->container['expense_list_detail_id'];
    }

    /**
     * Sets expense_list_detail_id
     *
     * @param string $expense_list_detail_id expense_list_detail_id
     *
     * @return $this
     */
    public function setExpenseListDetailId($expense_list_detail_id)
    {
        $this->container['expense_list_detail_id'] = $expense_list_detail_id;

        return $this;
    }

    /**
     * Gets expense_list_percent
     *
     * @return string
     */
    public function getExpenseListPercent()
    {
        return $this->container['expense_list_percent'];
    }

    /**
     * Sets expense_list_percent
     *
     * @param string $expense_list_percent expense_list_percent
     *
     * @return $this
     */
    public function setExpenseListPercent($expense_list_percent)
    {
        $this->container['expense_list_percent'] = $expense_list_percent;

        return $this;
    }

    /**
     * Gets expense_list_all_pct
     *
     * @return string
     */
    public function getExpenseListAllPct()
    {
        return $this->container['expense_list_all_pct'];
    }

    /**
     * Sets expense_list_all_pct
     *
     * @param string $expense_list_all_pct expense_list_all_pct
     *
     * @return $this
     */
    public function setExpenseListAllPct($expense_list_all_pct)
    {
        $this->container['expense_list_all_pct'] = $expense_list_all_pct;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


