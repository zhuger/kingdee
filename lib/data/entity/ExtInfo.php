<?php
/**
 * ExtInfo
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * ExtInfo Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ExtInfo implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ExtInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'bill_no' => 'string',
        'delivery_type' => 'string',
        'delivery_code' => 'string',
        'receiver_name' => 'string',
        'order_status' => 'string',
        'receiver_address_id' => 'string',
        'receiver_longitude' => 'string',
        'receiver_latitude' => 'string',
        'seat_code' => 'string',
        'shortcode' => 'string',
        'lock_tip' => 'string',
        'logistics_number' => 'string',
        'logistics_company' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'bill_no' => null,
        'delivery_type' => null,
        'delivery_code' => null,
        'receiver_name' => null,
        'order_status' => null,
        'receiver_address_id' => null,
        'receiver_longitude' => null,
        'receiver_latitude' => null,
        'seat_code' => null,
        'shortcode' => null,
        'lock_tip' => null,
        'logistics_number' => null,
        'logistics_company' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bill_no' => 'bill_no',
        'delivery_type' => 'delivery_type',
        'delivery_code' => 'delivery_code',
        'receiver_name' => 'receiver_name',
        'order_status' => 'order_status',
        'receiver_address_id' => 'receiver_address_id',
        'receiver_longitude' => 'receiver_longitude',
        'receiver_latitude' => 'receiver_latitude',
        'seat_code' => 'seat_code',
        'shortcode' => 'shortcode',
        'lock_tip' => 'lock_tip',
        'logistics_number' => 'logistics_number',
        'logistics_company' => 'logistics_company'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bill_no' => 'setBillNo',
        'delivery_type' => 'setDeliveryType',
        'delivery_code' => 'setDeliveryCode',
        'receiver_name' => 'setReceiverName',
        'order_status' => 'setOrderStatus',
        'receiver_address_id' => 'setReceiverAddressId',
        'receiver_longitude' => 'setReceiverLongitude',
        'receiver_latitude' => 'setReceiverLatitude',
        'seat_code' => 'setSeatCode',
        'shortcode' => 'setShortcode',
        'lock_tip' => 'setLockTip',
        'logistics_number' => 'setLogisticsNumber',
        'logistics_company' => 'setLogisticsCompany'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bill_no' => 'getBillNo',
        'delivery_type' => 'getDeliveryType',
        'delivery_code' => 'getDeliveryCode',
        'receiver_name' => 'getReceiverName',
        'order_status' => 'getOrderStatus',
        'receiver_address_id' => 'getReceiverAddressId',
        'receiver_longitude' => 'getReceiverLongitude',
        'receiver_latitude' => 'getReceiverLatitude',
        'seat_code' => 'getSeatCode',
        'shortcode' => 'getShortcode',
        'lock_tip' => 'getLockTip',
        'logistics_number' => 'getLogisticsNumber',
        'logistics_company' => 'getLogisticsCompany'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['bill_no'] = isset($data['bill_no']) ? $data['bill_no'] : null;
        $this->container['delivery_type'] = isset($data['delivery_type']) ? $data['delivery_type'] : null;
        $this->container['delivery_code'] = isset($data['delivery_code']) ? $data['delivery_code'] : null;
        $this->container['receiver_name'] = isset($data['receiver_name']) ? $data['receiver_name'] : null;
        $this->container['order_status'] = isset($data['order_status']) ? $data['order_status'] : null;
        $this->container['receiver_address_id'] = isset($data['receiver_address_id']) ? $data['receiver_address_id'] : null;
        $this->container['receiver_longitude'] = isset($data['receiver_longitude']) ? $data['receiver_longitude'] : null;
        $this->container['receiver_latitude'] = isset($data['receiver_latitude']) ? $data['receiver_latitude'] : null;
        $this->container['seat_code'] = isset($data['seat_code']) ? $data['seat_code'] : null;
        $this->container['shortcode'] = isset($data['shortcode']) ? $data['shortcode'] : null;
        $this->container['lock_tip'] = isset($data['lock_tip']) ? $data['lock_tip'] : null;
        $this->container['logistics_number'] = isset($data['logistics_number']) ? $data['logistics_number'] : null;
        $this->container['logistics_company'] = isset($data['logistics_company']) ? $data['logistics_company'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bill_no
     *
     * @return string
     */
    public function getBillNo()
    {
        return $this->container['bill_no'];
    }

    /**
     * Sets bill_no
     *
     * @param string $bill_no bill_no
     *
     * @return $this
     */
    public function setBillNo($bill_no)
    {
        $this->container['bill_no'] = $bill_no;

        return $this;
    }

    /**
     * Gets delivery_type
     *
     * @return string
     */
    public function getDeliveryType()
    {
        return $this->container['delivery_type'];
    }

    /**
     * Sets delivery_type
     *
     * @param string $delivery_type delivery_type
     *
     * @return $this
     */
    public function setDeliveryType($delivery_type)
    {
        $this->container['delivery_type'] = $delivery_type;

        return $this;
    }

    /**
     * Gets delivery_code
     *
     * @return string
     */
    public function getDeliveryCode()
    {
        return $this->container['delivery_code'];
    }

    /**
     * Sets delivery_code
     *
     * @param string $delivery_code delivery_code
     *
     * @return $this
     */
    public function setDeliveryCode($delivery_code)
    {
        $this->container['delivery_code'] = $delivery_code;

        return $this;
    }

    /**
     * Gets receiver_name
     *
     * @return string
     */
    public function getReceiverName()
    {
        return $this->container['receiver_name'];
    }

    /**
     * Sets receiver_name
     *
     * @param string $receiver_name receiver_name
     *
     * @return $this
     */
    public function setReceiverName($receiver_name)
    {
        $this->container['receiver_name'] = $receiver_name;

        return $this;
    }

    /**
     * Gets order_status
     *
     * @return string
     */
    public function getOrderStatus()
    {
        return $this->container['order_status'];
    }

    /**
     * Sets order_status
     *
     * @param string $order_status order_status
     *
     * @return $this
     */
    public function setOrderStatus($order_status)
    {
        $this->container['order_status'] = $order_status;

        return $this;
    }

    /**
     * Gets receiver_address_id
     *
     * @return string
     */
    public function getReceiverAddressId()
    {
        return $this->container['receiver_address_id'];
    }

    /**
     * Sets receiver_address_id
     *
     * @param string $receiver_address_id receiver_address_id
     *
     * @return $this
     */
    public function setReceiverAddressId($receiver_address_id)
    {
        $this->container['receiver_address_id'] = $receiver_address_id;

        return $this;
    }

    /**
     * Gets receiver_longitude
     *
     * @return string
     */
    public function getReceiverLongitude()
    {
        return $this->container['receiver_longitude'];
    }

    /**
     * Sets receiver_longitude
     *
     * @param string $receiver_longitude receiver_longitude
     *
     * @return $this
     */
    public function setReceiverLongitude($receiver_longitude)
    {
        $this->container['receiver_longitude'] = $receiver_longitude;

        return $this;
    }

    /**
     * Gets receiver_latitude
     *
     * @return string
     */
    public function getReceiverLatitude()
    {
        return $this->container['receiver_latitude'];
    }

    /**
     * Sets receiver_latitude
     *
     * @param string $receiver_latitude receiver_latitude
     *
     * @return $this
     */
    public function setReceiverLatitude($receiver_latitude)
    {
        $this->container['receiver_latitude'] = $receiver_latitude;

        return $this;
    }

    /**
     * Gets seat_code
     *
     * @return string
     */
    public function getSeatCode()
    {
        return $this->container['seat_code'];
    }

    /**
     * Sets seat_code
     *
     * @param string $seat_code seat_code
     *
     * @return $this
     */
    public function setSeatCode($seat_code)
    {
        $this->container['seat_code'] = $seat_code;

        return $this;
    }

    /**
     * Gets shortcode
     *
     * @return string
     */
    public function getShortcode()
    {
        return $this->container['shortcode'];
    }

    /**
     * Sets shortcode
     *
     * @param string $shortcode shortcode
     *
     * @return $this
     */
    public function setShortcode($shortcode)
    {
        $this->container['shortcode'] = $shortcode;

        return $this;
    }

    /**
     * Gets lock_tip
     *
     * @return string
     */
    public function getLockTip()
    {
        return $this->container['lock_tip'];
    }

    /**
     * Sets lock_tip
     *
     * @param string $lock_tip lock_tip
     *
     * @return $this
     */
    public function setLockTip($lock_tip)
    {
        $this->container['lock_tip'] = $lock_tip;

        return $this;
    }

    /**
     * Gets logistics_number
     *
     * @return string
     */
    public function getLogisticsNumber()
    {
        return $this->container['logistics_number'];
    }

    /**
     * Sets logistics_number
     *
     * @param string $logistics_number logistics_number
     *
     * @return $this
     */
    public function setLogisticsNumber($logistics_number)
    {
        $this->container['logistics_number'] = $logistics_number;

        return $this;
    }

    /**
     * Gets logistics_company
     *
     * @return string
     */
    public function getLogisticsCompany()
    {
        return $this->container['logistics_company'];
    }

    /**
     * Sets logistics_company
     *
     * @param string $logistics_company logistics_company
     *
     * @return $this
     */
    public function setLogisticsCompany($logistics_company)
    {
        $this->container['logistics_company'] = $logistics_company;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


