<?php
/**
 * PurReqSaveReqMaterialEntity
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * PurReqSaveReqMaterialEntity Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PurReqSaveReqMaterialEntity implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PurReqSaveReq.MaterialEntity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'material_id' => 'string',
        'stock_id' => 'string',
        'sp_id' => 'string',
        'apply_qty' => 'double',
        'qty' => 'double',
        'supplier_id' => 'string',
        'delivery_date' => 'string',
        'unit_id' => 'string',
        'aux_prop_id' => 'string',
        'barcode' => 'string',
        'batch_no' => 'string',
        'pro_place' => 'string',
        'pro_reg_no' => 'string',
        'pro_license' => 'string',
        'tax_price' => 'double',
        'price' => 'double',
        'cess' => 'double',
        'all_amount' => 'double',
        'tax_amount' => 'double',
        'predis_amount' => 'double',
        'dis_amount' => 'double',
        'discount' => 'double',
        'dis_rate' => 'double',
        'dis_price' => 'double',
        'amount' => 'double',
        'bill_dis_before_amount' => 'double',
        'act_tax_price' => 'double',
        'bill_dis_distribution' => 'double',
        'act_non_tax_price' => 'double',
        'act_non_tax_amount' => 'double',
        'comment' => 'string',
        'custom_entity_field' => 'map[string,string]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'material_id' => null,
        'stock_id' => null,
        'sp_id' => null,
        'apply_qty' => 'double',
        'qty' => 'double',
        'supplier_id' => null,
        'delivery_date' => null,
        'unit_id' => null,
        'aux_prop_id' => null,
        'barcode' => null,
        'batch_no' => null,
        'pro_place' => null,
        'pro_reg_no' => null,
        'pro_license' => null,
        'tax_price' => 'double',
        'price' => 'double',
        'cess' => 'double',
        'all_amount' => 'double',
        'tax_amount' => 'double',
        'predis_amount' => 'double',
        'dis_amount' => 'double',
        'discount' => 'double',
        'dis_rate' => 'double',
        'dis_price' => 'double',
        'amount' => 'double',
        'bill_dis_before_amount' => 'double',
        'act_tax_price' => 'double',
        'bill_dis_distribution' => 'double',
        'act_non_tax_price' => 'double',
        'act_non_tax_amount' => 'double',
        'comment' => null,
        'custom_entity_field' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'material_id' => 'material_id',
        'stock_id' => 'stock_id',
        'sp_id' => 'sp_id',
        'apply_qty' => 'apply_qty',
        'qty' => 'qty',
        'supplier_id' => 'supplier_id',
        'delivery_date' => 'delivery_date',
        'unit_id' => 'unit_id',
        'aux_prop_id' => 'aux_prop_id',
        'barcode' => 'barcode',
        'batch_no' => 'batch_no',
        'pro_place' => 'pro_place',
        'pro_reg_no' => 'pro_reg_no',
        'pro_license' => 'pro_license',
        'tax_price' => 'tax_price',
        'price' => 'price',
        'cess' => 'cess',
        'all_amount' => 'all_amount',
        'tax_amount' => 'tax_amount',
        'predis_amount' => 'predis_amount',
        'dis_amount' => 'dis_amount',
        'discount' => 'discount',
        'dis_rate' => 'dis_rate',
        'dis_price' => 'dis_price',
        'amount' => 'amount',
        'bill_dis_before_amount' => 'bill_dis_before_amount',
        'act_tax_price' => 'act_tax_price',
        'bill_dis_distribution' => 'bill_dis_distribution',
        'act_non_tax_price' => 'act_non_tax_price',
        'act_non_tax_amount' => 'act_non_tax_amount',
        'comment' => 'comment',
        'custom_entity_field' => 'custom_entity_field'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'material_id' => 'setMaterialId',
        'stock_id' => 'setStockId',
        'sp_id' => 'setSpId',
        'apply_qty' => 'setApplyQty',
        'qty' => 'setQty',
        'supplier_id' => 'setSupplierId',
        'delivery_date' => 'setDeliveryDate',
        'unit_id' => 'setUnitId',
        'aux_prop_id' => 'setAuxPropId',
        'barcode' => 'setBarcode',
        'batch_no' => 'setBatchNo',
        'pro_place' => 'setProPlace',
        'pro_reg_no' => 'setProRegNo',
        'pro_license' => 'setProLicense',
        'tax_price' => 'setTaxPrice',
        'price' => 'setPrice',
        'cess' => 'setCess',
        'all_amount' => 'setAllAmount',
        'tax_amount' => 'setTaxAmount',
        'predis_amount' => 'setPredisAmount',
        'dis_amount' => 'setDisAmount',
        'discount' => 'setDiscount',
        'dis_rate' => 'setDisRate',
        'dis_price' => 'setDisPrice',
        'amount' => 'setAmount',
        'bill_dis_before_amount' => 'setBillDisBeforeAmount',
        'act_tax_price' => 'setActTaxPrice',
        'bill_dis_distribution' => 'setBillDisDistribution',
        'act_non_tax_price' => 'setActNonTaxPrice',
        'act_non_tax_amount' => 'setActNonTaxAmount',
        'comment' => 'setComment',
        'custom_entity_field' => 'setCustomEntityField'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'material_id' => 'getMaterialId',
        'stock_id' => 'getStockId',
        'sp_id' => 'getSpId',
        'apply_qty' => 'getApplyQty',
        'qty' => 'getQty',
        'supplier_id' => 'getSupplierId',
        'delivery_date' => 'getDeliveryDate',
        'unit_id' => 'getUnitId',
        'aux_prop_id' => 'getAuxPropId',
        'barcode' => 'getBarcode',
        'batch_no' => 'getBatchNo',
        'pro_place' => 'getProPlace',
        'pro_reg_no' => 'getProRegNo',
        'pro_license' => 'getProLicense',
        'tax_price' => 'getTaxPrice',
        'price' => 'getPrice',
        'cess' => 'getCess',
        'all_amount' => 'getAllAmount',
        'tax_amount' => 'getTaxAmount',
        'predis_amount' => 'getPredisAmount',
        'dis_amount' => 'getDisAmount',
        'discount' => 'getDiscount',
        'dis_rate' => 'getDisRate',
        'dis_price' => 'getDisPrice',
        'amount' => 'getAmount',
        'bill_dis_before_amount' => 'getBillDisBeforeAmount',
        'act_tax_price' => 'getActTaxPrice',
        'bill_dis_distribution' => 'getBillDisDistribution',
        'act_non_tax_price' => 'getActNonTaxPrice',
        'act_non_tax_amount' => 'getActNonTaxAmount',
        'comment' => 'getComment',
        'custom_entity_field' => 'getCustomEntityField'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['material_id'] = isset($data['material_id']) ? $data['material_id'] : null;
        $this->container['stock_id'] = isset($data['stock_id']) ? $data['stock_id'] : null;
        $this->container['sp_id'] = isset($data['sp_id']) ? $data['sp_id'] : null;
        $this->container['apply_qty'] = isset($data['apply_qty']) ? $data['apply_qty'] : null;
        $this->container['qty'] = isset($data['qty']) ? $data['qty'] : null;
        $this->container['supplier_id'] = isset($data['supplier_id']) ? $data['supplier_id'] : null;
        $this->container['delivery_date'] = isset($data['delivery_date']) ? $data['delivery_date'] : null;
        $this->container['unit_id'] = isset($data['unit_id']) ? $data['unit_id'] : null;
        $this->container['aux_prop_id'] = isset($data['aux_prop_id']) ? $data['aux_prop_id'] : null;
        $this->container['barcode'] = isset($data['barcode']) ? $data['barcode'] : null;
        $this->container['batch_no'] = isset($data['batch_no']) ? $data['batch_no'] : null;
        $this->container['pro_place'] = isset($data['pro_place']) ? $data['pro_place'] : null;
        $this->container['pro_reg_no'] = isset($data['pro_reg_no']) ? $data['pro_reg_no'] : null;
        $this->container['pro_license'] = isset($data['pro_license']) ? $data['pro_license'] : null;
        $this->container['tax_price'] = isset($data['tax_price']) ? $data['tax_price'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['cess'] = isset($data['cess']) ? $data['cess'] : null;
        $this->container['all_amount'] = isset($data['all_amount']) ? $data['all_amount'] : null;
        $this->container['tax_amount'] = isset($data['tax_amount']) ? $data['tax_amount'] : null;
        $this->container['predis_amount'] = isset($data['predis_amount']) ? $data['predis_amount'] : null;
        $this->container['dis_amount'] = isset($data['dis_amount']) ? $data['dis_amount'] : null;
        $this->container['discount'] = isset($data['discount']) ? $data['discount'] : null;
        $this->container['dis_rate'] = isset($data['dis_rate']) ? $data['dis_rate'] : null;
        $this->container['dis_price'] = isset($data['dis_price']) ? $data['dis_price'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['bill_dis_before_amount'] = isset($data['bill_dis_before_amount']) ? $data['bill_dis_before_amount'] : null;
        $this->container['act_tax_price'] = isset($data['act_tax_price']) ? $data['act_tax_price'] : null;
        $this->container['bill_dis_distribution'] = isset($data['bill_dis_distribution']) ? $data['bill_dis_distribution'] : null;
        $this->container['act_non_tax_price'] = isset($data['act_non_tax_price']) ? $data['act_non_tax_price'] : null;
        $this->container['act_non_tax_amount'] = isset($data['act_non_tax_amount']) ? $data['act_non_tax_amount'] : null;
        $this->container['comment'] = isset($data['comment']) ? $data['comment'] : null;
        $this->container['custom_entity_field'] = isset($data['custom_entity_field']) ? $data['custom_entity_field'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets material_id
     *
     * @return string
     */
    public function getMaterialId()
    {
        return $this->container['material_id'];
    }

    /**
     * Sets material_id
     *
     * @param string $material_id material_id
     *
     * @return $this
     */
    public function setMaterialId($material_id)
    {
        $this->container['material_id'] = $material_id;

        return $this;
    }

    /**
     * Gets stock_id
     *
     * @return string
     */
    public function getStockId()
    {
        return $this->container['stock_id'];
    }

    /**
     * Sets stock_id
     *
     * @param string $stock_id stock_id
     *
     * @return $this
     */
    public function setStockId($stock_id)
    {
        $this->container['stock_id'] = $stock_id;

        return $this;
    }

    /**
     * Gets sp_id
     *
     * @return string
     */
    public function getSpId()
    {
        return $this->container['sp_id'];
    }

    /**
     * Sets sp_id
     *
     * @param string $sp_id sp_id
     *
     * @return $this
     */
    public function setSpId($sp_id)
    {
        $this->container['sp_id'] = $sp_id;

        return $this;
    }

    /**
     * Gets apply_qty
     *
     * @return double
     */
    public function getApplyQty()
    {
        return $this->container['apply_qty'];
    }

    /**
     * Sets apply_qty
     *
     * @param double $apply_qty apply_qty
     *
     * @return $this
     */
    public function setApplyQty($apply_qty)
    {
        $this->container['apply_qty'] = $apply_qty;

        return $this;
    }

    /**
     * Gets qty
     *
     * @return double
     */
    public function getQty()
    {
        return $this->container['qty'];
    }

    /**
     * Sets qty
     *
     * @param double $qty qty
     *
     * @return $this
     */
    public function setQty($qty)
    {
        $this->container['qty'] = $qty;

        return $this;
    }

    /**
     * Gets supplier_id
     *
     * @return string
     */
    public function getSupplierId()
    {
        return $this->container['supplier_id'];
    }

    /**
     * Sets supplier_id
     *
     * @param string $supplier_id supplier_id
     *
     * @return $this
     */
    public function setSupplierId($supplier_id)
    {
        $this->container['supplier_id'] = $supplier_id;

        return $this;
    }

    /**
     * Gets delivery_date
     *
     * @return string
     */
    public function getDeliveryDate()
    {
        return $this->container['delivery_date'];
    }

    /**
     * Sets delivery_date
     *
     * @param string $delivery_date delivery_date
     *
     * @return $this
     */
    public function setDeliveryDate($delivery_date)
    {
        $this->container['delivery_date'] = $delivery_date;

        return $this;
    }

    /**
     * Gets unit_id
     *
     * @return string
     */
    public function getUnitId()
    {
        return $this->container['unit_id'];
    }

    /**
     * Sets unit_id
     *
     * @param string $unit_id unit_id
     *
     * @return $this
     */
    public function setUnitId($unit_id)
    {
        $this->container['unit_id'] = $unit_id;

        return $this;
    }

    /**
     * Gets aux_prop_id
     *
     * @return string
     */
    public function getAuxPropId()
    {
        return $this->container['aux_prop_id'];
    }

    /**
     * Sets aux_prop_id
     *
     * @param string $aux_prop_id aux_prop_id
     *
     * @return $this
     */
    public function setAuxPropId($aux_prop_id)
    {
        $this->container['aux_prop_id'] = $aux_prop_id;

        return $this;
    }

    /**
     * Gets barcode
     *
     * @return string
     */
    public function getBarcode()
    {
        return $this->container['barcode'];
    }

    /**
     * Sets barcode
     *
     * @param string $barcode barcode
     *
     * @return $this
     */
    public function setBarcode($barcode)
    {
        $this->container['barcode'] = $barcode;

        return $this;
    }

    /**
     * Gets batch_no
     *
     * @return string
     */
    public function getBatchNo()
    {
        return $this->container['batch_no'];
    }

    /**
     * Sets batch_no
     *
     * @param string $batch_no batch_no
     *
     * @return $this
     */
    public function setBatchNo($batch_no)
    {
        $this->container['batch_no'] = $batch_no;

        return $this;
    }

    /**
     * Gets pro_place
     *
     * @return string
     */
    public function getProPlace()
    {
        return $this->container['pro_place'];
    }

    /**
     * Sets pro_place
     *
     * @param string $pro_place pro_place
     *
     * @return $this
     */
    public function setProPlace($pro_place)
    {
        $this->container['pro_place'] = $pro_place;

        return $this;
    }

    /**
     * Gets pro_reg_no
     *
     * @return string
     */
    public function getProRegNo()
    {
        return $this->container['pro_reg_no'];
    }

    /**
     * Sets pro_reg_no
     *
     * @param string $pro_reg_no pro_reg_no
     *
     * @return $this
     */
    public function setProRegNo($pro_reg_no)
    {
        $this->container['pro_reg_no'] = $pro_reg_no;

        return $this;
    }

    /**
     * Gets pro_license
     *
     * @return string
     */
    public function getProLicense()
    {
        return $this->container['pro_license'];
    }

    /**
     * Sets pro_license
     *
     * @param string $pro_license pro_license
     *
     * @return $this
     */
    public function setProLicense($pro_license)
    {
        $this->container['pro_license'] = $pro_license;

        return $this;
    }

    /**
     * Gets tax_price
     *
     * @return double
     */
    public function getTaxPrice()
    {
        return $this->container['tax_price'];
    }

    /**
     * Sets tax_price
     *
     * @param double $tax_price tax_price
     *
     * @return $this
     */
    public function setTaxPrice($tax_price)
    {
        $this->container['tax_price'] = $tax_price;

        return $this;
    }

    /**
     * Gets price
     *
     * @return double
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param double $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets cess
     *
     * @return double
     */
    public function getCess()
    {
        return $this->container['cess'];
    }

    /**
     * Sets cess
     *
     * @param double $cess cess
     *
     * @return $this
     */
    public function setCess($cess)
    {
        $this->container['cess'] = $cess;

        return $this;
    }

    /**
     * Gets all_amount
     *
     * @return double
     */
    public function getAllAmount()
    {
        return $this->container['all_amount'];
    }

    /**
     * Sets all_amount
     *
     * @param double $all_amount all_amount
     *
     * @return $this
     */
    public function setAllAmount($all_amount)
    {
        $this->container['all_amount'] = $all_amount;

        return $this;
    }

    /**
     * Gets tax_amount
     *
     * @return double
     */
    public function getTaxAmount()
    {
        return $this->container['tax_amount'];
    }

    /**
     * Sets tax_amount
     *
     * @param double $tax_amount tax_amount
     *
     * @return $this
     */
    public function setTaxAmount($tax_amount)
    {
        $this->container['tax_amount'] = $tax_amount;

        return $this;
    }

    /**
     * Gets predis_amount
     *
     * @return double
     */
    public function getPredisAmount()
    {
        return $this->container['predis_amount'];
    }

    /**
     * Sets predis_amount
     *
     * @param double $predis_amount predis_amount
     *
     * @return $this
     */
    public function setPredisAmount($predis_amount)
    {
        $this->container['predis_amount'] = $predis_amount;

        return $this;
    }

    /**
     * Gets dis_amount
     *
     * @return double
     */
    public function getDisAmount()
    {
        return $this->container['dis_amount'];
    }

    /**
     * Sets dis_amount
     *
     * @param double $dis_amount dis_amount
     *
     * @return $this
     */
    public function setDisAmount($dis_amount)
    {
        $this->container['dis_amount'] = $dis_amount;

        return $this;
    }

    /**
     * Gets discount
     *
     * @return double
     */
    public function getDiscount()
    {
        return $this->container['discount'];
    }

    /**
     * Sets discount
     *
     * @param double $discount discount
     *
     * @return $this
     */
    public function setDiscount($discount)
    {
        $this->container['discount'] = $discount;

        return $this;
    }

    /**
     * Gets dis_rate
     *
     * @return double
     */
    public function getDisRate()
    {
        return $this->container['dis_rate'];
    }

    /**
     * Sets dis_rate
     *
     * @param double $dis_rate dis_rate
     *
     * @return $this
     */
    public function setDisRate($dis_rate)
    {
        $this->container['dis_rate'] = $dis_rate;

        return $this;
    }

    /**
     * Gets dis_price
     *
     * @return double
     */
    public function getDisPrice()
    {
        return $this->container['dis_price'];
    }

    /**
     * Sets dis_price
     *
     * @param double $dis_price dis_price
     *
     * @return $this
     */
    public function setDisPrice($dis_price)
    {
        $this->container['dis_price'] = $dis_price;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return double
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param double $amount amount
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets bill_dis_before_amount
     *
     * @return double
     */
    public function getBillDisBeforeAmount()
    {
        return $this->container['bill_dis_before_amount'];
    }

    /**
     * Sets bill_dis_before_amount
     *
     * @param double $bill_dis_before_amount bill_dis_before_amount
     *
     * @return $this
     */
    public function setBillDisBeforeAmount($bill_dis_before_amount)
    {
        $this->container['bill_dis_before_amount'] = $bill_dis_before_amount;

        return $this;
    }

    /**
     * Gets act_tax_price
     *
     * @return double
     */
    public function getActTaxPrice()
    {
        return $this->container['act_tax_price'];
    }

    /**
     * Sets act_tax_price
     *
     * @param double $act_tax_price act_tax_price
     *
     * @return $this
     */
    public function setActTaxPrice($act_tax_price)
    {
        $this->container['act_tax_price'] = $act_tax_price;

        return $this;
    }

    /**
     * Gets bill_dis_distribution
     *
     * @return double
     */
    public function getBillDisDistribution()
    {
        return $this->container['bill_dis_distribution'];
    }

    /**
     * Sets bill_dis_distribution
     *
     * @param double $bill_dis_distribution bill_dis_distribution
     *
     * @return $this
     */
    public function setBillDisDistribution($bill_dis_distribution)
    {
        $this->container['bill_dis_distribution'] = $bill_dis_distribution;

        return $this;
    }

    /**
     * Gets act_non_tax_price
     *
     * @return double
     */
    public function getActNonTaxPrice()
    {
        return $this->container['act_non_tax_price'];
    }

    /**
     * Sets act_non_tax_price
     *
     * @param double $act_non_tax_price act_non_tax_price
     *
     * @return $this
     */
    public function setActNonTaxPrice($act_non_tax_price)
    {
        $this->container['act_non_tax_price'] = $act_non_tax_price;

        return $this;
    }

    /**
     * Gets act_non_tax_amount
     *
     * @return double
     */
    public function getActNonTaxAmount()
    {
        return $this->container['act_non_tax_amount'];
    }

    /**
     * Sets act_non_tax_amount
     *
     * @param double $act_non_tax_amount act_non_tax_amount
     *
     * @return $this
     */
    public function setActNonTaxAmount($act_non_tax_amount)
    {
        $this->container['act_non_tax_amount'] = $act_non_tax_amount;

        return $this;
    }

    /**
     * Gets comment
     *
     * @return string
     */
    public function getComment()
    {
        return $this->container['comment'];
    }

    /**
     * Sets comment
     *
     * @param string $comment comment
     *
     * @return $this
     */
    public function setComment($comment)
    {
        $this->container['comment'] = $comment;

        return $this;
    }

    /**
     * Gets custom_entity_field
     *
     * @return map[string,string]
     */
    public function getCustomEntityField()
    {
        return $this->container['custom_entity_field'];
    }

    /**
     * Sets custom_entity_field
     *
     * @param map[string,string] $custom_entity_field custom_entity_field
     *
     * @return $this
     */
    public function setCustomEntityField($custom_entity_field)
    {
        $this->container['custom_entity_field'] = $custom_entity_field;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


