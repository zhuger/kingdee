<?php
/**
 * RefundSaveReq
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * RefundSaveReq Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RefundSaveReq implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RefundSaveReq';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cmd' => 'string',
        'refund_no' => 'string',
        'refund_desc' => 'string',
        'refund_amount' => 'string',
        'order_no' => 'string',
        'mch_id' => 'string',
        'shop_id' => 'string',
        'terminal_no' => 'string',
        'terminal_ip' => 'string',
        'channel_order_no' => 'string',
        'service_group_name' => 'string',
        'sign_msg' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cmd' => null,
        'refund_no' => null,
        'refund_desc' => null,
        'refund_amount' => null,
        'order_no' => null,
        'mch_id' => null,
        'shop_id' => null,
        'terminal_no' => null,
        'terminal_ip' => null,
        'channel_order_no' => null,
        'service_group_name' => null,
        'sign_msg' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cmd' => 'cmd',
        'refund_no' => 'refund_no',
        'refund_desc' => 'refund_desc',
        'refund_amount' => 'refund_amount',
        'order_no' => 'order_no',
        'mch_id' => 'mch_id',
        'shop_id' => 'shop_id',
        'terminal_no' => 'terminal_no',
        'terminal_ip' => 'terminal_ip',
        'channel_order_no' => 'channel_order_no',
        'service_group_name' => 'service_group_name',
        'sign_msg' => 'sign_msg'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cmd' => 'setCmd',
        'refund_no' => 'setRefundNo',
        'refund_desc' => 'setRefundDesc',
        'refund_amount' => 'setRefundAmount',
        'order_no' => 'setOrderNo',
        'mch_id' => 'setMchId',
        'shop_id' => 'setShopId',
        'terminal_no' => 'setTerminalNo',
        'terminal_ip' => 'setTerminalIp',
        'channel_order_no' => 'setChannelOrderNo',
        'service_group_name' => 'setServiceGroupName',
        'sign_msg' => 'setSignMsg'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cmd' => 'getCmd',
        'refund_no' => 'getRefundNo',
        'refund_desc' => 'getRefundDesc',
        'refund_amount' => 'getRefundAmount',
        'order_no' => 'getOrderNo',
        'mch_id' => 'getMchId',
        'shop_id' => 'getShopId',
        'terminal_no' => 'getTerminalNo',
        'terminal_ip' => 'getTerminalIp',
        'channel_order_no' => 'getChannelOrderNo',
        'service_group_name' => 'getServiceGroupName',
        'sign_msg' => 'getSignMsg'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cmd'] = isset($data['cmd']) ? $data['cmd'] : null;
        $this->container['refund_no'] = isset($data['refund_no']) ? $data['refund_no'] : null;
        $this->container['refund_desc'] = isset($data['refund_desc']) ? $data['refund_desc'] : null;
        $this->container['refund_amount'] = isset($data['refund_amount']) ? $data['refund_amount'] : null;
        $this->container['order_no'] = isset($data['order_no']) ? $data['order_no'] : null;
        $this->container['mch_id'] = isset($data['mch_id']) ? $data['mch_id'] : null;
        $this->container['shop_id'] = isset($data['shop_id']) ? $data['shop_id'] : null;
        $this->container['terminal_no'] = isset($data['terminal_no']) ? $data['terminal_no'] : null;
        $this->container['terminal_ip'] = isset($data['terminal_ip']) ? $data['terminal_ip'] : null;
        $this->container['channel_order_no'] = isset($data['channel_order_no']) ? $data['channel_order_no'] : null;
        $this->container['service_group_name'] = isset($data['service_group_name']) ? $data['service_group_name'] : null;
        $this->container['sign_msg'] = isset($data['sign_msg']) ? $data['sign_msg'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets cmd
     *
     * @return string
     */
    public function getCmd()
    {
        return $this->container['cmd'];
    }

    /**
     * Sets cmd
     *
     * @param string $cmd cmd
     *
     * @return $this
     */
    public function setCmd($cmd)
    {
        $this->container['cmd'] = $cmd;

        return $this;
    }

    /**
     * Gets refund_no
     *
     * @return string
     */
    public function getRefundNo()
    {
        return $this->container['refund_no'];
    }

    /**
     * Sets refund_no
     *
     * @param string $refund_no refund_no
     *
     * @return $this
     */
    public function setRefundNo($refund_no)
    {
        $this->container['refund_no'] = $refund_no;

        return $this;
    }

    /**
     * Gets refund_desc
     *
     * @return string
     */
    public function getRefundDesc()
    {
        return $this->container['refund_desc'];
    }

    /**
     * Sets refund_desc
     *
     * @param string $refund_desc refund_desc
     *
     * @return $this
     */
    public function setRefundDesc($refund_desc)
    {
        $this->container['refund_desc'] = $refund_desc;

        return $this;
    }

    /**
     * Gets refund_amount
     *
     * @return string
     */
    public function getRefundAmount()
    {
        return $this->container['refund_amount'];
    }

    /**
     * Sets refund_amount
     *
     * @param string $refund_amount refund_amount
     *
     * @return $this
     */
    public function setRefundAmount($refund_amount)
    {
        $this->container['refund_amount'] = $refund_amount;

        return $this;
    }

    /**
     * Gets order_no
     *
     * @return string
     */
    public function getOrderNo()
    {
        return $this->container['order_no'];
    }

    /**
     * Sets order_no
     *
     * @param string $order_no order_no
     *
     * @return $this
     */
    public function setOrderNo($order_no)
    {
        $this->container['order_no'] = $order_no;

        return $this;
    }

    /**
     * Gets mch_id
     *
     * @return string
     */
    public function getMchId()
    {
        return $this->container['mch_id'];
    }

    /**
     * Sets mch_id
     *
     * @param string $mch_id mch_id
     *
     * @return $this
     */
    public function setMchId($mch_id)
    {
        $this->container['mch_id'] = $mch_id;

        return $this;
    }

    /**
     * Gets shop_id
     *
     * @return string
     */
    public function getShopId()
    {
        return $this->container['shop_id'];
    }

    /**
     * Sets shop_id
     *
     * @param string $shop_id shop_id
     *
     * @return $this
     */
    public function setShopId($shop_id)
    {
        $this->container['shop_id'] = $shop_id;

        return $this;
    }

    /**
     * Gets terminal_no
     *
     * @return string
     */
    public function getTerminalNo()
    {
        return $this->container['terminal_no'];
    }

    /**
     * Sets terminal_no
     *
     * @param string $terminal_no terminal_no
     *
     * @return $this
     */
    public function setTerminalNo($terminal_no)
    {
        $this->container['terminal_no'] = $terminal_no;

        return $this;
    }

    /**
     * Gets terminal_ip
     *
     * @return string
     */
    public function getTerminalIp()
    {
        return $this->container['terminal_ip'];
    }

    /**
     * Sets terminal_ip
     *
     * @param string $terminal_ip terminal_ip
     *
     * @return $this
     */
    public function setTerminalIp($terminal_ip)
    {
        $this->container['terminal_ip'] = $terminal_ip;

        return $this;
    }

    /**
     * Gets channel_order_no
     *
     * @return string
     */
    public function getChannelOrderNo()
    {
        return $this->container['channel_order_no'];
    }

    /**
     * Sets channel_order_no
     *
     * @param string $channel_order_no channel_order_no
     *
     * @return $this
     */
    public function setChannelOrderNo($channel_order_no)
    {
        $this->container['channel_order_no'] = $channel_order_no;

        return $this;
    }

    /**
     * Gets service_group_name
     *
     * @return string
     */
    public function getServiceGroupName()
    {
        return $this->container['service_group_name'];
    }

    /**
     * Sets service_group_name
     *
     * @param string $service_group_name service_group_name
     *
     * @return $this
     */
    public function setServiceGroupName($service_group_name)
    {
        $this->container['service_group_name'] = $service_group_name;

        return $this;
    }

    /**
     * Gets sign_msg
     *
     * @return string
     */
    public function getSignMsg()
    {
        return $this->container['sign_msg'];
    }

    /**
     * Sets sign_msg
     *
     * @param string $sign_msg sign_msg
     *
     * @return $this
     */
    public function setSignMsg($sign_msg)
    {
        $this->container['sign_msg'] = $sign_msg;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


