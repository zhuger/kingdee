<?php
/**
 * ShelfProtoRow
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * ShelfProtoRow Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ShelfProtoRow implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ShelfProto.Row';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'status' => 'string',
        'create_time' => 'string',
        'modify_time' => 'string',
        'store_id' => 'string',
        'store_number' => 'string',
        'store_name' => 'string',
        'aux_prop_id' => 'string',
        'aux_prop_number' => 'string',
        'aux_prop_name' => 'string',
        'material_id' => 'string',
        'material_number' => 'string',
        'material_name' => 'string',
        'material_barcode' => 'string',
        'material_model' => 'string',
        'material_enable' => 'string',
        'material_url' => 'string',
        'material_min_inventory_qty' => 'string',
        'material_max_inventory_qty' => 'string',
        'material_sec_inventory_qty' => 'string',
        'material_parent_id' => 'string',
        'material_parent_number' => 'string',
        'material_parent_name' => 'string',
        'material_brand_id' => 'string',
        'material_brand_name' => 'string',
        'material_brand_number' => 'string',
        'material_base_unit_id' => 'string',
        'material_base_unit_number' => 'string',
        'material_base_unit_name' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'status' => null,
        'create_time' => null,
        'modify_time' => null,
        'store_id' => null,
        'store_number' => null,
        'store_name' => null,
        'aux_prop_id' => null,
        'aux_prop_number' => null,
        'aux_prop_name' => null,
        'material_id' => null,
        'material_number' => null,
        'material_name' => null,
        'material_barcode' => null,
        'material_model' => null,
        'material_enable' => null,
        'material_url' => null,
        'material_min_inventory_qty' => null,
        'material_max_inventory_qty' => null,
        'material_sec_inventory_qty' => null,
        'material_parent_id' => null,
        'material_parent_number' => null,
        'material_parent_name' => null,
        'material_brand_id' => null,
        'material_brand_name' => null,
        'material_brand_number' => null,
        'material_base_unit_id' => null,
        'material_base_unit_number' => null,
        'material_base_unit_name' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'status' => 'status',
        'create_time' => 'create_time',
        'modify_time' => 'modify_time',
        'store_id' => 'store_id',
        'store_number' => 'store_number',
        'store_name' => 'store_name',
        'aux_prop_id' => 'aux_prop_id',
        'aux_prop_number' => 'aux_prop_number',
        'aux_prop_name' => 'aux_prop_name',
        'material_id' => 'material_id',
        'material_number' => 'material_number',
        'material_name' => 'material_name',
        'material_barcode' => 'material_barcode',
        'material_model' => 'material_model',
        'material_enable' => 'material_enable',
        'material_url' => 'material_url',
        'material_min_inventory_qty' => 'material_min_inventory_qty',
        'material_max_inventory_qty' => 'material_max_inventory_qty',
        'material_sec_inventory_qty' => 'material_sec_inventory_qty',
        'material_parent_id' => 'material_parent_id',
        'material_parent_number' => 'material_parent_number',
        'material_parent_name' => 'material_parent_name',
        'material_brand_id' => 'material_brand_id',
        'material_brand_name' => 'material_brand_name',
        'material_brand_number' => 'material_brand_number',
        'material_base_unit_id' => 'material_base_unit_id',
        'material_base_unit_number' => 'material_base_unit_number',
        'material_base_unit_name' => 'material_base_unit_name'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'status' => 'setStatus',
        'create_time' => 'setCreateTime',
        'modify_time' => 'setModifyTime',
        'store_id' => 'setStoreId',
        'store_number' => 'setStoreNumber',
        'store_name' => 'setStoreName',
        'aux_prop_id' => 'setAuxPropId',
        'aux_prop_number' => 'setAuxPropNumber',
        'aux_prop_name' => 'setAuxPropName',
        'material_id' => 'setMaterialId',
        'material_number' => 'setMaterialNumber',
        'material_name' => 'setMaterialName',
        'material_barcode' => 'setMaterialBarcode',
        'material_model' => 'setMaterialModel',
        'material_enable' => 'setMaterialEnable',
        'material_url' => 'setMaterialUrl',
        'material_min_inventory_qty' => 'setMaterialMinInventoryQty',
        'material_max_inventory_qty' => 'setMaterialMaxInventoryQty',
        'material_sec_inventory_qty' => 'setMaterialSecInventoryQty',
        'material_parent_id' => 'setMaterialParentId',
        'material_parent_number' => 'setMaterialParentNumber',
        'material_parent_name' => 'setMaterialParentName',
        'material_brand_id' => 'setMaterialBrandId',
        'material_brand_name' => 'setMaterialBrandName',
        'material_brand_number' => 'setMaterialBrandNumber',
        'material_base_unit_id' => 'setMaterialBaseUnitId',
        'material_base_unit_number' => 'setMaterialBaseUnitNumber',
        'material_base_unit_name' => 'setMaterialBaseUnitName'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'status' => 'getStatus',
        'create_time' => 'getCreateTime',
        'modify_time' => 'getModifyTime',
        'store_id' => 'getStoreId',
        'store_number' => 'getStoreNumber',
        'store_name' => 'getStoreName',
        'aux_prop_id' => 'getAuxPropId',
        'aux_prop_number' => 'getAuxPropNumber',
        'aux_prop_name' => 'getAuxPropName',
        'material_id' => 'getMaterialId',
        'material_number' => 'getMaterialNumber',
        'material_name' => 'getMaterialName',
        'material_barcode' => 'getMaterialBarcode',
        'material_model' => 'getMaterialModel',
        'material_enable' => 'getMaterialEnable',
        'material_url' => 'getMaterialUrl',
        'material_min_inventory_qty' => 'getMaterialMinInventoryQty',
        'material_max_inventory_qty' => 'getMaterialMaxInventoryQty',
        'material_sec_inventory_qty' => 'getMaterialSecInventoryQty',
        'material_parent_id' => 'getMaterialParentId',
        'material_parent_number' => 'getMaterialParentNumber',
        'material_parent_name' => 'getMaterialParentName',
        'material_brand_id' => 'getMaterialBrandId',
        'material_brand_name' => 'getMaterialBrandName',
        'material_brand_number' => 'getMaterialBrandNumber',
        'material_base_unit_id' => 'getMaterialBaseUnitId',
        'material_base_unit_number' => 'getMaterialBaseUnitNumber',
        'material_base_unit_name' => 'getMaterialBaseUnitName'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['modify_time'] = isset($data['modify_time']) ? $data['modify_time'] : null;
        $this->container['store_id'] = isset($data['store_id']) ? $data['store_id'] : null;
        $this->container['store_number'] = isset($data['store_number']) ? $data['store_number'] : null;
        $this->container['store_name'] = isset($data['store_name']) ? $data['store_name'] : null;
        $this->container['aux_prop_id'] = isset($data['aux_prop_id']) ? $data['aux_prop_id'] : null;
        $this->container['aux_prop_number'] = isset($data['aux_prop_number']) ? $data['aux_prop_number'] : null;
        $this->container['aux_prop_name'] = isset($data['aux_prop_name']) ? $data['aux_prop_name'] : null;
        $this->container['material_id'] = isset($data['material_id']) ? $data['material_id'] : null;
        $this->container['material_number'] = isset($data['material_number']) ? $data['material_number'] : null;
        $this->container['material_name'] = isset($data['material_name']) ? $data['material_name'] : null;
        $this->container['material_barcode'] = isset($data['material_barcode']) ? $data['material_barcode'] : null;
        $this->container['material_model'] = isset($data['material_model']) ? $data['material_model'] : null;
        $this->container['material_enable'] = isset($data['material_enable']) ? $data['material_enable'] : null;
        $this->container['material_url'] = isset($data['material_url']) ? $data['material_url'] : null;
        $this->container['material_min_inventory_qty'] = isset($data['material_min_inventory_qty']) ? $data['material_min_inventory_qty'] : null;
        $this->container['material_max_inventory_qty'] = isset($data['material_max_inventory_qty']) ? $data['material_max_inventory_qty'] : null;
        $this->container['material_sec_inventory_qty'] = isset($data['material_sec_inventory_qty']) ? $data['material_sec_inventory_qty'] : null;
        $this->container['material_parent_id'] = isset($data['material_parent_id']) ? $data['material_parent_id'] : null;
        $this->container['material_parent_number'] = isset($data['material_parent_number']) ? $data['material_parent_number'] : null;
        $this->container['material_parent_name'] = isset($data['material_parent_name']) ? $data['material_parent_name'] : null;
        $this->container['material_brand_id'] = isset($data['material_brand_id']) ? $data['material_brand_id'] : null;
        $this->container['material_brand_name'] = isset($data['material_brand_name']) ? $data['material_brand_name'] : null;
        $this->container['material_brand_number'] = isset($data['material_brand_number']) ? $data['material_brand_number'] : null;
        $this->container['material_base_unit_id'] = isset($data['material_base_unit_id']) ? $data['material_base_unit_id'] : null;
        $this->container['material_base_unit_number'] = isset($data['material_base_unit_number']) ? $data['material_base_unit_number'] : null;
        $this->container['material_base_unit_name'] = isset($data['material_base_unit_name']) ? $data['material_base_unit_name'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return string
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param string $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets modify_time
     *
     * @return string
     */
    public function getModifyTime()
    {
        return $this->container['modify_time'];
    }

    /**
     * Sets modify_time
     *
     * @param string $modify_time modify_time
     *
     * @return $this
     */
    public function setModifyTime($modify_time)
    {
        $this->container['modify_time'] = $modify_time;

        return $this;
    }

    /**
     * Gets store_id
     *
     * @return string
     */
    public function getStoreId()
    {
        return $this->container['store_id'];
    }

    /**
     * Sets store_id
     *
     * @param string $store_id store_id
     *
     * @return $this
     */
    public function setStoreId($store_id)
    {
        $this->container['store_id'] = $store_id;

        return $this;
    }

    /**
     * Gets store_number
     *
     * @return string
     */
    public function getStoreNumber()
    {
        return $this->container['store_number'];
    }

    /**
     * Sets store_number
     *
     * @param string $store_number store_number
     *
     * @return $this
     */
    public function setStoreNumber($store_number)
    {
        $this->container['store_number'] = $store_number;

        return $this;
    }

    /**
     * Gets store_name
     *
     * @return string
     */
    public function getStoreName()
    {
        return $this->container['store_name'];
    }

    /**
     * Sets store_name
     *
     * @param string $store_name store_name
     *
     * @return $this
     */
    public function setStoreName($store_name)
    {
        $this->container['store_name'] = $store_name;

        return $this;
    }

    /**
     * Gets aux_prop_id
     *
     * @return string
     */
    public function getAuxPropId()
    {
        return $this->container['aux_prop_id'];
    }

    /**
     * Sets aux_prop_id
     *
     * @param string $aux_prop_id aux_prop_id
     *
     * @return $this
     */
    public function setAuxPropId($aux_prop_id)
    {
        $this->container['aux_prop_id'] = $aux_prop_id;

        return $this;
    }

    /**
     * Gets aux_prop_number
     *
     * @return string
     */
    public function getAuxPropNumber()
    {
        return $this->container['aux_prop_number'];
    }

    /**
     * Sets aux_prop_number
     *
     * @param string $aux_prop_number aux_prop_number
     *
     * @return $this
     */
    public function setAuxPropNumber($aux_prop_number)
    {
        $this->container['aux_prop_number'] = $aux_prop_number;

        return $this;
    }

    /**
     * Gets aux_prop_name
     *
     * @return string
     */
    public function getAuxPropName()
    {
        return $this->container['aux_prop_name'];
    }

    /**
     * Sets aux_prop_name
     *
     * @param string $aux_prop_name aux_prop_name
     *
     * @return $this
     */
    public function setAuxPropName($aux_prop_name)
    {
        $this->container['aux_prop_name'] = $aux_prop_name;

        return $this;
    }

    /**
     * Gets material_id
     *
     * @return string
     */
    public function getMaterialId()
    {
        return $this->container['material_id'];
    }

    /**
     * Sets material_id
     *
     * @param string $material_id material_id
     *
     * @return $this
     */
    public function setMaterialId($material_id)
    {
        $this->container['material_id'] = $material_id;

        return $this;
    }

    /**
     * Gets material_number
     *
     * @return string
     */
    public function getMaterialNumber()
    {
        return $this->container['material_number'];
    }

    /**
     * Sets material_number
     *
     * @param string $material_number material_number
     *
     * @return $this
     */
    public function setMaterialNumber($material_number)
    {
        $this->container['material_number'] = $material_number;

        return $this;
    }

    /**
     * Gets material_name
     *
     * @return string
     */
    public function getMaterialName()
    {
        return $this->container['material_name'];
    }

    /**
     * Sets material_name
     *
     * @param string $material_name material_name
     *
     * @return $this
     */
    public function setMaterialName($material_name)
    {
        $this->container['material_name'] = $material_name;

        return $this;
    }

    /**
     * Gets material_barcode
     *
     * @return string
     */
    public function getMaterialBarcode()
    {
        return $this->container['material_barcode'];
    }

    /**
     * Sets material_barcode
     *
     * @param string $material_barcode material_barcode
     *
     * @return $this
     */
    public function setMaterialBarcode($material_barcode)
    {
        $this->container['material_barcode'] = $material_barcode;

        return $this;
    }

    /**
     * Gets material_model
     *
     * @return string
     */
    public function getMaterialModel()
    {
        return $this->container['material_model'];
    }

    /**
     * Sets material_model
     *
     * @param string $material_model material_model
     *
     * @return $this
     */
    public function setMaterialModel($material_model)
    {
        $this->container['material_model'] = $material_model;

        return $this;
    }

    /**
     * Gets material_enable
     *
     * @return string
     */
    public function getMaterialEnable()
    {
        return $this->container['material_enable'];
    }

    /**
     * Sets material_enable
     *
     * @param string $material_enable material_enable
     *
     * @return $this
     */
    public function setMaterialEnable($material_enable)
    {
        $this->container['material_enable'] = $material_enable;

        return $this;
    }

    /**
     * Gets material_url
     *
     * @return string
     */
    public function getMaterialUrl()
    {
        return $this->container['material_url'];
    }

    /**
     * Sets material_url
     *
     * @param string $material_url material_url
     *
     * @return $this
     */
    public function setMaterialUrl($material_url)
    {
        $this->container['material_url'] = $material_url;

        return $this;
    }

    /**
     * Gets material_min_inventory_qty
     *
     * @return string
     */
    public function getMaterialMinInventoryQty()
    {
        return $this->container['material_min_inventory_qty'];
    }

    /**
     * Sets material_min_inventory_qty
     *
     * @param string $material_min_inventory_qty material_min_inventory_qty
     *
     * @return $this
     */
    public function setMaterialMinInventoryQty($material_min_inventory_qty)
    {
        $this->container['material_min_inventory_qty'] = $material_min_inventory_qty;

        return $this;
    }

    /**
     * Gets material_max_inventory_qty
     *
     * @return string
     */
    public function getMaterialMaxInventoryQty()
    {
        return $this->container['material_max_inventory_qty'];
    }

    /**
     * Sets material_max_inventory_qty
     *
     * @param string $material_max_inventory_qty material_max_inventory_qty
     *
     * @return $this
     */
    public function setMaterialMaxInventoryQty($material_max_inventory_qty)
    {
        $this->container['material_max_inventory_qty'] = $material_max_inventory_qty;

        return $this;
    }

    /**
     * Gets material_sec_inventory_qty
     *
     * @return string
     */
    public function getMaterialSecInventoryQty()
    {
        return $this->container['material_sec_inventory_qty'];
    }

    /**
     * Sets material_sec_inventory_qty
     *
     * @param string $material_sec_inventory_qty material_sec_inventory_qty
     *
     * @return $this
     */
    public function setMaterialSecInventoryQty($material_sec_inventory_qty)
    {
        $this->container['material_sec_inventory_qty'] = $material_sec_inventory_qty;

        return $this;
    }

    /**
     * Gets material_parent_id
     *
     * @return string
     */
    public function getMaterialParentId()
    {
        return $this->container['material_parent_id'];
    }

    /**
     * Sets material_parent_id
     *
     * @param string $material_parent_id material_parent_id
     *
     * @return $this
     */
    public function setMaterialParentId($material_parent_id)
    {
        $this->container['material_parent_id'] = $material_parent_id;

        return $this;
    }

    /**
     * Gets material_parent_number
     *
     * @return string
     */
    public function getMaterialParentNumber()
    {
        return $this->container['material_parent_number'];
    }

    /**
     * Sets material_parent_number
     *
     * @param string $material_parent_number material_parent_number
     *
     * @return $this
     */
    public function setMaterialParentNumber($material_parent_number)
    {
        $this->container['material_parent_number'] = $material_parent_number;

        return $this;
    }

    /**
     * Gets material_parent_name
     *
     * @return string
     */
    public function getMaterialParentName()
    {
        return $this->container['material_parent_name'];
    }

    /**
     * Sets material_parent_name
     *
     * @param string $material_parent_name material_parent_name
     *
     * @return $this
     */
    public function setMaterialParentName($material_parent_name)
    {
        $this->container['material_parent_name'] = $material_parent_name;

        return $this;
    }

    /**
     * Gets material_brand_id
     *
     * @return string
     */
    public function getMaterialBrandId()
    {
        return $this->container['material_brand_id'];
    }

    /**
     * Sets material_brand_id
     *
     * @param string $material_brand_id material_brand_id
     *
     * @return $this
     */
    public function setMaterialBrandId($material_brand_id)
    {
        $this->container['material_brand_id'] = $material_brand_id;

        return $this;
    }

    /**
     * Gets material_brand_name
     *
     * @return string
     */
    public function getMaterialBrandName()
    {
        return $this->container['material_brand_name'];
    }

    /**
     * Sets material_brand_name
     *
     * @param string $material_brand_name material_brand_name
     *
     * @return $this
     */
    public function setMaterialBrandName($material_brand_name)
    {
        $this->container['material_brand_name'] = $material_brand_name;

        return $this;
    }

    /**
     * Gets material_brand_number
     *
     * @return string
     */
    public function getMaterialBrandNumber()
    {
        return $this->container['material_brand_number'];
    }

    /**
     * Sets material_brand_number
     *
     * @param string $material_brand_number material_brand_number
     *
     * @return $this
     */
    public function setMaterialBrandNumber($material_brand_number)
    {
        $this->container['material_brand_number'] = $material_brand_number;

        return $this;
    }

    /**
     * Gets material_base_unit_id
     *
     * @return string
     */
    public function getMaterialBaseUnitId()
    {
        return $this->container['material_base_unit_id'];
    }

    /**
     * Sets material_base_unit_id
     *
     * @param string $material_base_unit_id material_base_unit_id
     *
     * @return $this
     */
    public function setMaterialBaseUnitId($material_base_unit_id)
    {
        $this->container['material_base_unit_id'] = $material_base_unit_id;

        return $this;
    }

    /**
     * Gets material_base_unit_number
     *
     * @return string
     */
    public function getMaterialBaseUnitNumber()
    {
        return $this->container['material_base_unit_number'];
    }

    /**
     * Sets material_base_unit_number
     *
     * @param string $material_base_unit_number material_base_unit_number
     *
     * @return $this
     */
    public function setMaterialBaseUnitNumber($material_base_unit_number)
    {
        $this->container['material_base_unit_number'] = $material_base_unit_number;

        return $this;
    }

    /**
     * Gets material_base_unit_name
     *
     * @return string
     */
    public function getMaterialBaseUnitName()
    {
        return $this->container['material_base_unit_name'];
    }

    /**
     * Sets material_base_unit_name
     *
     * @param string $material_base_unit_name material_base_unit_name
     *
     * @return $this
     */
    public function setMaterialBaseUnitName($material_base_unit_name)
    {
        $this->container['material_base_unit_name'] = $material_base_unit_name;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


