<?php
/**
 * CustomerSaveReq
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * CustomerSaveReq Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomerSaveReq implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CustomerSaveReq';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'number' => 'string',
        'name' => 'string',
        'group_id' => 'string',
        'group_number' => 'string',
        'c_level_id' => 'string',
        'sale_dept_id' => 'string',
        'sale_dept_number' => 'string',
        'saler_id' => 'string',
        'saler_number' => 'string',
        'mul_label' => '\com_kingdee_service\data\entity\Mullabel[]',
        'rate' => 'string',
        'invoice_name' => 'string',
        'taxpayer_no' => 'string',
        'bank_account' => 'string',
        'bank' => 'string',
        'account_open_addr' => 'string',
        'invoice_type' => 'int',
        'country_id' => 'string',
        'province_id' => 'string',
        'city_id' => 'string',
        'district_id' => 'string',
        'addr' => 'string',
        'remark' => 'string',
        'contact_persons' => '\com_kingdee_service\data\entity\Contactperson[]',
        'ignore_warn' => 'bool',
        'custom_field' => 'map[string,string]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'number' => null,
        'name' => null,
        'group_id' => null,
        'group_number' => null,
        'c_level_id' => null,
        'sale_dept_id' => null,
        'sale_dept_number' => null,
        'saler_id' => null,
        'saler_number' => null,
        'mul_label' => null,
        'rate' => null,
        'invoice_name' => null,
        'taxpayer_no' => null,
        'bank_account' => null,
        'bank' => null,
        'account_open_addr' => null,
        'invoice_type' => 'int32',
        'country_id' => null,
        'province_id' => null,
        'city_id' => null,
        'district_id' => null,
        'addr' => null,
        'remark' => null,
        'contact_persons' => null,
        'ignore_warn' => null,
        'custom_field' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'number' => 'number',
        'name' => 'name',
        'group_id' => 'group_id',
        'group_number' => 'group_number',
        'c_level_id' => 'c_level_id',
        'sale_dept_id' => 'sale_dept_id',
        'sale_dept_number' => 'sale_dept_number',
        'saler_id' => 'saler_id',
        'saler_number' => 'saler_number',
        'mul_label' => 'mul_label',
        'rate' => 'rate',
        'invoice_name' => 'invoice_name',
        'taxpayer_no' => 'taxpayer_no',
        'bank_account' => 'bank_account',
        'bank' => 'bank',
        'account_open_addr' => 'account_open_addr',
        'invoice_type' => 'invoice_type',
        'country_id' => 'country_id',
        'province_id' => 'province_id',
        'city_id' => 'city_id',
        'district_id' => 'district_id',
        'addr' => 'addr',
        'remark' => 'remark',
        'contact_persons' => 'contact_persons',
        'ignore_warn' => 'ignore_warn',
        'custom_field' => 'custom_field'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'number' => 'setNumber',
        'name' => 'setName',
        'group_id' => 'setGroupId',
        'group_number' => 'setGroupNumber',
        'c_level_id' => 'setCLevelId',
        'sale_dept_id' => 'setSaleDeptId',
        'sale_dept_number' => 'setSaleDeptNumber',
        'saler_id' => 'setSalerId',
        'saler_number' => 'setSalerNumber',
        'mul_label' => 'setMulLabel',
        'rate' => 'setRate',
        'invoice_name' => 'setInvoiceName',
        'taxpayer_no' => 'setTaxpayerNo',
        'bank_account' => 'setBankAccount',
        'bank' => 'setBank',
        'account_open_addr' => 'setAccountOpenAddr',
        'invoice_type' => 'setInvoiceType',
        'country_id' => 'setCountryId',
        'province_id' => 'setProvinceId',
        'city_id' => 'setCityId',
        'district_id' => 'setDistrictId',
        'addr' => 'setAddr',
        'remark' => 'setRemark',
        'contact_persons' => 'setContactPersons',
        'ignore_warn' => 'setIgnoreWarn',
        'custom_field' => 'setCustomField'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'number' => 'getNumber',
        'name' => 'getName',
        'group_id' => 'getGroupId',
        'group_number' => 'getGroupNumber',
        'c_level_id' => 'getCLevelId',
        'sale_dept_id' => 'getSaleDeptId',
        'sale_dept_number' => 'getSaleDeptNumber',
        'saler_id' => 'getSalerId',
        'saler_number' => 'getSalerNumber',
        'mul_label' => 'getMulLabel',
        'rate' => 'getRate',
        'invoice_name' => 'getInvoiceName',
        'taxpayer_no' => 'getTaxpayerNo',
        'bank_account' => 'getBankAccount',
        'bank' => 'getBank',
        'account_open_addr' => 'getAccountOpenAddr',
        'invoice_type' => 'getInvoiceType',
        'country_id' => 'getCountryId',
        'province_id' => 'getProvinceId',
        'city_id' => 'getCityId',
        'district_id' => 'getDistrictId',
        'addr' => 'getAddr',
        'remark' => 'getRemark',
        'contact_persons' => 'getContactPersons',
        'ignore_warn' => 'getIgnoreWarn',
        'custom_field' => 'getCustomField'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['group_id'] = isset($data['group_id']) ? $data['group_id'] : null;
        $this->container['group_number'] = isset($data['group_number']) ? $data['group_number'] : null;
        $this->container['c_level_id'] = isset($data['c_level_id']) ? $data['c_level_id'] : null;
        $this->container['sale_dept_id'] = isset($data['sale_dept_id']) ? $data['sale_dept_id'] : null;
        $this->container['sale_dept_number'] = isset($data['sale_dept_number']) ? $data['sale_dept_number'] : null;
        $this->container['saler_id'] = isset($data['saler_id']) ? $data['saler_id'] : null;
        $this->container['saler_number'] = isset($data['saler_number']) ? $data['saler_number'] : null;
        $this->container['mul_label'] = isset($data['mul_label']) ? $data['mul_label'] : null;
        $this->container['rate'] = isset($data['rate']) ? $data['rate'] : null;
        $this->container['invoice_name'] = isset($data['invoice_name']) ? $data['invoice_name'] : null;
        $this->container['taxpayer_no'] = isset($data['taxpayer_no']) ? $data['taxpayer_no'] : null;
        $this->container['bank_account'] = isset($data['bank_account']) ? $data['bank_account'] : null;
        $this->container['bank'] = isset($data['bank']) ? $data['bank'] : null;
        $this->container['account_open_addr'] = isset($data['account_open_addr']) ? $data['account_open_addr'] : null;
        $this->container['invoice_type'] = isset($data['invoice_type']) ? $data['invoice_type'] : null;
        $this->container['country_id'] = isset($data['country_id']) ? $data['country_id'] : null;
        $this->container['province_id'] = isset($data['province_id']) ? $data['province_id'] : null;
        $this->container['city_id'] = isset($data['city_id']) ? $data['city_id'] : null;
        $this->container['district_id'] = isset($data['district_id']) ? $data['district_id'] : null;
        $this->container['addr'] = isset($data['addr']) ? $data['addr'] : null;
        $this->container['remark'] = isset($data['remark']) ? $data['remark'] : null;
        $this->container['contact_persons'] = isset($data['contact_persons']) ? $data['contact_persons'] : null;
        $this->container['ignore_warn'] = isset($data['ignore_warn']) ? $data['ignore_warn'] : null;
        $this->container['custom_field'] = isset($data['custom_field']) ? $data['custom_field'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string $number number
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets group_id
     *
     * @return string
     */
    public function getGroupId()
    {
        return $this->container['group_id'];
    }

    /**
     * Sets group_id
     *
     * @param string $group_id group_id
     *
     * @return $this
     */
    public function setGroupId($group_id)
    {
        $this->container['group_id'] = $group_id;

        return $this;
    }

    /**
     * Gets group_number
     *
     * @return string
     */
    public function getGroupNumber()
    {
        return $this->container['group_number'];
    }

    /**
     * Sets group_number
     *
     * @param string $group_number group_number
     *
     * @return $this
     */
    public function setGroupNumber($group_number)
    {
        $this->container['group_number'] = $group_number;

        return $this;
    }

    /**
     * Gets c_level_id
     *
     * @return string
     */
    public function getCLevelId()
    {
        return $this->container['c_level_id'];
    }

    /**
     * Sets c_level_id
     *
     * @param string $c_level_id c_level_id
     *
     * @return $this
     */
    public function setCLevelId($c_level_id)
    {
        $this->container['c_level_id'] = $c_level_id;

        return $this;
    }

    /**
     * Gets sale_dept_id
     *
     * @return string
     */
    public function getSaleDeptId()
    {
        return $this->container['sale_dept_id'];
    }

    /**
     * Sets sale_dept_id
     *
     * @param string $sale_dept_id sale_dept_id
     *
     * @return $this
     */
    public function setSaleDeptId($sale_dept_id)
    {
        $this->container['sale_dept_id'] = $sale_dept_id;

        return $this;
    }

    /**
     * Gets sale_dept_number
     *
     * @return string
     */
    public function getSaleDeptNumber()
    {
        return $this->container['sale_dept_number'];
    }

    /**
     * Sets sale_dept_number
     *
     * @param string $sale_dept_number sale_dept_number
     *
     * @return $this
     */
    public function setSaleDeptNumber($sale_dept_number)
    {
        $this->container['sale_dept_number'] = $sale_dept_number;

        return $this;
    }

    /**
     * Gets saler_id
     *
     * @return string
     */
    public function getSalerId()
    {
        return $this->container['saler_id'];
    }

    /**
     * Sets saler_id
     *
     * @param string $saler_id saler_id
     *
     * @return $this
     */
    public function setSalerId($saler_id)
    {
        $this->container['saler_id'] = $saler_id;

        return $this;
    }

    /**
     * Gets saler_number
     *
     * @return string
     */
    public function getSalerNumber()
    {
        return $this->container['saler_number'];
    }

    /**
     * Sets saler_number
     *
     * @param string $saler_number saler_number
     *
     * @return $this
     */
    public function setSalerNumber($saler_number)
    {
        $this->container['saler_number'] = $saler_number;

        return $this;
    }

    /**
     * Gets mul_label
     *
     * @return \com_kingdee_service\data\entity\Mullabel[]
     */
    public function getMulLabel()
    {
        return $this->container['mul_label'];
    }

    /**
     * Sets mul_label
     *
     * @param \com_kingdee_service\data\entity\Mullabel[] $mul_label mul_label
     *
     * @return $this
     */
    public function setMulLabel($mul_label)
    {
        $this->container['mul_label'] = $mul_label;

        return $this;
    }

    /**
     * Gets rate
     *
     * @return string
     */
    public function getRate()
    {
        return $this->container['rate'];
    }

    /**
     * Sets rate
     *
     * @param string $rate rate
     *
     * @return $this
     */
    public function setRate($rate)
    {
        $this->container['rate'] = $rate;

        return $this;
    }

    /**
     * Gets invoice_name
     *
     * @return string
     */
    public function getInvoiceName()
    {
        return $this->container['invoice_name'];
    }

    /**
     * Sets invoice_name
     *
     * @param string $invoice_name invoice_name
     *
     * @return $this
     */
    public function setInvoiceName($invoice_name)
    {
        $this->container['invoice_name'] = $invoice_name;

        return $this;
    }

    /**
     * Gets taxpayer_no
     *
     * @return string
     */
    public function getTaxpayerNo()
    {
        return $this->container['taxpayer_no'];
    }

    /**
     * Sets taxpayer_no
     *
     * @param string $taxpayer_no taxpayer_no
     *
     * @return $this
     */
    public function setTaxpayerNo($taxpayer_no)
    {
        $this->container['taxpayer_no'] = $taxpayer_no;

        return $this;
    }

    /**
     * Gets bank_account
     *
     * @return string
     */
    public function getBankAccount()
    {
        return $this->container['bank_account'];
    }

    /**
     * Sets bank_account
     *
     * @param string $bank_account bank_account
     *
     * @return $this
     */
    public function setBankAccount($bank_account)
    {
        $this->container['bank_account'] = $bank_account;

        return $this;
    }

    /**
     * Gets bank
     *
     * @return string
     */
    public function getBank()
    {
        return $this->container['bank'];
    }

    /**
     * Sets bank
     *
     * @param string $bank bank
     *
     * @return $this
     */
    public function setBank($bank)
    {
        $this->container['bank'] = $bank;

        return $this;
    }

    /**
     * Gets account_open_addr
     *
     * @return string
     */
    public function getAccountOpenAddr()
    {
        return $this->container['account_open_addr'];
    }

    /**
     * Sets account_open_addr
     *
     * @param string $account_open_addr account_open_addr
     *
     * @return $this
     */
    public function setAccountOpenAddr($account_open_addr)
    {
        $this->container['account_open_addr'] = $account_open_addr;

        return $this;
    }

    /**
     * Gets invoice_type
     *
     * @return int
     */
    public function getInvoiceType()
    {
        return $this->container['invoice_type'];
    }

    /**
     * Sets invoice_type
     *
     * @param int $invoice_type invoice_type
     *
     * @return $this
     */
    public function setInvoiceType($invoice_type)
    {
        $this->container['invoice_type'] = $invoice_type;

        return $this;
    }

    /**
     * Gets country_id
     *
     * @return string
     */
    public function getCountryId()
    {
        return $this->container['country_id'];
    }

    /**
     * Sets country_id
     *
     * @param string $country_id country_id
     *
     * @return $this
     */
    public function setCountryId($country_id)
    {
        $this->container['country_id'] = $country_id;

        return $this;
    }

    /**
     * Gets province_id
     *
     * @return string
     */
    public function getProvinceId()
    {
        return $this->container['province_id'];
    }

    /**
     * Sets province_id
     *
     * @param string $province_id province_id
     *
     * @return $this
     */
    public function setProvinceId($province_id)
    {
        $this->container['province_id'] = $province_id;

        return $this;
    }

    /**
     * Gets city_id
     *
     * @return string
     */
    public function getCityId()
    {
        return $this->container['city_id'];
    }

    /**
     * Sets city_id
     *
     * @param string $city_id city_id
     *
     * @return $this
     */
    public function setCityId($city_id)
    {
        $this->container['city_id'] = $city_id;

        return $this;
    }

    /**
     * Gets district_id
     *
     * @return string
     */
    public function getDistrictId()
    {
        return $this->container['district_id'];
    }

    /**
     * Sets district_id
     *
     * @param string $district_id district_id
     *
     * @return $this
     */
    public function setDistrictId($district_id)
    {
        $this->container['district_id'] = $district_id;

        return $this;
    }

    /**
     * Gets addr
     *
     * @return string
     */
    public function getAddr()
    {
        return $this->container['addr'];
    }

    /**
     * Sets addr
     *
     * @param string $addr addr
     *
     * @return $this
     */
    public function setAddr($addr)
    {
        $this->container['addr'] = $addr;

        return $this;
    }

    /**
     * Gets remark
     *
     * @return string
     */
    public function getRemark()
    {
        return $this->container['remark'];
    }

    /**
     * Sets remark
     *
     * @param string $remark remark
     *
     * @return $this
     */
    public function setRemark($remark)
    {
        $this->container['remark'] = $remark;

        return $this;
    }

    /**
     * Gets contact_persons
     *
     * @return \com_kingdee_service\data\entity\Contactperson[]
     */
    public function getContactPersons()
    {
        return $this->container['contact_persons'];
    }

    /**
     * Sets contact_persons
     *
     * @param \com_kingdee_service\data\entity\Contactperson[] $contact_persons contact_persons
     *
     * @return $this
     */
    public function setContactPersons($contact_persons)
    {
        $this->container['contact_persons'] = $contact_persons;

        return $this;
    }

    /**
     * Gets ignore_warn
     *
     * @return bool
     */
    public function getIgnoreWarn()
    {
        return $this->container['ignore_warn'];
    }

    /**
     * Sets ignore_warn
     *
     * @param bool $ignore_warn ignore_warn
     *
     * @return $this
     */
    public function setIgnoreWarn($ignore_warn)
    {
        $this->container['ignore_warn'] = $ignore_warn;

        return $this;
    }

    /**
     * Gets custom_field
     *
     * @return map[string,string]
     */
    public function getCustomField()
    {
        return $this->container['custom_field'];
    }

    /**
     * Sets custom_field
     *
     * @param map[string,string] $custom_field custom_field
     *
     * @return $this
     */
    public function setCustomField($custom_field)
    {
        $this->container['custom_field'] = $custom_field;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


