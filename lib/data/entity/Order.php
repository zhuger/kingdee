<?php
/**
 * Order
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * Order Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Order implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Order';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'bill_no' => 'string',
        'store_id' => 'string',
        'cashier_id' => 'string',
        'emp_id' => 'string',
        'member_id' => 'string',
        'customer_id' => 'string',
        'amt' => 'string',
        'bal_amount' => 'string',
        'currency_id' => 'string',
        'bill_date' => 'string',
        'source' => 'string',
        'biz_type' => 'string',
        'pos_no' => 'string',
        'customer_type' => 'string',
        'remark' => 'string',
        'order_state' => 'string',
        'shift_id' => 'string',
        'daily_id' => 'string',
        'balance_no' => 'string',
        'balance_msg' => 'string',
        'distribute_state' => 'string',
        'material_entries' => '\com_kingdee_service\data\entity\OrderMaterialEntries[]',
        'settle_entries' => '\com_kingdee_service\data\entity\OrderSettleEntries[]',
        'payment_entries' => '\com_kingdee_service\data\entity\OrderPaymentEntries[]',
        'ext_info' => '\com_kingdee_service\data\entity\ExtInfo'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'bill_no' => null,
        'store_id' => null,
        'cashier_id' => null,
        'emp_id' => null,
        'member_id' => null,
        'customer_id' => null,
        'amt' => null,
        'bal_amount' => null,
        'currency_id' => null,
        'bill_date' => null,
        'source' => null,
        'biz_type' => null,
        'pos_no' => null,
        'customer_type' => null,
        'remark' => null,
        'order_state' => null,
        'shift_id' => null,
        'daily_id' => null,
        'balance_no' => null,
        'balance_msg' => null,
        'distribute_state' => null,
        'material_entries' => null,
        'settle_entries' => null,
        'payment_entries' => null,
        'ext_info' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'bill_no' => 'bill_no',
        'store_id' => 'store_id',
        'cashier_id' => 'cashier_id',
        'emp_id' => 'emp_id',
        'member_id' => 'member_id',
        'customer_id' => 'customer_id',
        'amt' => 'amt',
        'bal_amount' => 'bal_amount',
        'currency_id' => 'currency_id',
        'bill_date' => 'bill_date',
        'source' => 'source',
        'biz_type' => 'biz_type',
        'pos_no' => 'pos_no',
        'customer_type' => 'customer_type',
        'remark' => 'remark',
        'order_state' => 'order_state',
        'shift_id' => 'shift_id',
        'daily_id' => 'daily_id',
        'balance_no' => 'balance_no',
        'balance_msg' => 'balance_msg',
        'distribute_state' => 'distribute_state',
        'material_entries' => 'materialEntries',
        'settle_entries' => 'settle_entries',
        'payment_entries' => 'payment_entries',
        'ext_info' => 'ext_info'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'bill_no' => 'setBillNo',
        'store_id' => 'setStoreId',
        'cashier_id' => 'setCashierId',
        'emp_id' => 'setEmpId',
        'member_id' => 'setMemberId',
        'customer_id' => 'setCustomerId',
        'amt' => 'setAmt',
        'bal_amount' => 'setBalAmount',
        'currency_id' => 'setCurrencyId',
        'bill_date' => 'setBillDate',
        'source' => 'setSource',
        'biz_type' => 'setBizType',
        'pos_no' => 'setPosNo',
        'customer_type' => 'setCustomerType',
        'remark' => 'setRemark',
        'order_state' => 'setOrderState',
        'shift_id' => 'setShiftId',
        'daily_id' => 'setDailyId',
        'balance_no' => 'setBalanceNo',
        'balance_msg' => 'setBalanceMsg',
        'distribute_state' => 'setDistributeState',
        'material_entries' => 'setMaterialEntries',
        'settle_entries' => 'setSettleEntries',
        'payment_entries' => 'setPaymentEntries',
        'ext_info' => 'setExtInfo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'bill_no' => 'getBillNo',
        'store_id' => 'getStoreId',
        'cashier_id' => 'getCashierId',
        'emp_id' => 'getEmpId',
        'member_id' => 'getMemberId',
        'customer_id' => 'getCustomerId',
        'amt' => 'getAmt',
        'bal_amount' => 'getBalAmount',
        'currency_id' => 'getCurrencyId',
        'bill_date' => 'getBillDate',
        'source' => 'getSource',
        'biz_type' => 'getBizType',
        'pos_no' => 'getPosNo',
        'customer_type' => 'getCustomerType',
        'remark' => 'getRemark',
        'order_state' => 'getOrderState',
        'shift_id' => 'getShiftId',
        'daily_id' => 'getDailyId',
        'balance_no' => 'getBalanceNo',
        'balance_msg' => 'getBalanceMsg',
        'distribute_state' => 'getDistributeState',
        'material_entries' => 'getMaterialEntries',
        'settle_entries' => 'getSettleEntries',
        'payment_entries' => 'getPaymentEntries',
        'ext_info' => 'getExtInfo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['bill_no'] = isset($data['bill_no']) ? $data['bill_no'] : null;
        $this->container['store_id'] = isset($data['store_id']) ? $data['store_id'] : null;
        $this->container['cashier_id'] = isset($data['cashier_id']) ? $data['cashier_id'] : null;
        $this->container['emp_id'] = isset($data['emp_id']) ? $data['emp_id'] : null;
        $this->container['member_id'] = isset($data['member_id']) ? $data['member_id'] : null;
        $this->container['customer_id'] = isset($data['customer_id']) ? $data['customer_id'] : null;
        $this->container['amt'] = isset($data['amt']) ? $data['amt'] : null;
        $this->container['bal_amount'] = isset($data['bal_amount']) ? $data['bal_amount'] : null;
        $this->container['currency_id'] = isset($data['currency_id']) ? $data['currency_id'] : null;
        $this->container['bill_date'] = isset($data['bill_date']) ? $data['bill_date'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['biz_type'] = isset($data['biz_type']) ? $data['biz_type'] : null;
        $this->container['pos_no'] = isset($data['pos_no']) ? $data['pos_no'] : null;
        $this->container['customer_type'] = isset($data['customer_type']) ? $data['customer_type'] : null;
        $this->container['remark'] = isset($data['remark']) ? $data['remark'] : null;
        $this->container['order_state'] = isset($data['order_state']) ? $data['order_state'] : null;
        $this->container['shift_id'] = isset($data['shift_id']) ? $data['shift_id'] : null;
        $this->container['daily_id'] = isset($data['daily_id']) ? $data['daily_id'] : null;
        $this->container['balance_no'] = isset($data['balance_no']) ? $data['balance_no'] : null;
        $this->container['balance_msg'] = isset($data['balance_msg']) ? $data['balance_msg'] : null;
        $this->container['distribute_state'] = isset($data['distribute_state']) ? $data['distribute_state'] : null;
        $this->container['material_entries'] = isset($data['material_entries']) ? $data['material_entries'] : null;
        $this->container['settle_entries'] = isset($data['settle_entries']) ? $data['settle_entries'] : null;
        $this->container['payment_entries'] = isset($data['payment_entries']) ? $data['payment_entries'] : null;
        $this->container['ext_info'] = isset($data['ext_info']) ? $data['ext_info'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets bill_no
     *
     * @return string
     */
    public function getBillNo()
    {
        return $this->container['bill_no'];
    }

    /**
     * Sets bill_no
     *
     * @param string $bill_no bill_no
     *
     * @return $this
     */
    public function setBillNo($bill_no)
    {
        $this->container['bill_no'] = $bill_no;

        return $this;
    }

    /**
     * Gets store_id
     *
     * @return string
     */
    public function getStoreId()
    {
        return $this->container['store_id'];
    }

    /**
     * Sets store_id
     *
     * @param string $store_id store_id
     *
     * @return $this
     */
    public function setStoreId($store_id)
    {
        $this->container['store_id'] = $store_id;

        return $this;
    }

    /**
     * Gets cashier_id
     *
     * @return string
     */
    public function getCashierId()
    {
        return $this->container['cashier_id'];
    }

    /**
     * Sets cashier_id
     *
     * @param string $cashier_id cashier_id
     *
     * @return $this
     */
    public function setCashierId($cashier_id)
    {
        $this->container['cashier_id'] = $cashier_id;

        return $this;
    }

    /**
     * Gets emp_id
     *
     * @return string
     */
    public function getEmpId()
    {
        return $this->container['emp_id'];
    }

    /**
     * Sets emp_id
     *
     * @param string $emp_id emp_id
     *
     * @return $this
     */
    public function setEmpId($emp_id)
    {
        $this->container['emp_id'] = $emp_id;

        return $this;
    }

    /**
     * Gets member_id
     *
     * @return string
     */
    public function getMemberId()
    {
        return $this->container['member_id'];
    }

    /**
     * Sets member_id
     *
     * @param string $member_id member_id
     *
     * @return $this
     */
    public function setMemberId($member_id)
    {
        $this->container['member_id'] = $member_id;

        return $this;
    }

    /**
     * Gets customer_id
     *
     * @return string
     */
    public function getCustomerId()
    {
        return $this->container['customer_id'];
    }

    /**
     * Sets customer_id
     *
     * @param string $customer_id customer_id
     *
     * @return $this
     */
    public function setCustomerId($customer_id)
    {
        $this->container['customer_id'] = $customer_id;

        return $this;
    }

    /**
     * Gets amt
     *
     * @return string
     */
    public function getAmt()
    {
        return $this->container['amt'];
    }

    /**
     * Sets amt
     *
     * @param string $amt amt
     *
     * @return $this
     */
    public function setAmt($amt)
    {
        $this->container['amt'] = $amt;

        return $this;
    }

    /**
     * Gets bal_amount
     *
     * @return string
     */
    public function getBalAmount()
    {
        return $this->container['bal_amount'];
    }

    /**
     * Sets bal_amount
     *
     * @param string $bal_amount bal_amount
     *
     * @return $this
     */
    public function setBalAmount($bal_amount)
    {
        $this->container['bal_amount'] = $bal_amount;

        return $this;
    }

    /**
     * Gets currency_id
     *
     * @return string
     */
    public function getCurrencyId()
    {
        return $this->container['currency_id'];
    }

    /**
     * Sets currency_id
     *
     * @param string $currency_id currency_id
     *
     * @return $this
     */
    public function setCurrencyId($currency_id)
    {
        $this->container['currency_id'] = $currency_id;

        return $this;
    }

    /**
     * Gets bill_date
     *
     * @return string
     */
    public function getBillDate()
    {
        return $this->container['bill_date'];
    }

    /**
     * Sets bill_date
     *
     * @param string $bill_date bill_date
     *
     * @return $this
     */
    public function setBillDate($bill_date)
    {
        $this->container['bill_date'] = $bill_date;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string $source source
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets biz_type
     *
     * @return string
     */
    public function getBizType()
    {
        return $this->container['biz_type'];
    }

    /**
     * Sets biz_type
     *
     * @param string $biz_type biz_type
     *
     * @return $this
     */
    public function setBizType($biz_type)
    {
        $this->container['biz_type'] = $biz_type;

        return $this;
    }

    /**
     * Gets pos_no
     *
     * @return string
     */
    public function getPosNo()
    {
        return $this->container['pos_no'];
    }

    /**
     * Sets pos_no
     *
     * @param string $pos_no pos_no
     *
     * @return $this
     */
    public function setPosNo($pos_no)
    {
        $this->container['pos_no'] = $pos_no;

        return $this;
    }

    /**
     * Gets customer_type
     *
     * @return string
     */
    public function getCustomerType()
    {
        return $this->container['customer_type'];
    }

    /**
     * Sets customer_type
     *
     * @param string $customer_type customer_type
     *
     * @return $this
     */
    public function setCustomerType($customer_type)
    {
        $this->container['customer_type'] = $customer_type;

        return $this;
    }

    /**
     * Gets remark
     *
     * @return string
     */
    public function getRemark()
    {
        return $this->container['remark'];
    }

    /**
     * Sets remark
     *
     * @param string $remark remark
     *
     * @return $this
     */
    public function setRemark($remark)
    {
        $this->container['remark'] = $remark;

        return $this;
    }

    /**
     * Gets order_state
     *
     * @return string
     */
    public function getOrderState()
    {
        return $this->container['order_state'];
    }

    /**
     * Sets order_state
     *
     * @param string $order_state order_state
     *
     * @return $this
     */
    public function setOrderState($order_state)
    {
        $this->container['order_state'] = $order_state;

        return $this;
    }

    /**
     * Gets shift_id
     *
     * @return string
     */
    public function getShiftId()
    {
        return $this->container['shift_id'];
    }

    /**
     * Sets shift_id
     *
     * @param string $shift_id shift_id
     *
     * @return $this
     */
    public function setShiftId($shift_id)
    {
        $this->container['shift_id'] = $shift_id;

        return $this;
    }

    /**
     * Gets daily_id
     *
     * @return string
     */
    public function getDailyId()
    {
        return $this->container['daily_id'];
    }

    /**
     * Sets daily_id
     *
     * @param string $daily_id daily_id
     *
     * @return $this
     */
    public function setDailyId($daily_id)
    {
        $this->container['daily_id'] = $daily_id;

        return $this;
    }

    /**
     * Gets balance_no
     *
     * @return string
     */
    public function getBalanceNo()
    {
        return $this->container['balance_no'];
    }

    /**
     * Sets balance_no
     *
     * @param string $balance_no balance_no
     *
     * @return $this
     */
    public function setBalanceNo($balance_no)
    {
        $this->container['balance_no'] = $balance_no;

        return $this;
    }

    /**
     * Gets balance_msg
     *
     * @return string
     */
    public function getBalanceMsg()
    {
        return $this->container['balance_msg'];
    }

    /**
     * Sets balance_msg
     *
     * @param string $balance_msg balance_msg
     *
     * @return $this
     */
    public function setBalanceMsg($balance_msg)
    {
        $this->container['balance_msg'] = $balance_msg;

        return $this;
    }

    /**
     * Gets distribute_state
     *
     * @return string
     */
    public function getDistributeState()
    {
        return $this->container['distribute_state'];
    }

    /**
     * Sets distribute_state
     *
     * @param string $distribute_state distribute_state
     *
     * @return $this
     */
    public function setDistributeState($distribute_state)
    {
        $this->container['distribute_state'] = $distribute_state;

        return $this;
    }

    /**
     * Gets material_entries
     *
     * @return \com_kingdee_service\data\entity\OrderMaterialEntries[]
     */
    public function getMaterialEntries()
    {
        return $this->container['material_entries'];
    }

    /**
     * Sets material_entries
     *
     * @param \com_kingdee_service\data\entity\OrderMaterialEntries[] $material_entries material_entries
     *
     * @return $this
     */
    public function setMaterialEntries($material_entries)
    {
        $this->container['material_entries'] = $material_entries;

        return $this;
    }

    /**
     * Gets settle_entries
     *
     * @return \com_kingdee_service\data\entity\OrderSettleEntries[]
     */
    public function getSettleEntries()
    {
        return $this->container['settle_entries'];
    }

    /**
     * Sets settle_entries
     *
     * @param \com_kingdee_service\data\entity\OrderSettleEntries[] $settle_entries settle_entries
     *
     * @return $this
     */
    public function setSettleEntries($settle_entries)
    {
        $this->container['settle_entries'] = $settle_entries;

        return $this;
    }

    /**
     * Gets payment_entries
     *
     * @return \com_kingdee_service\data\entity\OrderPaymentEntries[]
     */
    public function getPaymentEntries()
    {
        return $this->container['payment_entries'];
    }

    /**
     * Sets payment_entries
     *
     * @param \com_kingdee_service\data\entity\OrderPaymentEntries[] $payment_entries payment_entries
     *
     * @return $this
     */
    public function setPaymentEntries($payment_entries)
    {
        $this->container['payment_entries'] = $payment_entries;

        return $this;
    }

    /**
     * Gets ext_info
     *
     * @return \com_kingdee_service\data\entity\ExtInfo
     */
    public function getExtInfo()
    {
        return $this->container['ext_info'];
    }

    /**
     * Sets ext_info
     *
     * @param \com_kingdee_service\data\entity\ExtInfo $ext_info ext_info
     *
     * @return $this
     */
    public function setExtInfo($ext_info)
    {
        $this->container['ext_info'] = $ext_info;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


