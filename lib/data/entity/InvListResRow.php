<?php
/**
 * InvListResRow
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * InvListResRow Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvListResRow implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InvListRes.Row';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'material_id' => 'string',
        'material_name' => 'string',
        'material_number' => 'string',
        'material_model' => 'string',
        'stock_id' => 'string',
        'stock_name' => 'string',
        'stock_number' => 'string',
        'stock_id_is_allow_freight' => 'bool',
        'sp_id' => 'string',
        'sp_name' => 'string',
        'sp_number' => 'string',
        'aux_prop_id' => 'string',
        'aux_prop_name' => 'string',
        'aux_prop_number' => 'string',
        'qty' => 'string',
        'qty_package' => 'string',
        'valid_qty' => 'string',
        'valid_qty_package' => 'string',
        'kf_date' => 'string',
        'valid_date' => 'string',
        'kf_type' => 'string',
        'kf_period' => 'int',
        'batch_no' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'material_id' => null,
        'material_name' => null,
        'material_number' => null,
        'material_model' => null,
        'stock_id' => null,
        'stock_name' => null,
        'stock_number' => null,
        'stock_id_is_allow_freight' => null,
        'sp_id' => null,
        'sp_name' => null,
        'sp_number' => null,
        'aux_prop_id' => null,
        'aux_prop_name' => null,
        'aux_prop_number' => null,
        'qty' => null,
        'qty_package' => null,
        'valid_qty' => null,
        'valid_qty_package' => null,
        'kf_date' => null,
        'valid_date' => null,
        'kf_type' => null,
        'kf_period' => 'int32',
        'batch_no' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'material_id' => 'material_id',
        'material_name' => 'material_name',
        'material_number' => 'material_number',
        'material_model' => 'material_model',
        'stock_id' => 'stock_id',
        'stock_name' => 'stock_name',
        'stock_number' => 'stock_number',
        'stock_id_is_allow_freight' => 'stock_id_is_allow_freight',
        'sp_id' => 'sp_id',
        'sp_name' => 'sp_name',
        'sp_number' => 'sp_number',
        'aux_prop_id' => 'aux_prop_id',
        'aux_prop_name' => 'aux_prop_name',
        'aux_prop_number' => 'aux_prop_number',
        'qty' => 'qty',
        'qty_package' => 'qty_package',
        'valid_qty' => 'valid_qty',
        'valid_qty_package' => 'valid_qty_package',
        'kf_date' => 'kf_date',
        'valid_date' => 'valid_date',
        'kf_type' => 'kf_type',
        'kf_period' => 'kf_period',
        'batch_no' => 'batch_no'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'material_id' => 'setMaterialId',
        'material_name' => 'setMaterialName',
        'material_number' => 'setMaterialNumber',
        'material_model' => 'setMaterialModel',
        'stock_id' => 'setStockId',
        'stock_name' => 'setStockName',
        'stock_number' => 'setStockNumber',
        'stock_id_is_allow_freight' => 'setStockIdIsAllowFreight',
        'sp_id' => 'setSpId',
        'sp_name' => 'setSpName',
        'sp_number' => 'setSpNumber',
        'aux_prop_id' => 'setAuxPropId',
        'aux_prop_name' => 'setAuxPropName',
        'aux_prop_number' => 'setAuxPropNumber',
        'qty' => 'setQty',
        'qty_package' => 'setQtyPackage',
        'valid_qty' => 'setValidQty',
        'valid_qty_package' => 'setValidQtyPackage',
        'kf_date' => 'setKfDate',
        'valid_date' => 'setValidDate',
        'kf_type' => 'setKfType',
        'kf_period' => 'setKfPeriod',
        'batch_no' => 'setBatchNo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'material_id' => 'getMaterialId',
        'material_name' => 'getMaterialName',
        'material_number' => 'getMaterialNumber',
        'material_model' => 'getMaterialModel',
        'stock_id' => 'getStockId',
        'stock_name' => 'getStockName',
        'stock_number' => 'getStockNumber',
        'stock_id_is_allow_freight' => 'getStockIdIsAllowFreight',
        'sp_id' => 'getSpId',
        'sp_name' => 'getSpName',
        'sp_number' => 'getSpNumber',
        'aux_prop_id' => 'getAuxPropId',
        'aux_prop_name' => 'getAuxPropName',
        'aux_prop_number' => 'getAuxPropNumber',
        'qty' => 'getQty',
        'qty_package' => 'getQtyPackage',
        'valid_qty' => 'getValidQty',
        'valid_qty_package' => 'getValidQtyPackage',
        'kf_date' => 'getKfDate',
        'valid_date' => 'getValidDate',
        'kf_type' => 'getKfType',
        'kf_period' => 'getKfPeriod',
        'batch_no' => 'getBatchNo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['material_id'] = isset($data['material_id']) ? $data['material_id'] : null;
        $this->container['material_name'] = isset($data['material_name']) ? $data['material_name'] : null;
        $this->container['material_number'] = isset($data['material_number']) ? $data['material_number'] : null;
        $this->container['material_model'] = isset($data['material_model']) ? $data['material_model'] : null;
        $this->container['stock_id'] = isset($data['stock_id']) ? $data['stock_id'] : null;
        $this->container['stock_name'] = isset($data['stock_name']) ? $data['stock_name'] : null;
        $this->container['stock_number'] = isset($data['stock_number']) ? $data['stock_number'] : null;
        $this->container['stock_id_is_allow_freight'] = isset($data['stock_id_is_allow_freight']) ? $data['stock_id_is_allow_freight'] : null;
        $this->container['sp_id'] = isset($data['sp_id']) ? $data['sp_id'] : null;
        $this->container['sp_name'] = isset($data['sp_name']) ? $data['sp_name'] : null;
        $this->container['sp_number'] = isset($data['sp_number']) ? $data['sp_number'] : null;
        $this->container['aux_prop_id'] = isset($data['aux_prop_id']) ? $data['aux_prop_id'] : null;
        $this->container['aux_prop_name'] = isset($data['aux_prop_name']) ? $data['aux_prop_name'] : null;
        $this->container['aux_prop_number'] = isset($data['aux_prop_number']) ? $data['aux_prop_number'] : null;
        $this->container['qty'] = isset($data['qty']) ? $data['qty'] : null;
        $this->container['qty_package'] = isset($data['qty_package']) ? $data['qty_package'] : null;
        $this->container['valid_qty'] = isset($data['valid_qty']) ? $data['valid_qty'] : null;
        $this->container['valid_qty_package'] = isset($data['valid_qty_package']) ? $data['valid_qty_package'] : null;
        $this->container['kf_date'] = isset($data['kf_date']) ? $data['kf_date'] : null;
        $this->container['valid_date'] = isset($data['valid_date']) ? $data['valid_date'] : null;
        $this->container['kf_type'] = isset($data['kf_type']) ? $data['kf_type'] : null;
        $this->container['kf_period'] = isset($data['kf_period']) ? $data['kf_period'] : null;
        $this->container['batch_no'] = isset($data['batch_no']) ? $data['batch_no'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets material_id
     *
     * @return string
     */
    public function getMaterialId()
    {
        return $this->container['material_id'];
    }

    /**
     * Sets material_id
     *
     * @param string $material_id material_id
     *
     * @return $this
     */
    public function setMaterialId($material_id)
    {
        $this->container['material_id'] = $material_id;

        return $this;
    }

    /**
     * Gets material_name
     *
     * @return string
     */
    public function getMaterialName()
    {
        return $this->container['material_name'];
    }

    /**
     * Sets material_name
     *
     * @param string $material_name material_name
     *
     * @return $this
     */
    public function setMaterialName($material_name)
    {
        $this->container['material_name'] = $material_name;

        return $this;
    }

    /**
     * Gets material_number
     *
     * @return string
     */
    public function getMaterialNumber()
    {
        return $this->container['material_number'];
    }

    /**
     * Sets material_number
     *
     * @param string $material_number material_number
     *
     * @return $this
     */
    public function setMaterialNumber($material_number)
    {
        $this->container['material_number'] = $material_number;

        return $this;
    }

    /**
     * Gets material_model
     *
     * @return string
     */
    public function getMaterialModel()
    {
        return $this->container['material_model'];
    }

    /**
     * Sets material_model
     *
     * @param string $material_model material_model
     *
     * @return $this
     */
    public function setMaterialModel($material_model)
    {
        $this->container['material_model'] = $material_model;

        return $this;
    }

    /**
     * Gets stock_id
     *
     * @return string
     */
    public function getStockId()
    {
        return $this->container['stock_id'];
    }

    /**
     * Sets stock_id
     *
     * @param string $stock_id stock_id
     *
     * @return $this
     */
    public function setStockId($stock_id)
    {
        $this->container['stock_id'] = $stock_id;

        return $this;
    }

    /**
     * Gets stock_name
     *
     * @return string
     */
    public function getStockName()
    {
        return $this->container['stock_name'];
    }

    /**
     * Sets stock_name
     *
     * @param string $stock_name stock_name
     *
     * @return $this
     */
    public function setStockName($stock_name)
    {
        $this->container['stock_name'] = $stock_name;

        return $this;
    }

    /**
     * Gets stock_number
     *
     * @return string
     */
    public function getStockNumber()
    {
        return $this->container['stock_number'];
    }

    /**
     * Sets stock_number
     *
     * @param string $stock_number stock_number
     *
     * @return $this
     */
    public function setStockNumber($stock_number)
    {
        $this->container['stock_number'] = $stock_number;

        return $this;
    }

    /**
     * Gets stock_id_is_allow_freight
     *
     * @return bool
     */
    public function getStockIdIsAllowFreight()
    {
        return $this->container['stock_id_is_allow_freight'];
    }

    /**
     * Sets stock_id_is_allow_freight
     *
     * @param bool $stock_id_is_allow_freight stock_id_is_allow_freight
     *
     * @return $this
     */
    public function setStockIdIsAllowFreight($stock_id_is_allow_freight)
    {
        $this->container['stock_id_is_allow_freight'] = $stock_id_is_allow_freight;

        return $this;
    }

    /**
     * Gets sp_id
     *
     * @return string
     */
    public function getSpId()
    {
        return $this->container['sp_id'];
    }

    /**
     * Sets sp_id
     *
     * @param string $sp_id sp_id
     *
     * @return $this
     */
    public function setSpId($sp_id)
    {
        $this->container['sp_id'] = $sp_id;

        return $this;
    }

    /**
     * Gets sp_name
     *
     * @return string
     */
    public function getSpName()
    {
        return $this->container['sp_name'];
    }

    /**
     * Sets sp_name
     *
     * @param string $sp_name sp_name
     *
     * @return $this
     */
    public function setSpName($sp_name)
    {
        $this->container['sp_name'] = $sp_name;

        return $this;
    }

    /**
     * Gets sp_number
     *
     * @return string
     */
    public function getSpNumber()
    {
        return $this->container['sp_number'];
    }

    /**
     * Sets sp_number
     *
     * @param string $sp_number sp_number
     *
     * @return $this
     */
    public function setSpNumber($sp_number)
    {
        $this->container['sp_number'] = $sp_number;

        return $this;
    }

    /**
     * Gets aux_prop_id
     *
     * @return string
     */
    public function getAuxPropId()
    {
        return $this->container['aux_prop_id'];
    }

    /**
     * Sets aux_prop_id
     *
     * @param string $aux_prop_id aux_prop_id
     *
     * @return $this
     */
    public function setAuxPropId($aux_prop_id)
    {
        $this->container['aux_prop_id'] = $aux_prop_id;

        return $this;
    }

    /**
     * Gets aux_prop_name
     *
     * @return string
     */
    public function getAuxPropName()
    {
        return $this->container['aux_prop_name'];
    }

    /**
     * Sets aux_prop_name
     *
     * @param string $aux_prop_name aux_prop_name
     *
     * @return $this
     */
    public function setAuxPropName($aux_prop_name)
    {
        $this->container['aux_prop_name'] = $aux_prop_name;

        return $this;
    }

    /**
     * Gets aux_prop_number
     *
     * @return string
     */
    public function getAuxPropNumber()
    {
        return $this->container['aux_prop_number'];
    }

    /**
     * Sets aux_prop_number
     *
     * @param string $aux_prop_number aux_prop_number
     *
     * @return $this
     */
    public function setAuxPropNumber($aux_prop_number)
    {
        $this->container['aux_prop_number'] = $aux_prop_number;

        return $this;
    }

    /**
     * Gets qty
     *
     * @return string
     */
    public function getQty()
    {
        return $this->container['qty'];
    }

    /**
     * Sets qty
     *
     * @param string $qty qty
     *
     * @return $this
     */
    public function setQty($qty)
    {
        $this->container['qty'] = $qty;

        return $this;
    }

    /**
     * Gets qty_package
     *
     * @return string
     */
    public function getQtyPackage()
    {
        return $this->container['qty_package'];
    }

    /**
     * Sets qty_package
     *
     * @param string $qty_package qty_package
     *
     * @return $this
     */
    public function setQtyPackage($qty_package)
    {
        $this->container['qty_package'] = $qty_package;

        return $this;
    }

    /**
     * Gets valid_qty
     *
     * @return string
     */
    public function getValidQty()
    {
        return $this->container['valid_qty'];
    }

    /**
     * Sets valid_qty
     *
     * @param string $valid_qty valid_qty
     *
     * @return $this
     */
    public function setValidQty($valid_qty)
    {
        $this->container['valid_qty'] = $valid_qty;

        return $this;
    }

    /**
     * Gets valid_qty_package
     *
     * @return string
     */
    public function getValidQtyPackage()
    {
        return $this->container['valid_qty_package'];
    }

    /**
     * Sets valid_qty_package
     *
     * @param string $valid_qty_package valid_qty_package
     *
     * @return $this
     */
    public function setValidQtyPackage($valid_qty_package)
    {
        $this->container['valid_qty_package'] = $valid_qty_package;

        return $this;
    }

    /**
     * Gets kf_date
     *
     * @return string
     */
    public function getKfDate()
    {
        return $this->container['kf_date'];
    }

    /**
     * Sets kf_date
     *
     * @param string $kf_date kf_date
     *
     * @return $this
     */
    public function setKfDate($kf_date)
    {
        $this->container['kf_date'] = $kf_date;

        return $this;
    }

    /**
     * Gets valid_date
     *
     * @return string
     */
    public function getValidDate()
    {
        return $this->container['valid_date'];
    }

    /**
     * Sets valid_date
     *
     * @param string $valid_date valid_date
     *
     * @return $this
     */
    public function setValidDate($valid_date)
    {
        $this->container['valid_date'] = $valid_date;

        return $this;
    }

    /**
     * Gets kf_type
     *
     * @return string
     */
    public function getKfType()
    {
        return $this->container['kf_type'];
    }

    /**
     * Sets kf_type
     *
     * @param string $kf_type kf_type
     *
     * @return $this
     */
    public function setKfType($kf_type)
    {
        $this->container['kf_type'] = $kf_type;

        return $this;
    }

    /**
     * Gets kf_period
     *
     * @return int
     */
    public function getKfPeriod()
    {
        return $this->container['kf_period'];
    }

    /**
     * Sets kf_period
     *
     * @param int $kf_period kf_period
     *
     * @return $this
     */
    public function setKfPeriod($kf_period)
    {
        $this->container['kf_period'] = $kf_period;

        return $this;
    }

    /**
     * Gets batch_no
     *
     * @return string
     */
    public function getBatchNo()
    {
        return $this->container['batch_no'];
    }

    /**
     * Sets batch_no
     *
     * @param string $batch_no batch_no
     *
     * @return $this
     */
    public function setBatchNo($batch_no)
    {
        $this->container['batch_no'] = $batch_no;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


