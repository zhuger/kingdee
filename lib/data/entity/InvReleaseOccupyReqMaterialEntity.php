<?php
/**
 * InvReleaseOccupyReqMaterialEntity
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * InvReleaseOccupyReqMaterialEntity Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvReleaseOccupyReqMaterialEntity implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InvReleaseOccupyReq.MaterialEntity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'src_entry_id' => 'string',
        'material_name' => 'string',
        'material_number' => 'string',
        'material_id' => 'string',
        'aux_prop_name' => 'string',
        'aux_prop_id' => 'string',
        'stock_name' => 'string',
        'stock_id' => 'string',
        'space_name' => 'string',
        'sp_id' => 'string',
        'batch_no' => 'string',
        'kf_date' => 'string',
        'valid_date' => 'string',
        'kf_type' => 'string',
        'kf_period' => 'string',
        'qty' => 'string',
        'unit' => 'string',
        'base_unit' => 'string',
        'base_qty' => 'string',
        'def_float_qty' => 'string',
        'aux_qty' => 'string',
        'aux_unit_id' => 'string',
        'sn_list' => 'string',
        'sn_list_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'src_entry_id' => null,
        'material_name' => null,
        'material_number' => null,
        'material_id' => null,
        'aux_prop_name' => null,
        'aux_prop_id' => null,
        'stock_name' => null,
        'stock_id' => null,
        'space_name' => null,
        'sp_id' => null,
        'batch_no' => null,
        'kf_date' => null,
        'valid_date' => null,
        'kf_type' => null,
        'kf_period' => null,
        'qty' => null,
        'unit' => null,
        'base_unit' => null,
        'base_qty' => null,
        'def_float_qty' => null,
        'aux_qty' => null,
        'aux_unit_id' => null,
        'sn_list' => null,
        'sn_list_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'src_entry_id' => 'src_entry_id',
        'material_name' => 'material_name',
        'material_number' => 'material_number',
        'material_id' => 'material_id',
        'aux_prop_name' => 'aux_prop_name',
        'aux_prop_id' => 'aux_prop_id',
        'stock_name' => 'stock_name',
        'stock_id' => 'stock_id',
        'space_name' => 'space_name',
        'sp_id' => 'sp_id',
        'batch_no' => 'batch_no',
        'kf_date' => 'kf_date',
        'valid_date' => 'valid_date',
        'kf_type' => 'kf_type',
        'kf_period' => 'kf_period',
        'qty' => 'qty',
        'unit' => 'unit',
        'base_unit' => 'base_unit',
        'base_qty' => 'base_qty',
        'def_float_qty' => 'def_float_qty',
        'aux_qty' => 'aux_qty',
        'aux_unit_id' => 'aux_unit_id',
        'sn_list' => 'sn_list',
        'sn_list_id' => 'sn_list_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'src_entry_id' => 'setSrcEntryId',
        'material_name' => 'setMaterialName',
        'material_number' => 'setMaterialNumber',
        'material_id' => 'setMaterialId',
        'aux_prop_name' => 'setAuxPropName',
        'aux_prop_id' => 'setAuxPropId',
        'stock_name' => 'setStockName',
        'stock_id' => 'setStockId',
        'space_name' => 'setSpaceName',
        'sp_id' => 'setSpId',
        'batch_no' => 'setBatchNo',
        'kf_date' => 'setKfDate',
        'valid_date' => 'setValidDate',
        'kf_type' => 'setKfType',
        'kf_period' => 'setKfPeriod',
        'qty' => 'setQty',
        'unit' => 'setUnit',
        'base_unit' => 'setBaseUnit',
        'base_qty' => 'setBaseQty',
        'def_float_qty' => 'setDefFloatQty',
        'aux_qty' => 'setAuxQty',
        'aux_unit_id' => 'setAuxUnitId',
        'sn_list' => 'setSnList',
        'sn_list_id' => 'setSnListId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'src_entry_id' => 'getSrcEntryId',
        'material_name' => 'getMaterialName',
        'material_number' => 'getMaterialNumber',
        'material_id' => 'getMaterialId',
        'aux_prop_name' => 'getAuxPropName',
        'aux_prop_id' => 'getAuxPropId',
        'stock_name' => 'getStockName',
        'stock_id' => 'getStockId',
        'space_name' => 'getSpaceName',
        'sp_id' => 'getSpId',
        'batch_no' => 'getBatchNo',
        'kf_date' => 'getKfDate',
        'valid_date' => 'getValidDate',
        'kf_type' => 'getKfType',
        'kf_period' => 'getKfPeriod',
        'qty' => 'getQty',
        'unit' => 'getUnit',
        'base_unit' => 'getBaseUnit',
        'base_qty' => 'getBaseQty',
        'def_float_qty' => 'getDefFloatQty',
        'aux_qty' => 'getAuxQty',
        'aux_unit_id' => 'getAuxUnitId',
        'sn_list' => 'getSnList',
        'sn_list_id' => 'getSnListId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['src_entry_id'] = isset($data['src_entry_id']) ? $data['src_entry_id'] : null;
        $this->container['material_name'] = isset($data['material_name']) ? $data['material_name'] : null;
        $this->container['material_number'] = isset($data['material_number']) ? $data['material_number'] : null;
        $this->container['material_id'] = isset($data['material_id']) ? $data['material_id'] : null;
        $this->container['aux_prop_name'] = isset($data['aux_prop_name']) ? $data['aux_prop_name'] : null;
        $this->container['aux_prop_id'] = isset($data['aux_prop_id']) ? $data['aux_prop_id'] : null;
        $this->container['stock_name'] = isset($data['stock_name']) ? $data['stock_name'] : null;
        $this->container['stock_id'] = isset($data['stock_id']) ? $data['stock_id'] : null;
        $this->container['space_name'] = isset($data['space_name']) ? $data['space_name'] : null;
        $this->container['sp_id'] = isset($data['sp_id']) ? $data['sp_id'] : null;
        $this->container['batch_no'] = isset($data['batch_no']) ? $data['batch_no'] : null;
        $this->container['kf_date'] = isset($data['kf_date']) ? $data['kf_date'] : null;
        $this->container['valid_date'] = isset($data['valid_date']) ? $data['valid_date'] : null;
        $this->container['kf_type'] = isset($data['kf_type']) ? $data['kf_type'] : null;
        $this->container['kf_period'] = isset($data['kf_period']) ? $data['kf_period'] : null;
        $this->container['qty'] = isset($data['qty']) ? $data['qty'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['base_unit'] = isset($data['base_unit']) ? $data['base_unit'] : null;
        $this->container['base_qty'] = isset($data['base_qty']) ? $data['base_qty'] : null;
        $this->container['def_float_qty'] = isset($data['def_float_qty']) ? $data['def_float_qty'] : null;
        $this->container['aux_qty'] = isset($data['aux_qty']) ? $data['aux_qty'] : null;
        $this->container['aux_unit_id'] = isset($data['aux_unit_id']) ? $data['aux_unit_id'] : null;
        $this->container['sn_list'] = isset($data['sn_list']) ? $data['sn_list'] : null;
        $this->container['sn_list_id'] = isset($data['sn_list_id']) ? $data['sn_list_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets src_entry_id
     *
     * @return string
     */
    public function getSrcEntryId()
    {
        return $this->container['src_entry_id'];
    }

    /**
     * Sets src_entry_id
     *
     * @param string $src_entry_id src_entry_id
     *
     * @return $this
     */
    public function setSrcEntryId($src_entry_id)
    {
        $this->container['src_entry_id'] = $src_entry_id;

        return $this;
    }

    /**
     * Gets material_name
     *
     * @return string
     */
    public function getMaterialName()
    {
        return $this->container['material_name'];
    }

    /**
     * Sets material_name
     *
     * @param string $material_name material_name
     *
     * @return $this
     */
    public function setMaterialName($material_name)
    {
        $this->container['material_name'] = $material_name;

        return $this;
    }

    /**
     * Gets material_number
     *
     * @return string
     */
    public function getMaterialNumber()
    {
        return $this->container['material_number'];
    }

    /**
     * Sets material_number
     *
     * @param string $material_number material_number
     *
     * @return $this
     */
    public function setMaterialNumber($material_number)
    {
        $this->container['material_number'] = $material_number;

        return $this;
    }

    /**
     * Gets material_id
     *
     * @return string
     */
    public function getMaterialId()
    {
        return $this->container['material_id'];
    }

    /**
     * Sets material_id
     *
     * @param string $material_id material_id
     *
     * @return $this
     */
    public function setMaterialId($material_id)
    {
        $this->container['material_id'] = $material_id;

        return $this;
    }

    /**
     * Gets aux_prop_name
     *
     * @return string
     */
    public function getAuxPropName()
    {
        return $this->container['aux_prop_name'];
    }

    /**
     * Sets aux_prop_name
     *
     * @param string $aux_prop_name aux_prop_name
     *
     * @return $this
     */
    public function setAuxPropName($aux_prop_name)
    {
        $this->container['aux_prop_name'] = $aux_prop_name;

        return $this;
    }

    /**
     * Gets aux_prop_id
     *
     * @return string
     */
    public function getAuxPropId()
    {
        return $this->container['aux_prop_id'];
    }

    /**
     * Sets aux_prop_id
     *
     * @param string $aux_prop_id aux_prop_id
     *
     * @return $this
     */
    public function setAuxPropId($aux_prop_id)
    {
        $this->container['aux_prop_id'] = $aux_prop_id;

        return $this;
    }

    /**
     * Gets stock_name
     *
     * @return string
     */
    public function getStockName()
    {
        return $this->container['stock_name'];
    }

    /**
     * Sets stock_name
     *
     * @param string $stock_name stock_name
     *
     * @return $this
     */
    public function setStockName($stock_name)
    {
        $this->container['stock_name'] = $stock_name;

        return $this;
    }

    /**
     * Gets stock_id
     *
     * @return string
     */
    public function getStockId()
    {
        return $this->container['stock_id'];
    }

    /**
     * Sets stock_id
     *
     * @param string $stock_id stock_id
     *
     * @return $this
     */
    public function setStockId($stock_id)
    {
        $this->container['stock_id'] = $stock_id;

        return $this;
    }

    /**
     * Gets space_name
     *
     * @return string
     */
    public function getSpaceName()
    {
        return $this->container['space_name'];
    }

    /**
     * Sets space_name
     *
     * @param string $space_name space_name
     *
     * @return $this
     */
    public function setSpaceName($space_name)
    {
        $this->container['space_name'] = $space_name;

        return $this;
    }

    /**
     * Gets sp_id
     *
     * @return string
     */
    public function getSpId()
    {
        return $this->container['sp_id'];
    }

    /**
     * Sets sp_id
     *
     * @param string $sp_id sp_id
     *
     * @return $this
     */
    public function setSpId($sp_id)
    {
        $this->container['sp_id'] = $sp_id;

        return $this;
    }

    /**
     * Gets batch_no
     *
     * @return string
     */
    public function getBatchNo()
    {
        return $this->container['batch_no'];
    }

    /**
     * Sets batch_no
     *
     * @param string $batch_no batch_no
     *
     * @return $this
     */
    public function setBatchNo($batch_no)
    {
        $this->container['batch_no'] = $batch_no;

        return $this;
    }

    /**
     * Gets kf_date
     *
     * @return string
     */
    public function getKfDate()
    {
        return $this->container['kf_date'];
    }

    /**
     * Sets kf_date
     *
     * @param string $kf_date kf_date
     *
     * @return $this
     */
    public function setKfDate($kf_date)
    {
        $this->container['kf_date'] = $kf_date;

        return $this;
    }

    /**
     * Gets valid_date
     *
     * @return string
     */
    public function getValidDate()
    {
        return $this->container['valid_date'];
    }

    /**
     * Sets valid_date
     *
     * @param string $valid_date valid_date
     *
     * @return $this
     */
    public function setValidDate($valid_date)
    {
        $this->container['valid_date'] = $valid_date;

        return $this;
    }

    /**
     * Gets kf_type
     *
     * @return string
     */
    public function getKfType()
    {
        return $this->container['kf_type'];
    }

    /**
     * Sets kf_type
     *
     * @param string $kf_type kf_type
     *
     * @return $this
     */
    public function setKfType($kf_type)
    {
        $this->container['kf_type'] = $kf_type;

        return $this;
    }

    /**
     * Gets kf_period
     *
     * @return string
     */
    public function getKfPeriod()
    {
        return $this->container['kf_period'];
    }

    /**
     * Sets kf_period
     *
     * @param string $kf_period kf_period
     *
     * @return $this
     */
    public function setKfPeriod($kf_period)
    {
        $this->container['kf_period'] = $kf_period;

        return $this;
    }

    /**
     * Gets qty
     *
     * @return string
     */
    public function getQty()
    {
        return $this->container['qty'];
    }

    /**
     * Sets qty
     *
     * @param string $qty qty
     *
     * @return $this
     */
    public function setQty($qty)
    {
        $this->container['qty'] = $qty;

        return $this;
    }

    /**
     * Gets unit
     *
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     *
     * @param string $unit unit
     *
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets base_unit
     *
     * @return string
     */
    public function getBaseUnit()
    {
        return $this->container['base_unit'];
    }

    /**
     * Sets base_unit
     *
     * @param string $base_unit base_unit
     *
     * @return $this
     */
    public function setBaseUnit($base_unit)
    {
        $this->container['base_unit'] = $base_unit;

        return $this;
    }

    /**
     * Gets base_qty
     *
     * @return string
     */
    public function getBaseQty()
    {
        return $this->container['base_qty'];
    }

    /**
     * Sets base_qty
     *
     * @param string $base_qty base_qty
     *
     * @return $this
     */
    public function setBaseQty($base_qty)
    {
        $this->container['base_qty'] = $base_qty;

        return $this;
    }

    /**
     * Gets def_float_qty
     *
     * @return string
     */
    public function getDefFloatQty()
    {
        return $this->container['def_float_qty'];
    }

    /**
     * Sets def_float_qty
     *
     * @param string $def_float_qty def_float_qty
     *
     * @return $this
     */
    public function setDefFloatQty($def_float_qty)
    {
        $this->container['def_float_qty'] = $def_float_qty;

        return $this;
    }

    /**
     * Gets aux_qty
     *
     * @return string
     */
    public function getAuxQty()
    {
        return $this->container['aux_qty'];
    }

    /**
     * Sets aux_qty
     *
     * @param string $aux_qty aux_qty
     *
     * @return $this
     */
    public function setAuxQty($aux_qty)
    {
        $this->container['aux_qty'] = $aux_qty;

        return $this;
    }

    /**
     * Gets aux_unit_id
     *
     * @return string
     */
    public function getAuxUnitId()
    {
        return $this->container['aux_unit_id'];
    }

    /**
     * Sets aux_unit_id
     *
     * @param string $aux_unit_id aux_unit_id
     *
     * @return $this
     */
    public function setAuxUnitId($aux_unit_id)
    {
        $this->container['aux_unit_id'] = $aux_unit_id;

        return $this;
    }

    /**
     * Gets sn_list
     *
     * @return string
     */
    public function getSnList()
    {
        return $this->container['sn_list'];
    }

    /**
     * Sets sn_list
     *
     * @param string $sn_list sn_list
     *
     * @return $this
     */
    public function setSnList($sn_list)
    {
        $this->container['sn_list'] = $sn_list;

        return $this;
    }

    /**
     * Gets sn_list_id
     *
     * @return string
     */
    public function getSnListId()
    {
        return $this->container['sn_list_id'];
    }

    /**
     * Sets sn_list_id
     *
     * @param string $sn_list_id sn_list_id
     *
     * @return $this
     */
    public function setSnListId($sn_list_id)
    {
        $this->container['sn_list_id'] = $sn_list_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


