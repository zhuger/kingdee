<?php
/**
 * InventoryInvListReq
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * InventoryInvListReq Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InventoryInvListReq implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Inventory_invListReq';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'modify_end_time' => 'string',
        'create_start_time' => 'string',
        'sp_ids' => 'string[]',
        'aux_prop_numbers' => 'string[]',
        'aux_prop_ids' => 'string[]',
        'total_fields' => 'string[]',
        'sp_numbers' => 'string[]',
        'modify_start_time' => 'string',
        'material_ids' => 'string[]',
        'create_end_time' => 'string',
        'include_batch_kf_period' => 'bool',
        'point_date' => 'string',
        'material_numbers' => 'string[]',
        'stock_ids' => 'string[]',
        'stock_numbers' => 'string[]',
        'page' => 'int',
        'include_package' => 'bool',
        'page_size' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'modify_end_time' => null,
        'create_start_time' => null,
        'sp_ids' => null,
        'aux_prop_numbers' => null,
        'aux_prop_ids' => null,
        'total_fields' => null,
        'sp_numbers' => null,
        'modify_start_time' => null,
        'material_ids' => null,
        'create_end_time' => null,
        'include_batch_kf_period' => null,
        'point_date' => null,
        'material_numbers' => null,
        'stock_ids' => null,
        'stock_numbers' => null,
        'page' => 'int32',
        'include_package' => null,
        'page_size' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'modify_end_time' => 'modify_end_time',
        'create_start_time' => 'create_start_time',
        'sp_ids' => 'sp_ids',
        'aux_prop_numbers' => 'aux_prop_numbers',
        'aux_prop_ids' => 'aux_prop_ids',
        'total_fields' => 'total_fields',
        'sp_numbers' => 'sp_numbers',
        'modify_start_time' => 'modify_start_time',
        'material_ids' => 'material_ids',
        'create_end_time' => 'create_end_time',
        'include_batch_kf_period' => 'include_batch_kf_period',
        'point_date' => 'point_date',
        'material_numbers' => 'material_numbers',
        'stock_ids' => 'stock_ids',
        'stock_numbers' => 'stock_numbers',
        'page' => 'page',
        'include_package' => 'include_package',
        'page_size' => 'page_size'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'modify_end_time' => 'setModifyEndTime',
        'create_start_time' => 'setCreateStartTime',
        'sp_ids' => 'setSpIds',
        'aux_prop_numbers' => 'setAuxPropNumbers',
        'aux_prop_ids' => 'setAuxPropIds',
        'total_fields' => 'setTotalFields',
        'sp_numbers' => 'setSpNumbers',
        'modify_start_time' => 'setModifyStartTime',
        'material_ids' => 'setMaterialIds',
        'create_end_time' => 'setCreateEndTime',
        'include_batch_kf_period' => 'setIncludeBatchKfPeriod',
        'point_date' => 'setPointDate',
        'material_numbers' => 'setMaterialNumbers',
        'stock_ids' => 'setStockIds',
        'stock_numbers' => 'setStockNumbers',
        'page' => 'setPage',
        'include_package' => 'setIncludePackage',
        'page_size' => 'setPageSize'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'modify_end_time' => 'getModifyEndTime',
        'create_start_time' => 'getCreateStartTime',
        'sp_ids' => 'getSpIds',
        'aux_prop_numbers' => 'getAuxPropNumbers',
        'aux_prop_ids' => 'getAuxPropIds',
        'total_fields' => 'getTotalFields',
        'sp_numbers' => 'getSpNumbers',
        'modify_start_time' => 'getModifyStartTime',
        'material_ids' => 'getMaterialIds',
        'create_end_time' => 'getCreateEndTime',
        'include_batch_kf_period' => 'getIncludeBatchKfPeriod',
        'point_date' => 'getPointDate',
        'material_numbers' => 'getMaterialNumbers',
        'stock_ids' => 'getStockIds',
        'stock_numbers' => 'getStockNumbers',
        'page' => 'getPage',
        'include_package' => 'getIncludePackage',
        'page_size' => 'getPageSize'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['modify_end_time'] = isset($data['modify_end_time']) ? $data['modify_end_time'] : null;
        $this->container['create_start_time'] = isset($data['create_start_time']) ? $data['create_start_time'] : null;
        $this->container['sp_ids'] = isset($data['sp_ids']) ? $data['sp_ids'] : null;
        $this->container['aux_prop_numbers'] = isset($data['aux_prop_numbers']) ? $data['aux_prop_numbers'] : null;
        $this->container['aux_prop_ids'] = isset($data['aux_prop_ids']) ? $data['aux_prop_ids'] : null;
        $this->container['total_fields'] = isset($data['total_fields']) ? $data['total_fields'] : null;
        $this->container['sp_numbers'] = isset($data['sp_numbers']) ? $data['sp_numbers'] : null;
        $this->container['modify_start_time'] = isset($data['modify_start_time']) ? $data['modify_start_time'] : null;
        $this->container['material_ids'] = isset($data['material_ids']) ? $data['material_ids'] : null;
        $this->container['create_end_time'] = isset($data['create_end_time']) ? $data['create_end_time'] : null;
        $this->container['include_batch_kf_period'] = isset($data['include_batch_kf_period']) ? $data['include_batch_kf_period'] : null;
        $this->container['point_date'] = isset($data['point_date']) ? $data['point_date'] : null;
        $this->container['material_numbers'] = isset($data['material_numbers']) ? $data['material_numbers'] : null;
        $this->container['stock_ids'] = isset($data['stock_ids']) ? $data['stock_ids'] : null;
        $this->container['stock_numbers'] = isset($data['stock_numbers']) ? $data['stock_numbers'] : null;
        $this->container['page'] = isset($data['page']) ? $data['page'] : null;
        $this->container['include_package'] = isset($data['include_package']) ? $data['include_package'] : null;
        $this->container['page_size'] = isset($data['page_size']) ? $data['page_size'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets modify_end_time
     *
     * @return string
     */
    public function getModifyEndTime()
    {
        return $this->container['modify_end_time'];
    }

    /**
     * Sets modify_end_time
     *
     * @param string $modify_end_time modify_end_time
     *
     * @return $this
     */
    public function setModifyEndTime($modify_end_time)
    {
        $this->container['modify_end_time'] = $modify_end_time;

        return $this;
    }

    /**
     * Gets create_start_time
     *
     * @return string
     */
    public function getCreateStartTime()
    {
        return $this->container['create_start_time'];
    }

    /**
     * Sets create_start_time
     *
     * @param string $create_start_time create_start_time
     *
     * @return $this
     */
    public function setCreateStartTime($create_start_time)
    {
        $this->container['create_start_time'] = $create_start_time;

        return $this;
    }

    /**
     * Gets sp_ids
     *
     * @return string[]
     */
    public function getSpIds()
    {
        return $this->container['sp_ids'];
    }

    /**
     * Sets sp_ids
     *
     * @param string[] $sp_ids sp_ids
     *
     * @return $this
     */
    public function setSpIds($sp_ids)
    {
        $this->container['sp_ids'] = $sp_ids;

        return $this;
    }

    /**
     * Gets aux_prop_numbers
     *
     * @return string[]
     */
    public function getAuxPropNumbers()
    {
        return $this->container['aux_prop_numbers'];
    }

    /**
     * Sets aux_prop_numbers
     *
     * @param string[] $aux_prop_numbers aux_prop_numbers
     *
     * @return $this
     */
    public function setAuxPropNumbers($aux_prop_numbers)
    {
        $this->container['aux_prop_numbers'] = $aux_prop_numbers;

        return $this;
    }

    /**
     * Gets aux_prop_ids
     *
     * @return string[]
     */
    public function getAuxPropIds()
    {
        return $this->container['aux_prop_ids'];
    }

    /**
     * Sets aux_prop_ids
     *
     * @param string[] $aux_prop_ids aux_prop_ids
     *
     * @return $this
     */
    public function setAuxPropIds($aux_prop_ids)
    {
        $this->container['aux_prop_ids'] = $aux_prop_ids;

        return $this;
    }

    /**
     * Gets total_fields
     *
     * @return string[]
     */
    public function getTotalFields()
    {
        return $this->container['total_fields'];
    }

    /**
     * Sets total_fields
     *
     * @param string[] $total_fields total_fields
     *
     * @return $this
     */
    public function setTotalFields($total_fields)
    {
        $this->container['total_fields'] = $total_fields;

        return $this;
    }

    /**
     * Gets sp_numbers
     *
     * @return string[]
     */
    public function getSpNumbers()
    {
        return $this->container['sp_numbers'];
    }

    /**
     * Sets sp_numbers
     *
     * @param string[] $sp_numbers sp_numbers
     *
     * @return $this
     */
    public function setSpNumbers($sp_numbers)
    {
        $this->container['sp_numbers'] = $sp_numbers;

        return $this;
    }

    /**
     * Gets modify_start_time
     *
     * @return string
     */
    public function getModifyStartTime()
    {
        return $this->container['modify_start_time'];
    }

    /**
     * Sets modify_start_time
     *
     * @param string $modify_start_time modify_start_time
     *
     * @return $this
     */
    public function setModifyStartTime($modify_start_time)
    {
        $this->container['modify_start_time'] = $modify_start_time;

        return $this;
    }

    /**
     * Gets material_ids
     *
     * @return string[]
     */
    public function getMaterialIds()
    {
        return $this->container['material_ids'];
    }

    /**
     * Sets material_ids
     *
     * @param string[] $material_ids material_ids
     *
     * @return $this
     */
    public function setMaterialIds($material_ids)
    {
        $this->container['material_ids'] = $material_ids;

        return $this;
    }

    /**
     * Gets create_end_time
     *
     * @return string
     */
    public function getCreateEndTime()
    {
        return $this->container['create_end_time'];
    }

    /**
     * Sets create_end_time
     *
     * @param string $create_end_time create_end_time
     *
     * @return $this
     */
    public function setCreateEndTime($create_end_time)
    {
        $this->container['create_end_time'] = $create_end_time;

        return $this;
    }

    /**
     * Gets include_batch_kf_period
     *
     * @return bool
     */
    public function getIncludeBatchKfPeriod()
    {
        return $this->container['include_batch_kf_period'];
    }

    /**
     * Sets include_batch_kf_period
     *
     * @param bool $include_batch_kf_period include_batch_kf_period
     *
     * @return $this
     */
    public function setIncludeBatchKfPeriod($include_batch_kf_period)
    {
        $this->container['include_batch_kf_period'] = $include_batch_kf_period;

        return $this;
    }

    /**
     * Gets point_date
     *
     * @return string
     */
    public function getPointDate()
    {
        return $this->container['point_date'];
    }

    /**
     * Sets point_date
     *
     * @param string $point_date point_date
     *
     * @return $this
     */
    public function setPointDate($point_date)
    {
        $this->container['point_date'] = $point_date;

        return $this;
    }

    /**
     * Gets material_numbers
     *
     * @return string[]
     */
    public function getMaterialNumbers()
    {
        return $this->container['material_numbers'];
    }

    /**
     * Sets material_numbers
     *
     * @param string[] $material_numbers material_numbers
     *
     * @return $this
     */
    public function setMaterialNumbers($material_numbers)
    {
        $this->container['material_numbers'] = $material_numbers;

        return $this;
    }

    /**
     * Gets stock_ids
     *
     * @return string[]
     */
    public function getStockIds()
    {
        return $this->container['stock_ids'];
    }

    /**
     * Sets stock_ids
     *
     * @param string[] $stock_ids stock_ids
     *
     * @return $this
     */
    public function setStockIds($stock_ids)
    {
        $this->container['stock_ids'] = $stock_ids;

        return $this;
    }

    /**
     * Gets stock_numbers
     *
     * @return string[]
     */
    public function getStockNumbers()
    {
        return $this->container['stock_numbers'];
    }

    /**
     * Sets stock_numbers
     *
     * @param string[] $stock_numbers stock_numbers
     *
     * @return $this
     */
    public function setStockNumbers($stock_numbers)
    {
        $this->container['stock_numbers'] = $stock_numbers;

        return $this;
    }

    /**
     * Gets page
     *
     * @return int
     */
    public function getPage()
    {
        return $this->container['page'];
    }

    /**
     * Sets page
     *
     * @param int $page page
     *
     * @return $this
     */
    public function setPage($page)
    {
        $this->container['page'] = $page;

        return $this;
    }

    /**
     * Gets include_package
     *
     * @return bool
     */
    public function getIncludePackage()
    {
        return $this->container['include_package'];
    }

    /**
     * Sets include_package
     *
     * @param bool $include_package include_package
     *
     * @return $this
     */
    public function setIncludePackage($include_package)
    {
        $this->container['include_package'] = $include_package;

        return $this;
    }

    /**
     * Gets page_size
     *
     * @return int
     */
    public function getPageSize()
    {
        return $this->container['page_size'];
    }

    /**
     * Sets page_size
     *
     * @param int $page_size page_size
     *
     * @return $this
     */
    public function setPageSize($page_size)
    {
        $this->container['page_size'] = $page_size;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


