<?php
/**
 * CardSaveRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * CardSaveRequest Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CardSaveRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CardSaveRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'name' => 'string',
        'number' => 'string',
        'is_init' => 'bool',
        'group_id' => 'string',
        'qty' => 'string',
        'alter_mode_id' => 'string',
        'dept_list' => '\com_kingdee_service\data\entity\CardSaveRequestDeptlist[]',
        'depr_method_id' => 'string',
        'depr_type' => 'string',
        'begin_use_date' => 'string',
        'record_date' => 'string',
        'max_depr_periods' => 'string',
        'used_periods' => 'string',
        'orgval_list' => '\com_kingdee_service\data\entity\CardSaveRequestOrgvallist[]',
        'asset_acct_id' => 'string',
        'asset_acct_assist' => '\com_kingdee_service\data\entity\CommonAssist[]',
        'asset_detail_id' => 'string',
        'depr_detail_id' => 'string',
        'expense_list' => '\com_kingdee_service\data\entity\FaCardExpenselist[]',
        'tax_acct_id' => 'string',
        'tax_acct_assist' => '\com_kingdee_service\data\entity\CommonAssist[]',
        'tax_detail_id' => 'string',
        'dec_pre_acct_id' => 'string',
        'dec_pre_acct_assist' => '\com_kingdee_service\data\entity\CommonAssist[]',
        'dec_pre_detail_id' => 'string',
        'alter_acct_id' => 'string',
        'alter_acct_assist' => '\com_kingdee_service\data\entity\CommonAssist[]',
        'alter_detail_id' => 'string',
        'oppo_site_list' => '\com_kingdee_service\data\entity\CardSaveRequestOppositelist[]',
        'model' => 'string',
        'unit_id' => 'string',
        'emp_id' => 'string',
        'max_used_periods' => 'string',
        'location_id' => 'string',
        'location_name' => '\com_kingdee_service\data\entity\Devicelist[]',
        'tax' => 'string',
        'dec_pre_value' => 'string',
        'residue_value' => 'string',
        'net_value' => 'string',
        'net_amount' => 'string',
        'accum_depr' => 'string',
        'depr_acct_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'name' => null,
        'number' => null,
        'is_init' => null,
        'group_id' => null,
        'qty' => null,
        'alter_mode_id' => null,
        'dept_list' => null,
        'depr_method_id' => null,
        'depr_type' => null,
        'begin_use_date' => null,
        'record_date' => null,
        'max_depr_periods' => null,
        'used_periods' => null,
        'orgval_list' => null,
        'asset_acct_id' => null,
        'asset_acct_assist' => null,
        'asset_detail_id' => null,
        'depr_detail_id' => null,
        'expense_list' => null,
        'tax_acct_id' => null,
        'tax_acct_assist' => null,
        'tax_detail_id' => null,
        'dec_pre_acct_id' => null,
        'dec_pre_acct_assist' => null,
        'dec_pre_detail_id' => null,
        'alter_acct_id' => null,
        'alter_acct_assist' => null,
        'alter_detail_id' => null,
        'oppo_site_list' => null,
        'model' => null,
        'unit_id' => null,
        'emp_id' => null,
        'max_used_periods' => null,
        'location_id' => null,
        'location_name' => null,
        'tax' => null,
        'dec_pre_value' => null,
        'residue_value' => null,
        'net_value' => null,
        'net_amount' => null,
        'accum_depr' => null,
        'depr_acct_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'number' => 'number',
        'is_init' => 'is_init',
        'group_id' => 'group_id',
        'qty' => 'qty',
        'alter_mode_id' => 'alter_mode_id',
        'dept_list' => 'dept_list',
        'depr_method_id' => 'depr_method_id',
        'depr_type' => 'depr_type',
        'begin_use_date' => 'begin_use_date',
        'record_date' => 'record_date',
        'max_depr_periods' => 'max_depr_periods',
        'used_periods' => 'used_periods',
        'orgval_list' => 'orgval_list',
        'asset_acct_id' => 'asset_acct_id',
        'asset_acct_assist' => 'asset_acct_assist',
        'asset_detail_id' => 'asset_detail_id',
        'depr_detail_id' => 'depr_detail_id',
        'expense_list' => 'expense_list',
        'tax_acct_id' => 'tax_acct_id',
        'tax_acct_assist' => 'tax_acct_assist',
        'tax_detail_id' => 'tax_detail_id',
        'dec_pre_acct_id' => 'dec_pre_acct_id',
        'dec_pre_acct_assist' => 'dec_pre_acct_assist',
        'dec_pre_detail_id' => 'dec_pre_detail_id',
        'alter_acct_id' => 'alter_acct_id',
        'alter_acct_assist' => 'alter_acct_assist',
        'alter_detail_id' => 'alter_detail_id',
        'oppo_site_list' => 'oppo_site_list',
        'model' => 'model',
        'unit_id' => 'unit_id',
        'emp_id' => 'emp_id',
        'max_used_periods' => 'max_used_periods',
        'location_id' => 'location_id',
        'location_name' => 'location_name',
        'tax' => 'tax',
        'dec_pre_value' => 'dec_pre_value',
        'residue_value' => 'residue_value',
        'net_value' => 'net_value',
        'net_amount' => 'net_amount',
        'accum_depr' => 'accum_depr',
        'depr_acct_id' => 'depr_acct_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'number' => 'setNumber',
        'is_init' => 'setIsInit',
        'group_id' => 'setGroupId',
        'qty' => 'setQty',
        'alter_mode_id' => 'setAlterModeId',
        'dept_list' => 'setDeptList',
        'depr_method_id' => 'setDeprMethodId',
        'depr_type' => 'setDeprType',
        'begin_use_date' => 'setBeginUseDate',
        'record_date' => 'setRecordDate',
        'max_depr_periods' => 'setMaxDeprPeriods',
        'used_periods' => 'setUsedPeriods',
        'orgval_list' => 'setOrgvalList',
        'asset_acct_id' => 'setAssetAcctId',
        'asset_acct_assist' => 'setAssetAcctAssist',
        'asset_detail_id' => 'setAssetDetailId',
        'depr_detail_id' => 'setDeprDetailId',
        'expense_list' => 'setExpenseList',
        'tax_acct_id' => 'setTaxAcctId',
        'tax_acct_assist' => 'setTaxAcctAssist',
        'tax_detail_id' => 'setTaxDetailId',
        'dec_pre_acct_id' => 'setDecPreAcctId',
        'dec_pre_acct_assist' => 'setDecPreAcctAssist',
        'dec_pre_detail_id' => 'setDecPreDetailId',
        'alter_acct_id' => 'setAlterAcctId',
        'alter_acct_assist' => 'setAlterAcctAssist',
        'alter_detail_id' => 'setAlterDetailId',
        'oppo_site_list' => 'setOppoSiteList',
        'model' => 'setModel',
        'unit_id' => 'setUnitId',
        'emp_id' => 'setEmpId',
        'max_used_periods' => 'setMaxUsedPeriods',
        'location_id' => 'setLocationId',
        'location_name' => 'setLocationName',
        'tax' => 'setTax',
        'dec_pre_value' => 'setDecPreValue',
        'residue_value' => 'setResidueValue',
        'net_value' => 'setNetValue',
        'net_amount' => 'setNetAmount',
        'accum_depr' => 'setAccumDepr',
        'depr_acct_id' => 'setDeprAcctId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'number' => 'getNumber',
        'is_init' => 'getIsInit',
        'group_id' => 'getGroupId',
        'qty' => 'getQty',
        'alter_mode_id' => 'getAlterModeId',
        'dept_list' => 'getDeptList',
        'depr_method_id' => 'getDeprMethodId',
        'depr_type' => 'getDeprType',
        'begin_use_date' => 'getBeginUseDate',
        'record_date' => 'getRecordDate',
        'max_depr_periods' => 'getMaxDeprPeriods',
        'used_periods' => 'getUsedPeriods',
        'orgval_list' => 'getOrgvalList',
        'asset_acct_id' => 'getAssetAcctId',
        'asset_acct_assist' => 'getAssetAcctAssist',
        'asset_detail_id' => 'getAssetDetailId',
        'depr_detail_id' => 'getDeprDetailId',
        'expense_list' => 'getExpenseList',
        'tax_acct_id' => 'getTaxAcctId',
        'tax_acct_assist' => 'getTaxAcctAssist',
        'tax_detail_id' => 'getTaxDetailId',
        'dec_pre_acct_id' => 'getDecPreAcctId',
        'dec_pre_acct_assist' => 'getDecPreAcctAssist',
        'dec_pre_detail_id' => 'getDecPreDetailId',
        'alter_acct_id' => 'getAlterAcctId',
        'alter_acct_assist' => 'getAlterAcctAssist',
        'alter_detail_id' => 'getAlterDetailId',
        'oppo_site_list' => 'getOppoSiteList',
        'model' => 'getModel',
        'unit_id' => 'getUnitId',
        'emp_id' => 'getEmpId',
        'max_used_periods' => 'getMaxUsedPeriods',
        'location_id' => 'getLocationId',
        'location_name' => 'getLocationName',
        'tax' => 'getTax',
        'dec_pre_value' => 'getDecPreValue',
        'residue_value' => 'getResidueValue',
        'net_value' => 'getNetValue',
        'net_amount' => 'getNetAmount',
        'accum_depr' => 'getAccumDepr',
        'depr_acct_id' => 'getDeprAcctId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['is_init'] = isset($data['is_init']) ? $data['is_init'] : null;
        $this->container['group_id'] = isset($data['group_id']) ? $data['group_id'] : null;
        $this->container['qty'] = isset($data['qty']) ? $data['qty'] : null;
        $this->container['alter_mode_id'] = isset($data['alter_mode_id']) ? $data['alter_mode_id'] : null;
        $this->container['dept_list'] = isset($data['dept_list']) ? $data['dept_list'] : null;
        $this->container['depr_method_id'] = isset($data['depr_method_id']) ? $data['depr_method_id'] : null;
        $this->container['depr_type'] = isset($data['depr_type']) ? $data['depr_type'] : null;
        $this->container['begin_use_date'] = isset($data['begin_use_date']) ? $data['begin_use_date'] : null;
        $this->container['record_date'] = isset($data['record_date']) ? $data['record_date'] : null;
        $this->container['max_depr_periods'] = isset($data['max_depr_periods']) ? $data['max_depr_periods'] : null;
        $this->container['used_periods'] = isset($data['used_periods']) ? $data['used_periods'] : null;
        $this->container['orgval_list'] = isset($data['orgval_list']) ? $data['orgval_list'] : null;
        $this->container['asset_acct_id'] = isset($data['asset_acct_id']) ? $data['asset_acct_id'] : null;
        $this->container['asset_acct_assist'] = isset($data['asset_acct_assist']) ? $data['asset_acct_assist'] : null;
        $this->container['asset_detail_id'] = isset($data['asset_detail_id']) ? $data['asset_detail_id'] : null;
        $this->container['depr_detail_id'] = isset($data['depr_detail_id']) ? $data['depr_detail_id'] : null;
        $this->container['expense_list'] = isset($data['expense_list']) ? $data['expense_list'] : null;
        $this->container['tax_acct_id'] = isset($data['tax_acct_id']) ? $data['tax_acct_id'] : null;
        $this->container['tax_acct_assist'] = isset($data['tax_acct_assist']) ? $data['tax_acct_assist'] : null;
        $this->container['tax_detail_id'] = isset($data['tax_detail_id']) ? $data['tax_detail_id'] : null;
        $this->container['dec_pre_acct_id'] = isset($data['dec_pre_acct_id']) ? $data['dec_pre_acct_id'] : null;
        $this->container['dec_pre_acct_assist'] = isset($data['dec_pre_acct_assist']) ? $data['dec_pre_acct_assist'] : null;
        $this->container['dec_pre_detail_id'] = isset($data['dec_pre_detail_id']) ? $data['dec_pre_detail_id'] : null;
        $this->container['alter_acct_id'] = isset($data['alter_acct_id']) ? $data['alter_acct_id'] : null;
        $this->container['alter_acct_assist'] = isset($data['alter_acct_assist']) ? $data['alter_acct_assist'] : null;
        $this->container['alter_detail_id'] = isset($data['alter_detail_id']) ? $data['alter_detail_id'] : null;
        $this->container['oppo_site_list'] = isset($data['oppo_site_list']) ? $data['oppo_site_list'] : null;
        $this->container['model'] = isset($data['model']) ? $data['model'] : null;
        $this->container['unit_id'] = isset($data['unit_id']) ? $data['unit_id'] : null;
        $this->container['emp_id'] = isset($data['emp_id']) ? $data['emp_id'] : null;
        $this->container['max_used_periods'] = isset($data['max_used_periods']) ? $data['max_used_periods'] : null;
        $this->container['location_id'] = isset($data['location_id']) ? $data['location_id'] : null;
        $this->container['location_name'] = isset($data['location_name']) ? $data['location_name'] : null;
        $this->container['tax'] = isset($data['tax']) ? $data['tax'] : null;
        $this->container['dec_pre_value'] = isset($data['dec_pre_value']) ? $data['dec_pre_value'] : null;
        $this->container['residue_value'] = isset($data['residue_value']) ? $data['residue_value'] : null;
        $this->container['net_value'] = isset($data['net_value']) ? $data['net_value'] : null;
        $this->container['net_amount'] = isset($data['net_amount']) ? $data['net_amount'] : null;
        $this->container['accum_depr'] = isset($data['accum_depr']) ? $data['accum_depr'] : null;
        $this->container['depr_acct_id'] = isset($data['depr_acct_id']) ? $data['depr_acct_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string $number number
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets is_init
     *
     * @return bool
     */
    public function getIsInit()
    {
        return $this->container['is_init'];
    }

    /**
     * Sets is_init
     *
     * @param bool $is_init is_init
     *
     * @return $this
     */
    public function setIsInit($is_init)
    {
        $this->container['is_init'] = $is_init;

        return $this;
    }

    /**
     * Gets group_id
     *
     * @return string
     */
    public function getGroupId()
    {
        return $this->container['group_id'];
    }

    /**
     * Sets group_id
     *
     * @param string $group_id group_id
     *
     * @return $this
     */
    public function setGroupId($group_id)
    {
        $this->container['group_id'] = $group_id;

        return $this;
    }

    /**
     * Gets qty
     *
     * @return string
     */
    public function getQty()
    {
        return $this->container['qty'];
    }

    /**
     * Sets qty
     *
     * @param string $qty qty
     *
     * @return $this
     */
    public function setQty($qty)
    {
        $this->container['qty'] = $qty;

        return $this;
    }

    /**
     * Gets alter_mode_id
     *
     * @return string
     */
    public function getAlterModeId()
    {
        return $this->container['alter_mode_id'];
    }

    /**
     * Sets alter_mode_id
     *
     * @param string $alter_mode_id alter_mode_id
     *
     * @return $this
     */
    public function setAlterModeId($alter_mode_id)
    {
        $this->container['alter_mode_id'] = $alter_mode_id;

        return $this;
    }

    /**
     * Gets dept_list
     *
     * @return \com_kingdee_service\data\entity\CardSaveRequestDeptlist[]
     */
    public function getDeptList()
    {
        return $this->container['dept_list'];
    }

    /**
     * Sets dept_list
     *
     * @param \com_kingdee_service\data\entity\CardSaveRequestDeptlist[] $dept_list dept_list
     *
     * @return $this
     */
    public function setDeptList($dept_list)
    {
        $this->container['dept_list'] = $dept_list;

        return $this;
    }

    /**
     * Gets depr_method_id
     *
     * @return string
     */
    public function getDeprMethodId()
    {
        return $this->container['depr_method_id'];
    }

    /**
     * Sets depr_method_id
     *
     * @param string $depr_method_id depr_method_id
     *
     * @return $this
     */
    public function setDeprMethodId($depr_method_id)
    {
        $this->container['depr_method_id'] = $depr_method_id;

        return $this;
    }

    /**
     * Gets depr_type
     *
     * @return string
     */
    public function getDeprType()
    {
        return $this->container['depr_type'];
    }

    /**
     * Sets depr_type
     *
     * @param string $depr_type depr_type
     *
     * @return $this
     */
    public function setDeprType($depr_type)
    {
        $this->container['depr_type'] = $depr_type;

        return $this;
    }

    /**
     * Gets begin_use_date
     *
     * @return string
     */
    public function getBeginUseDate()
    {
        return $this->container['begin_use_date'];
    }

    /**
     * Sets begin_use_date
     *
     * @param string $begin_use_date begin_use_date
     *
     * @return $this
     */
    public function setBeginUseDate($begin_use_date)
    {
        $this->container['begin_use_date'] = $begin_use_date;

        return $this;
    }

    /**
     * Gets record_date
     *
     * @return string
     */
    public function getRecordDate()
    {
        return $this->container['record_date'];
    }

    /**
     * Sets record_date
     *
     * @param string $record_date record_date
     *
     * @return $this
     */
    public function setRecordDate($record_date)
    {
        $this->container['record_date'] = $record_date;

        return $this;
    }

    /**
     * Gets max_depr_periods
     *
     * @return string
     */
    public function getMaxDeprPeriods()
    {
        return $this->container['max_depr_periods'];
    }

    /**
     * Sets max_depr_periods
     *
     * @param string $max_depr_periods max_depr_periods
     *
     * @return $this
     */
    public function setMaxDeprPeriods($max_depr_periods)
    {
        $this->container['max_depr_periods'] = $max_depr_periods;

        return $this;
    }

    /**
     * Gets used_periods
     *
     * @return string
     */
    public function getUsedPeriods()
    {
        return $this->container['used_periods'];
    }

    /**
     * Sets used_periods
     *
     * @param string $used_periods used_periods
     *
     * @return $this
     */
    public function setUsedPeriods($used_periods)
    {
        $this->container['used_periods'] = $used_periods;

        return $this;
    }

    /**
     * Gets orgval_list
     *
     * @return \com_kingdee_service\data\entity\CardSaveRequestOrgvallist[]
     */
    public function getOrgvalList()
    {
        return $this->container['orgval_list'];
    }

    /**
     * Sets orgval_list
     *
     * @param \com_kingdee_service\data\entity\CardSaveRequestOrgvallist[] $orgval_list orgval_list
     *
     * @return $this
     */
    public function setOrgvalList($orgval_list)
    {
        $this->container['orgval_list'] = $orgval_list;

        return $this;
    }

    /**
     * Gets asset_acct_id
     *
     * @return string
     */
    public function getAssetAcctId()
    {
        return $this->container['asset_acct_id'];
    }

    /**
     * Sets asset_acct_id
     *
     * @param string $asset_acct_id asset_acct_id
     *
     * @return $this
     */
    public function setAssetAcctId($asset_acct_id)
    {
        $this->container['asset_acct_id'] = $asset_acct_id;

        return $this;
    }

    /**
     * Gets asset_acct_assist
     *
     * @return \com_kingdee_service\data\entity\CommonAssist[]
     */
    public function getAssetAcctAssist()
    {
        return $this->container['asset_acct_assist'];
    }

    /**
     * Sets asset_acct_assist
     *
     * @param \com_kingdee_service\data\entity\CommonAssist[] $asset_acct_assist asset_acct_assist
     *
     * @return $this
     */
    public function setAssetAcctAssist($asset_acct_assist)
    {
        $this->container['asset_acct_assist'] = $asset_acct_assist;

        return $this;
    }

    /**
     * Gets asset_detail_id
     *
     * @return string
     */
    public function getAssetDetailId()
    {
        return $this->container['asset_detail_id'];
    }

    /**
     * Sets asset_detail_id
     *
     * @param string $asset_detail_id asset_detail_id
     *
     * @return $this
     */
    public function setAssetDetailId($asset_detail_id)
    {
        $this->container['asset_detail_id'] = $asset_detail_id;

        return $this;
    }

    /**
     * Gets depr_detail_id
     *
     * @return string
     */
    public function getDeprDetailId()
    {
        return $this->container['depr_detail_id'];
    }

    /**
     * Sets depr_detail_id
     *
     * @param string $depr_detail_id depr_detail_id
     *
     * @return $this
     */
    public function setDeprDetailId($depr_detail_id)
    {
        $this->container['depr_detail_id'] = $depr_detail_id;

        return $this;
    }

    /**
     * Gets expense_list
     *
     * @return \com_kingdee_service\data\entity\FaCardExpenselist[]
     */
    public function getExpenseList()
    {
        return $this->container['expense_list'];
    }

    /**
     * Sets expense_list
     *
     * @param \com_kingdee_service\data\entity\FaCardExpenselist[] $expense_list expense_list
     *
     * @return $this
     */
    public function setExpenseList($expense_list)
    {
        $this->container['expense_list'] = $expense_list;

        return $this;
    }

    /**
     * Gets tax_acct_id
     *
     * @return string
     */
    public function getTaxAcctId()
    {
        return $this->container['tax_acct_id'];
    }

    /**
     * Sets tax_acct_id
     *
     * @param string $tax_acct_id tax_acct_id
     *
     * @return $this
     */
    public function setTaxAcctId($tax_acct_id)
    {
        $this->container['tax_acct_id'] = $tax_acct_id;

        return $this;
    }

    /**
     * Gets tax_acct_assist
     *
     * @return \com_kingdee_service\data\entity\CommonAssist[]
     */
    public function getTaxAcctAssist()
    {
        return $this->container['tax_acct_assist'];
    }

    /**
     * Sets tax_acct_assist
     *
     * @param \com_kingdee_service\data\entity\CommonAssist[] $tax_acct_assist tax_acct_assist
     *
     * @return $this
     */
    public function setTaxAcctAssist($tax_acct_assist)
    {
        $this->container['tax_acct_assist'] = $tax_acct_assist;

        return $this;
    }

    /**
     * Gets tax_detail_id
     *
     * @return string
     */
    public function getTaxDetailId()
    {
        return $this->container['tax_detail_id'];
    }

    /**
     * Sets tax_detail_id
     *
     * @param string $tax_detail_id tax_detail_id
     *
     * @return $this
     */
    public function setTaxDetailId($tax_detail_id)
    {
        $this->container['tax_detail_id'] = $tax_detail_id;

        return $this;
    }

    /**
     * Gets dec_pre_acct_id
     *
     * @return string
     */
    public function getDecPreAcctId()
    {
        return $this->container['dec_pre_acct_id'];
    }

    /**
     * Sets dec_pre_acct_id
     *
     * @param string $dec_pre_acct_id dec_pre_acct_id
     *
     * @return $this
     */
    public function setDecPreAcctId($dec_pre_acct_id)
    {
        $this->container['dec_pre_acct_id'] = $dec_pre_acct_id;

        return $this;
    }

    /**
     * Gets dec_pre_acct_assist
     *
     * @return \com_kingdee_service\data\entity\CommonAssist[]
     */
    public function getDecPreAcctAssist()
    {
        return $this->container['dec_pre_acct_assist'];
    }

    /**
     * Sets dec_pre_acct_assist
     *
     * @param \com_kingdee_service\data\entity\CommonAssist[] $dec_pre_acct_assist dec_pre_acct_assist
     *
     * @return $this
     */
    public function setDecPreAcctAssist($dec_pre_acct_assist)
    {
        $this->container['dec_pre_acct_assist'] = $dec_pre_acct_assist;

        return $this;
    }

    /**
     * Gets dec_pre_detail_id
     *
     * @return string
     */
    public function getDecPreDetailId()
    {
        return $this->container['dec_pre_detail_id'];
    }

    /**
     * Sets dec_pre_detail_id
     *
     * @param string $dec_pre_detail_id dec_pre_detail_id
     *
     * @return $this
     */
    public function setDecPreDetailId($dec_pre_detail_id)
    {
        $this->container['dec_pre_detail_id'] = $dec_pre_detail_id;

        return $this;
    }

    /**
     * Gets alter_acct_id
     *
     * @return string
     */
    public function getAlterAcctId()
    {
        return $this->container['alter_acct_id'];
    }

    /**
     * Sets alter_acct_id
     *
     * @param string $alter_acct_id alter_acct_id
     *
     * @return $this
     */
    public function setAlterAcctId($alter_acct_id)
    {
        $this->container['alter_acct_id'] = $alter_acct_id;

        return $this;
    }

    /**
     * Gets alter_acct_assist
     *
     * @return \com_kingdee_service\data\entity\CommonAssist[]
     */
    public function getAlterAcctAssist()
    {
        return $this->container['alter_acct_assist'];
    }

    /**
     * Sets alter_acct_assist
     *
     * @param \com_kingdee_service\data\entity\CommonAssist[] $alter_acct_assist alter_acct_assist
     *
     * @return $this
     */
    public function setAlterAcctAssist($alter_acct_assist)
    {
        $this->container['alter_acct_assist'] = $alter_acct_assist;

        return $this;
    }

    /**
     * Gets alter_detail_id
     *
     * @return string
     */
    public function getAlterDetailId()
    {
        return $this->container['alter_detail_id'];
    }

    /**
     * Sets alter_detail_id
     *
     * @param string $alter_detail_id alter_detail_id
     *
     * @return $this
     */
    public function setAlterDetailId($alter_detail_id)
    {
        $this->container['alter_detail_id'] = $alter_detail_id;

        return $this;
    }

    /**
     * Gets oppo_site_list
     *
     * @return \com_kingdee_service\data\entity\CardSaveRequestOppositelist[]
     */
    public function getOppoSiteList()
    {
        return $this->container['oppo_site_list'];
    }

    /**
     * Sets oppo_site_list
     *
     * @param \com_kingdee_service\data\entity\CardSaveRequestOppositelist[] $oppo_site_list oppo_site_list
     *
     * @return $this
     */
    public function setOppoSiteList($oppo_site_list)
    {
        $this->container['oppo_site_list'] = $oppo_site_list;

        return $this;
    }

    /**
     * Gets model
     *
     * @return string
     */
    public function getModel()
    {
        return $this->container['model'];
    }

    /**
     * Sets model
     *
     * @param string $model model
     *
     * @return $this
     */
    public function setModel($model)
    {
        $this->container['model'] = $model;

        return $this;
    }

    /**
     * Gets unit_id
     *
     * @return string
     */
    public function getUnitId()
    {
        return $this->container['unit_id'];
    }

    /**
     * Sets unit_id
     *
     * @param string $unit_id unit_id
     *
     * @return $this
     */
    public function setUnitId($unit_id)
    {
        $this->container['unit_id'] = $unit_id;

        return $this;
    }

    /**
     * Gets emp_id
     *
     * @return string
     */
    public function getEmpId()
    {
        return $this->container['emp_id'];
    }

    /**
     * Sets emp_id
     *
     * @param string $emp_id emp_id
     *
     * @return $this
     */
    public function setEmpId($emp_id)
    {
        $this->container['emp_id'] = $emp_id;

        return $this;
    }

    /**
     * Gets max_used_periods
     *
     * @return string
     */
    public function getMaxUsedPeriods()
    {
        return $this->container['max_used_periods'];
    }

    /**
     * Sets max_used_periods
     *
     * @param string $max_used_periods max_used_periods
     *
     * @return $this
     */
    public function setMaxUsedPeriods($max_used_periods)
    {
        $this->container['max_used_periods'] = $max_used_periods;

        return $this;
    }

    /**
     * Gets location_id
     *
     * @return string
     */
    public function getLocationId()
    {
        return $this->container['location_id'];
    }

    /**
     * Sets location_id
     *
     * @param string $location_id location_id
     *
     * @return $this
     */
    public function setLocationId($location_id)
    {
        $this->container['location_id'] = $location_id;

        return $this;
    }

    /**
     * Gets location_name
     *
     * @return \com_kingdee_service\data\entity\Devicelist[]
     */
    public function getLocationName()
    {
        return $this->container['location_name'];
    }

    /**
     * Sets location_name
     *
     * @param \com_kingdee_service\data\entity\Devicelist[] $location_name location_name
     *
     * @return $this
     */
    public function setLocationName($location_name)
    {
        $this->container['location_name'] = $location_name;

        return $this;
    }

    /**
     * Gets tax
     *
     * @return string
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param string $tax tax
     *
     * @return $this
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }

    /**
     * Gets dec_pre_value
     *
     * @return string
     */
    public function getDecPreValue()
    {
        return $this->container['dec_pre_value'];
    }

    /**
     * Sets dec_pre_value
     *
     * @param string $dec_pre_value dec_pre_value
     *
     * @return $this
     */
    public function setDecPreValue($dec_pre_value)
    {
        $this->container['dec_pre_value'] = $dec_pre_value;

        return $this;
    }

    /**
     * Gets residue_value
     *
     * @return string
     */
    public function getResidueValue()
    {
        return $this->container['residue_value'];
    }

    /**
     * Sets residue_value
     *
     * @param string $residue_value residue_value
     *
     * @return $this
     */
    public function setResidueValue($residue_value)
    {
        $this->container['residue_value'] = $residue_value;

        return $this;
    }

    /**
     * Gets net_value
     *
     * @return string
     */
    public function getNetValue()
    {
        return $this->container['net_value'];
    }

    /**
     * Sets net_value
     *
     * @param string $net_value net_value
     *
     * @return $this
     */
    public function setNetValue($net_value)
    {
        $this->container['net_value'] = $net_value;

        return $this;
    }

    /**
     * Gets net_amount
     *
     * @return string
     */
    public function getNetAmount()
    {
        return $this->container['net_amount'];
    }

    /**
     * Sets net_amount
     *
     * @param string $net_amount net_amount
     *
     * @return $this
     */
    public function setNetAmount($net_amount)
    {
        $this->container['net_amount'] = $net_amount;

        return $this;
    }

    /**
     * Gets accum_depr
     *
     * @return string
     */
    public function getAccumDepr()
    {
        return $this->container['accum_depr'];
    }

    /**
     * Sets accum_depr
     *
     * @param string $accum_depr accum_depr
     *
     * @return $this
     */
    public function setAccumDepr($accum_depr)
    {
        $this->container['accum_depr'] = $accum_depr;

        return $this;
    }

    /**
     * Gets depr_acct_id
     *
     * @return string
     */
    public function getDeprAcctId()
    {
        return $this->container['depr_acct_id'];
    }

    /**
     * Sets depr_acct_id
     *
     * @param string $depr_acct_id depr_acct_id
     *
     * @return $this
     */
    public function setDeprAcctId($depr_acct_id)
    {
        $this->container['depr_acct_id'] = $depr_acct_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


