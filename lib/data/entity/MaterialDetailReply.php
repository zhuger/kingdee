<?php
/**
 * MaterialDetailReply
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * MaterialDetailReply Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MaterialDetailReply implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'MaterialDetailReply';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'number' => 'string',
        'name' => 'string',
        'enable' => 'string',
        'base_unit_id' => 'string',
        'base_unit_name' => 'string',
        'aux_unit_name' => 'string',
        'mul_label' => '\com_kingdee_service\data\entity\Mullabel[]',
        'barcode' => 'string',
        'model' => 'string',
        'brand_id' => 'string',
        'producing_pace' => 'string',
        'help_code' => 'string',
        'is_multi_unit' => 'bool',
        'fix_unit_id1' => 'string',
        'coefficient1' => 'float',
        'conversion_unit_id1' => 'string',
        'fix_unit_id2' => 'string',
        'coefficient2' => 'float',
        'conversion_unit_id2' => 'string',
        'fix_unit_id3' => 'string',
        'coefficient3' => 'float',
        'conversion_unit_id3' => 'string',
        'purchase_unit_id' => 'string',
        'sale_unit_id' => 'string',
        'store_unit_id' => 'string',
        'aux_unit_id' => 'string',
        'aux_unit_number' => 'string',
        'is_weight' => 'bool',
        'is_serial' => 'bool',
        'is_batch' => 'bool',
        'is_sale' => 'bool',
        'is_purchase' => 'bool',
        'is_subpart' => 'bool',
        'is_assembly' => 'bool',
        'is_kf_period' => 'bool',
        'kf_period_type' => 'string',
        'kf_period' => 'string',
        'alarm_day' => 'string',
        'is_asst_attr' => 'bool',
        'aux_entity' => '\com_kingdee_service\data\entity\Auxentity[]',
        'barcode_entity' => '\com_kingdee_service\data\entity\BarcodeEntityDetails[]',
        'price_entity' => '\com_kingdee_service\data\entity\PriceEntityDetails[]',
        'inv_mgr_type' => 'string',
        'min_inventory_qty' => 'string',
        'max_inventory_qty' => 'string',
        'sec_inventory_qty' => 'string',
        'cost_method' => 'string',
        'fetch_category_id' => 'string',
        'tax_rate' => 'string',
        'stock_id' => 'string',
        'space_id' => 'string',
        'vender_id' => 'string',
        'purchase_id' => 'string',
        'refistration_number' => 'string',
        'pro_license' => 'string',
        'gross_weight' => 'string',
        'net_weight' => 'string',
        'weight_unit_id' => 'string',
        'length' => 'string',
        'wide' => 'string',
        'high' => 'string',
        'volume' => 'string',
        'images' => '\com_kingdee_service\data\entity\Image[]',
        'check_type' => 'string',
        'remark' => 'string',
        'custom_field' => 'map[string,string]',
        'parent_number' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'number' => null,
        'name' => null,
        'enable' => null,
        'base_unit_id' => null,
        'base_unit_name' => null,
        'aux_unit_name' => null,
        'mul_label' => null,
        'barcode' => null,
        'model' => null,
        'brand_id' => null,
        'producing_pace' => null,
        'help_code' => null,
        'is_multi_unit' => null,
        'fix_unit_id1' => null,
        'coefficient1' => 'float',
        'conversion_unit_id1' => null,
        'fix_unit_id2' => null,
        'coefficient2' => 'float',
        'conversion_unit_id2' => null,
        'fix_unit_id3' => null,
        'coefficient3' => 'float',
        'conversion_unit_id3' => null,
        'purchase_unit_id' => null,
        'sale_unit_id' => null,
        'store_unit_id' => null,
        'aux_unit_id' => null,
        'aux_unit_number' => null,
        'is_weight' => null,
        'is_serial' => null,
        'is_batch' => null,
        'is_sale' => null,
        'is_purchase' => null,
        'is_subpart' => null,
        'is_assembly' => null,
        'is_kf_period' => null,
        'kf_period_type' => null,
        'kf_period' => null,
        'alarm_day' => null,
        'is_asst_attr' => null,
        'aux_entity' => null,
        'barcode_entity' => null,
        'price_entity' => null,
        'inv_mgr_type' => null,
        'min_inventory_qty' => null,
        'max_inventory_qty' => null,
        'sec_inventory_qty' => null,
        'cost_method' => null,
        'fetch_category_id' => null,
        'tax_rate' => null,
        'stock_id' => null,
        'space_id' => null,
        'vender_id' => null,
        'purchase_id' => null,
        'refistration_number' => null,
        'pro_license' => null,
        'gross_weight' => null,
        'net_weight' => null,
        'weight_unit_id' => null,
        'length' => null,
        'wide' => null,
        'high' => null,
        'volume' => null,
        'images' => null,
        'check_type' => null,
        'remark' => null,
        'custom_field' => null,
        'parent_number' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'number' => 'number',
        'name' => 'name',
        'enable' => 'enable',
        'base_unit_id' => 'base_unit_id',
        'base_unit_name' => 'base_unit_name',
        'aux_unit_name' => 'aux_unit_name',
        'mul_label' => 'mul_label',
        'barcode' => 'barcode',
        'model' => 'model',
        'brand_id' => 'brand_id',
        'producing_pace' => 'producing_pace',
        'help_code' => 'help_code',
        'is_multi_unit' => 'is_multi_unit',
        'fix_unit_id1' => 'fix_unit_id1',
        'coefficient1' => 'coefficient1',
        'conversion_unit_id1' => 'conversion_unit_id1',
        'fix_unit_id2' => 'fix_unit_id2',
        'coefficient2' => 'coefficient2',
        'conversion_unit_id2' => 'conversion_unit_id2',
        'fix_unit_id3' => 'fix_unit_id3',
        'coefficient3' => 'coefficient3',
        'conversion_unit_id3' => 'conversion_unit_id3',
        'purchase_unit_id' => 'purchase_unit_id',
        'sale_unit_id' => 'sale_unit_id',
        'store_unit_id' => 'store_unit_id',
        'aux_unit_id' => 'aux_unit_id',
        'aux_unit_number' => 'aux_unit_number',
        'is_weight' => 'is_weight',
        'is_serial' => 'is_serial',
        'is_batch' => 'is_batch',
        'is_sale' => 'is_sale',
        'is_purchase' => 'is_purchase',
        'is_subpart' => 'is_subpart',
        'is_assembly' => 'is_assembly',
        'is_kf_period' => 'is_kf_period',
        'kf_period_type' => 'kf_period_type',
        'kf_period' => 'kf_period',
        'alarm_day' => 'alarm_day',
        'is_asst_attr' => 'is_asst_attr',
        'aux_entity' => 'aux_entity',
        'barcode_entity' => 'barcode_entity',
        'price_entity' => 'price_entity',
        'inv_mgr_type' => 'inv_mgr_type',
        'min_inventory_qty' => 'min_inventory_qty',
        'max_inventory_qty' => 'max_inventory_qty',
        'sec_inventory_qty' => 'sec_inventory_qty',
        'cost_method' => 'cost_method',
        'fetch_category_id' => 'fetch_category_id',
        'tax_rate' => 'tax_rate',
        'stock_id' => 'stock_id',
        'space_id' => 'space_id',
        'vender_id' => 'vender_id',
        'purchase_id' => 'purchase_id',
        'refistration_number' => 'refistration_number',
        'pro_license' => 'pro_license',
        'gross_weight' => 'gross_weight',
        'net_weight' => 'net_weight',
        'weight_unit_id' => 'weight_unit_id',
        'length' => 'length',
        'wide' => 'wide',
        'high' => 'high',
        'volume' => 'volume',
        'images' => 'images',
        'check_type' => 'check_type',
        'remark' => 'remark',
        'custom_field' => 'custom_field',
        'parent_number' => 'parent_number'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'number' => 'setNumber',
        'name' => 'setName',
        'enable' => 'setEnable',
        'base_unit_id' => 'setBaseUnitId',
        'base_unit_name' => 'setBaseUnitName',
        'aux_unit_name' => 'setAuxUnitName',
        'mul_label' => 'setMulLabel',
        'barcode' => 'setBarcode',
        'model' => 'setModel',
        'brand_id' => 'setBrandId',
        'producing_pace' => 'setProducingPace',
        'help_code' => 'setHelpCode',
        'is_multi_unit' => 'setIsMultiUnit',
        'fix_unit_id1' => 'setFixUnitId1',
        'coefficient1' => 'setCoefficient1',
        'conversion_unit_id1' => 'setConversionUnitId1',
        'fix_unit_id2' => 'setFixUnitId2',
        'coefficient2' => 'setCoefficient2',
        'conversion_unit_id2' => 'setConversionUnitId2',
        'fix_unit_id3' => 'setFixUnitId3',
        'coefficient3' => 'setCoefficient3',
        'conversion_unit_id3' => 'setConversionUnitId3',
        'purchase_unit_id' => 'setPurchaseUnitId',
        'sale_unit_id' => 'setSaleUnitId',
        'store_unit_id' => 'setStoreUnitId',
        'aux_unit_id' => 'setAuxUnitId',
        'aux_unit_number' => 'setAuxUnitNumber',
        'is_weight' => 'setIsWeight',
        'is_serial' => 'setIsSerial',
        'is_batch' => 'setIsBatch',
        'is_sale' => 'setIsSale',
        'is_purchase' => 'setIsPurchase',
        'is_subpart' => 'setIsSubpart',
        'is_assembly' => 'setIsAssembly',
        'is_kf_period' => 'setIsKfPeriod',
        'kf_period_type' => 'setKfPeriodType',
        'kf_period' => 'setKfPeriod',
        'alarm_day' => 'setAlarmDay',
        'is_asst_attr' => 'setIsAsstAttr',
        'aux_entity' => 'setAuxEntity',
        'barcode_entity' => 'setBarcodeEntity',
        'price_entity' => 'setPriceEntity',
        'inv_mgr_type' => 'setInvMgrType',
        'min_inventory_qty' => 'setMinInventoryQty',
        'max_inventory_qty' => 'setMaxInventoryQty',
        'sec_inventory_qty' => 'setSecInventoryQty',
        'cost_method' => 'setCostMethod',
        'fetch_category_id' => 'setFetchCategoryId',
        'tax_rate' => 'setTaxRate',
        'stock_id' => 'setStockId',
        'space_id' => 'setSpaceId',
        'vender_id' => 'setVenderId',
        'purchase_id' => 'setPurchaseId',
        'refistration_number' => 'setRefistrationNumber',
        'pro_license' => 'setProLicense',
        'gross_weight' => 'setGrossWeight',
        'net_weight' => 'setNetWeight',
        'weight_unit_id' => 'setWeightUnitId',
        'length' => 'setLength',
        'wide' => 'setWide',
        'high' => 'setHigh',
        'volume' => 'setVolume',
        'images' => 'setImages',
        'check_type' => 'setCheckType',
        'remark' => 'setRemark',
        'custom_field' => 'setCustomField',
        'parent_number' => 'setParentNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'number' => 'getNumber',
        'name' => 'getName',
        'enable' => 'getEnable',
        'base_unit_id' => 'getBaseUnitId',
        'base_unit_name' => 'getBaseUnitName',
        'aux_unit_name' => 'getAuxUnitName',
        'mul_label' => 'getMulLabel',
        'barcode' => 'getBarcode',
        'model' => 'getModel',
        'brand_id' => 'getBrandId',
        'producing_pace' => 'getProducingPace',
        'help_code' => 'getHelpCode',
        'is_multi_unit' => 'getIsMultiUnit',
        'fix_unit_id1' => 'getFixUnitId1',
        'coefficient1' => 'getCoefficient1',
        'conversion_unit_id1' => 'getConversionUnitId1',
        'fix_unit_id2' => 'getFixUnitId2',
        'coefficient2' => 'getCoefficient2',
        'conversion_unit_id2' => 'getConversionUnitId2',
        'fix_unit_id3' => 'getFixUnitId3',
        'coefficient3' => 'getCoefficient3',
        'conversion_unit_id3' => 'getConversionUnitId3',
        'purchase_unit_id' => 'getPurchaseUnitId',
        'sale_unit_id' => 'getSaleUnitId',
        'store_unit_id' => 'getStoreUnitId',
        'aux_unit_id' => 'getAuxUnitId',
        'aux_unit_number' => 'getAuxUnitNumber',
        'is_weight' => 'getIsWeight',
        'is_serial' => 'getIsSerial',
        'is_batch' => 'getIsBatch',
        'is_sale' => 'getIsSale',
        'is_purchase' => 'getIsPurchase',
        'is_subpart' => 'getIsSubpart',
        'is_assembly' => 'getIsAssembly',
        'is_kf_period' => 'getIsKfPeriod',
        'kf_period_type' => 'getKfPeriodType',
        'kf_period' => 'getKfPeriod',
        'alarm_day' => 'getAlarmDay',
        'is_asst_attr' => 'getIsAsstAttr',
        'aux_entity' => 'getAuxEntity',
        'barcode_entity' => 'getBarcodeEntity',
        'price_entity' => 'getPriceEntity',
        'inv_mgr_type' => 'getInvMgrType',
        'min_inventory_qty' => 'getMinInventoryQty',
        'max_inventory_qty' => 'getMaxInventoryQty',
        'sec_inventory_qty' => 'getSecInventoryQty',
        'cost_method' => 'getCostMethod',
        'fetch_category_id' => 'getFetchCategoryId',
        'tax_rate' => 'getTaxRate',
        'stock_id' => 'getStockId',
        'space_id' => 'getSpaceId',
        'vender_id' => 'getVenderId',
        'purchase_id' => 'getPurchaseId',
        'refistration_number' => 'getRefistrationNumber',
        'pro_license' => 'getProLicense',
        'gross_weight' => 'getGrossWeight',
        'net_weight' => 'getNetWeight',
        'weight_unit_id' => 'getWeightUnitId',
        'length' => 'getLength',
        'wide' => 'getWide',
        'high' => 'getHigh',
        'volume' => 'getVolume',
        'images' => 'getImages',
        'check_type' => 'getCheckType',
        'remark' => 'getRemark',
        'custom_field' => 'getCustomField',
        'parent_number' => 'getParentNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['enable'] = isset($data['enable']) ? $data['enable'] : null;
        $this->container['base_unit_id'] = isset($data['base_unit_id']) ? $data['base_unit_id'] : null;
        $this->container['base_unit_name'] = isset($data['base_unit_name']) ? $data['base_unit_name'] : null;
        $this->container['aux_unit_name'] = isset($data['aux_unit_name']) ? $data['aux_unit_name'] : null;
        $this->container['mul_label'] = isset($data['mul_label']) ? $data['mul_label'] : null;
        $this->container['barcode'] = isset($data['barcode']) ? $data['barcode'] : null;
        $this->container['model'] = isset($data['model']) ? $data['model'] : null;
        $this->container['brand_id'] = isset($data['brand_id']) ? $data['brand_id'] : null;
        $this->container['producing_pace'] = isset($data['producing_pace']) ? $data['producing_pace'] : null;
        $this->container['help_code'] = isset($data['help_code']) ? $data['help_code'] : null;
        $this->container['is_multi_unit'] = isset($data['is_multi_unit']) ? $data['is_multi_unit'] : null;
        $this->container['fix_unit_id1'] = isset($data['fix_unit_id1']) ? $data['fix_unit_id1'] : null;
        $this->container['coefficient1'] = isset($data['coefficient1']) ? $data['coefficient1'] : null;
        $this->container['conversion_unit_id1'] = isset($data['conversion_unit_id1']) ? $data['conversion_unit_id1'] : null;
        $this->container['fix_unit_id2'] = isset($data['fix_unit_id2']) ? $data['fix_unit_id2'] : null;
        $this->container['coefficient2'] = isset($data['coefficient2']) ? $data['coefficient2'] : null;
        $this->container['conversion_unit_id2'] = isset($data['conversion_unit_id2']) ? $data['conversion_unit_id2'] : null;
        $this->container['fix_unit_id3'] = isset($data['fix_unit_id3']) ? $data['fix_unit_id3'] : null;
        $this->container['coefficient3'] = isset($data['coefficient3']) ? $data['coefficient3'] : null;
        $this->container['conversion_unit_id3'] = isset($data['conversion_unit_id3']) ? $data['conversion_unit_id3'] : null;
        $this->container['purchase_unit_id'] = isset($data['purchase_unit_id']) ? $data['purchase_unit_id'] : null;
        $this->container['sale_unit_id'] = isset($data['sale_unit_id']) ? $data['sale_unit_id'] : null;
        $this->container['store_unit_id'] = isset($data['store_unit_id']) ? $data['store_unit_id'] : null;
        $this->container['aux_unit_id'] = isset($data['aux_unit_id']) ? $data['aux_unit_id'] : null;
        $this->container['aux_unit_number'] = isset($data['aux_unit_number']) ? $data['aux_unit_number'] : null;
        $this->container['is_weight'] = isset($data['is_weight']) ? $data['is_weight'] : null;
        $this->container['is_serial'] = isset($data['is_serial']) ? $data['is_serial'] : null;
        $this->container['is_batch'] = isset($data['is_batch']) ? $data['is_batch'] : null;
        $this->container['is_sale'] = isset($data['is_sale']) ? $data['is_sale'] : null;
        $this->container['is_purchase'] = isset($data['is_purchase']) ? $data['is_purchase'] : null;
        $this->container['is_subpart'] = isset($data['is_subpart']) ? $data['is_subpart'] : null;
        $this->container['is_assembly'] = isset($data['is_assembly']) ? $data['is_assembly'] : null;
        $this->container['is_kf_period'] = isset($data['is_kf_period']) ? $data['is_kf_period'] : null;
        $this->container['kf_period_type'] = isset($data['kf_period_type']) ? $data['kf_period_type'] : null;
        $this->container['kf_period'] = isset($data['kf_period']) ? $data['kf_period'] : null;
        $this->container['alarm_day'] = isset($data['alarm_day']) ? $data['alarm_day'] : null;
        $this->container['is_asst_attr'] = isset($data['is_asst_attr']) ? $data['is_asst_attr'] : null;
        $this->container['aux_entity'] = isset($data['aux_entity']) ? $data['aux_entity'] : null;
        $this->container['barcode_entity'] = isset($data['barcode_entity']) ? $data['barcode_entity'] : null;
        $this->container['price_entity'] = isset($data['price_entity']) ? $data['price_entity'] : null;
        $this->container['inv_mgr_type'] = isset($data['inv_mgr_type']) ? $data['inv_mgr_type'] : null;
        $this->container['min_inventory_qty'] = isset($data['min_inventory_qty']) ? $data['min_inventory_qty'] : null;
        $this->container['max_inventory_qty'] = isset($data['max_inventory_qty']) ? $data['max_inventory_qty'] : null;
        $this->container['sec_inventory_qty'] = isset($data['sec_inventory_qty']) ? $data['sec_inventory_qty'] : null;
        $this->container['cost_method'] = isset($data['cost_method']) ? $data['cost_method'] : null;
        $this->container['fetch_category_id'] = isset($data['fetch_category_id']) ? $data['fetch_category_id'] : null;
        $this->container['tax_rate'] = isset($data['tax_rate']) ? $data['tax_rate'] : null;
        $this->container['stock_id'] = isset($data['stock_id']) ? $data['stock_id'] : null;
        $this->container['space_id'] = isset($data['space_id']) ? $data['space_id'] : null;
        $this->container['vender_id'] = isset($data['vender_id']) ? $data['vender_id'] : null;
        $this->container['purchase_id'] = isset($data['purchase_id']) ? $data['purchase_id'] : null;
        $this->container['refistration_number'] = isset($data['refistration_number']) ? $data['refistration_number'] : null;
        $this->container['pro_license'] = isset($data['pro_license']) ? $data['pro_license'] : null;
        $this->container['gross_weight'] = isset($data['gross_weight']) ? $data['gross_weight'] : null;
        $this->container['net_weight'] = isset($data['net_weight']) ? $data['net_weight'] : null;
        $this->container['weight_unit_id'] = isset($data['weight_unit_id']) ? $data['weight_unit_id'] : null;
        $this->container['length'] = isset($data['length']) ? $data['length'] : null;
        $this->container['wide'] = isset($data['wide']) ? $data['wide'] : null;
        $this->container['high'] = isset($data['high']) ? $data['high'] : null;
        $this->container['volume'] = isset($data['volume']) ? $data['volume'] : null;
        $this->container['images'] = isset($data['images']) ? $data['images'] : null;
        $this->container['check_type'] = isset($data['check_type']) ? $data['check_type'] : null;
        $this->container['remark'] = isset($data['remark']) ? $data['remark'] : null;
        $this->container['custom_field'] = isset($data['custom_field']) ? $data['custom_field'] : null;
        $this->container['parent_number'] = isset($data['parent_number']) ? $data['parent_number'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string $number number
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets enable
     *
     * @return string
     */
    public function getEnable()
    {
        return $this->container['enable'];
    }

    /**
     * Sets enable
     *
     * @param string $enable enable
     *
     * @return $this
     */
    public function setEnable($enable)
    {
        $this->container['enable'] = $enable;

        return $this;
    }

    /**
     * Gets base_unit_id
     *
     * @return string
     */
    public function getBaseUnitId()
    {
        return $this->container['base_unit_id'];
    }

    /**
     * Sets base_unit_id
     *
     * @param string $base_unit_id base_unit_id
     *
     * @return $this
     */
    public function setBaseUnitId($base_unit_id)
    {
        $this->container['base_unit_id'] = $base_unit_id;

        return $this;
    }

    /**
     * Gets base_unit_name
     *
     * @return string
     */
    public function getBaseUnitName()
    {
        return $this->container['base_unit_name'];
    }

    /**
     * Sets base_unit_name
     *
     * @param string $base_unit_name base_unit_name
     *
     * @return $this
     */
    public function setBaseUnitName($base_unit_name)
    {
        $this->container['base_unit_name'] = $base_unit_name;

        return $this;
    }

    /**
     * Gets aux_unit_name
     *
     * @return string
     */
    public function getAuxUnitName()
    {
        return $this->container['aux_unit_name'];
    }

    /**
     * Sets aux_unit_name
     *
     * @param string $aux_unit_name aux_unit_name
     *
     * @return $this
     */
    public function setAuxUnitName($aux_unit_name)
    {
        $this->container['aux_unit_name'] = $aux_unit_name;

        return $this;
    }

    /**
     * Gets mul_label
     *
     * @return \com_kingdee_service\data\entity\Mullabel[]
     */
    public function getMulLabel()
    {
        return $this->container['mul_label'];
    }

    /**
     * Sets mul_label
     *
     * @param \com_kingdee_service\data\entity\Mullabel[] $mul_label mul_label
     *
     * @return $this
     */
    public function setMulLabel($mul_label)
    {
        $this->container['mul_label'] = $mul_label;

        return $this;
    }

    /**
     * Gets barcode
     *
     * @return string
     */
    public function getBarcode()
    {
        return $this->container['barcode'];
    }

    /**
     * Sets barcode
     *
     * @param string $barcode barcode
     *
     * @return $this
     */
    public function setBarcode($barcode)
    {
        $this->container['barcode'] = $barcode;

        return $this;
    }

    /**
     * Gets model
     *
     * @return string
     */
    public function getModel()
    {
        return $this->container['model'];
    }

    /**
     * Sets model
     *
     * @param string $model model
     *
     * @return $this
     */
    public function setModel($model)
    {
        $this->container['model'] = $model;

        return $this;
    }

    /**
     * Gets brand_id
     *
     * @return string
     */
    public function getBrandId()
    {
        return $this->container['brand_id'];
    }

    /**
     * Sets brand_id
     *
     * @param string $brand_id brand_id
     *
     * @return $this
     */
    public function setBrandId($brand_id)
    {
        $this->container['brand_id'] = $brand_id;

        return $this;
    }

    /**
     * Gets producing_pace
     *
     * @return string
     */
    public function getProducingPace()
    {
        return $this->container['producing_pace'];
    }

    /**
     * Sets producing_pace
     *
     * @param string $producing_pace producing_pace
     *
     * @return $this
     */
    public function setProducingPace($producing_pace)
    {
        $this->container['producing_pace'] = $producing_pace;

        return $this;
    }

    /**
     * Gets help_code
     *
     * @return string
     */
    public function getHelpCode()
    {
        return $this->container['help_code'];
    }

    /**
     * Sets help_code
     *
     * @param string $help_code help_code
     *
     * @return $this
     */
    public function setHelpCode($help_code)
    {
        $this->container['help_code'] = $help_code;

        return $this;
    }

    /**
     * Gets is_multi_unit
     *
     * @return bool
     */
    public function getIsMultiUnit()
    {
        return $this->container['is_multi_unit'];
    }

    /**
     * Sets is_multi_unit
     *
     * @param bool $is_multi_unit is_multi_unit
     *
     * @return $this
     */
    public function setIsMultiUnit($is_multi_unit)
    {
        $this->container['is_multi_unit'] = $is_multi_unit;

        return $this;
    }

    /**
     * Gets fix_unit_id1
     *
     * @return string
     */
    public function getFixUnitId1()
    {
        return $this->container['fix_unit_id1'];
    }

    /**
     * Sets fix_unit_id1
     *
     * @param string $fix_unit_id1 fix_unit_id1
     *
     * @return $this
     */
    public function setFixUnitId1($fix_unit_id1)
    {
        $this->container['fix_unit_id1'] = $fix_unit_id1;

        return $this;
    }

    /**
     * Gets coefficient1
     *
     * @return float
     */
    public function getCoefficient1()
    {
        return $this->container['coefficient1'];
    }

    /**
     * Sets coefficient1
     *
     * @param float $coefficient1 coefficient1
     *
     * @return $this
     */
    public function setCoefficient1($coefficient1)
    {
        $this->container['coefficient1'] = $coefficient1;

        return $this;
    }

    /**
     * Gets conversion_unit_id1
     *
     * @return string
     */
    public function getConversionUnitId1()
    {
        return $this->container['conversion_unit_id1'];
    }

    /**
     * Sets conversion_unit_id1
     *
     * @param string $conversion_unit_id1 conversion_unit_id1
     *
     * @return $this
     */
    public function setConversionUnitId1($conversion_unit_id1)
    {
        $this->container['conversion_unit_id1'] = $conversion_unit_id1;

        return $this;
    }

    /**
     * Gets fix_unit_id2
     *
     * @return string
     */
    public function getFixUnitId2()
    {
        return $this->container['fix_unit_id2'];
    }

    /**
     * Sets fix_unit_id2
     *
     * @param string $fix_unit_id2 fix_unit_id2
     *
     * @return $this
     */
    public function setFixUnitId2($fix_unit_id2)
    {
        $this->container['fix_unit_id2'] = $fix_unit_id2;

        return $this;
    }

    /**
     * Gets coefficient2
     *
     * @return float
     */
    public function getCoefficient2()
    {
        return $this->container['coefficient2'];
    }

    /**
     * Sets coefficient2
     *
     * @param float $coefficient2 coefficient2
     *
     * @return $this
     */
    public function setCoefficient2($coefficient2)
    {
        $this->container['coefficient2'] = $coefficient2;

        return $this;
    }

    /**
     * Gets conversion_unit_id2
     *
     * @return string
     */
    public function getConversionUnitId2()
    {
        return $this->container['conversion_unit_id2'];
    }

    /**
     * Sets conversion_unit_id2
     *
     * @param string $conversion_unit_id2 conversion_unit_id2
     *
     * @return $this
     */
    public function setConversionUnitId2($conversion_unit_id2)
    {
        $this->container['conversion_unit_id2'] = $conversion_unit_id2;

        return $this;
    }

    /**
     * Gets fix_unit_id3
     *
     * @return string
     */
    public function getFixUnitId3()
    {
        return $this->container['fix_unit_id3'];
    }

    /**
     * Sets fix_unit_id3
     *
     * @param string $fix_unit_id3 fix_unit_id3
     *
     * @return $this
     */
    public function setFixUnitId3($fix_unit_id3)
    {
        $this->container['fix_unit_id3'] = $fix_unit_id3;

        return $this;
    }

    /**
     * Gets coefficient3
     *
     * @return float
     */
    public function getCoefficient3()
    {
        return $this->container['coefficient3'];
    }

    /**
     * Sets coefficient3
     *
     * @param float $coefficient3 coefficient3
     *
     * @return $this
     */
    public function setCoefficient3($coefficient3)
    {
        $this->container['coefficient3'] = $coefficient3;

        return $this;
    }

    /**
     * Gets conversion_unit_id3
     *
     * @return string
     */
    public function getConversionUnitId3()
    {
        return $this->container['conversion_unit_id3'];
    }

    /**
     * Sets conversion_unit_id3
     *
     * @param string $conversion_unit_id3 conversion_unit_id3
     *
     * @return $this
     */
    public function setConversionUnitId3($conversion_unit_id3)
    {
        $this->container['conversion_unit_id3'] = $conversion_unit_id3;

        return $this;
    }

    /**
     * Gets purchase_unit_id
     *
     * @return string
     */
    public function getPurchaseUnitId()
    {
        return $this->container['purchase_unit_id'];
    }

    /**
     * Sets purchase_unit_id
     *
     * @param string $purchase_unit_id purchase_unit_id
     *
     * @return $this
     */
    public function setPurchaseUnitId($purchase_unit_id)
    {
        $this->container['purchase_unit_id'] = $purchase_unit_id;

        return $this;
    }

    /**
     * Gets sale_unit_id
     *
     * @return string
     */
    public function getSaleUnitId()
    {
        return $this->container['sale_unit_id'];
    }

    /**
     * Sets sale_unit_id
     *
     * @param string $sale_unit_id sale_unit_id
     *
     * @return $this
     */
    public function setSaleUnitId($sale_unit_id)
    {
        $this->container['sale_unit_id'] = $sale_unit_id;

        return $this;
    }

    /**
     * Gets store_unit_id
     *
     * @return string
     */
    public function getStoreUnitId()
    {
        return $this->container['store_unit_id'];
    }

    /**
     * Sets store_unit_id
     *
     * @param string $store_unit_id store_unit_id
     *
     * @return $this
     */
    public function setStoreUnitId($store_unit_id)
    {
        $this->container['store_unit_id'] = $store_unit_id;

        return $this;
    }

    /**
     * Gets aux_unit_id
     *
     * @return string
     */
    public function getAuxUnitId()
    {
        return $this->container['aux_unit_id'];
    }

    /**
     * Sets aux_unit_id
     *
     * @param string $aux_unit_id aux_unit_id
     *
     * @return $this
     */
    public function setAuxUnitId($aux_unit_id)
    {
        $this->container['aux_unit_id'] = $aux_unit_id;

        return $this;
    }

    /**
     * Gets aux_unit_number
     *
     * @return string
     */
    public function getAuxUnitNumber()
    {
        return $this->container['aux_unit_number'];
    }

    /**
     * Sets aux_unit_number
     *
     * @param string $aux_unit_number aux_unit_number
     *
     * @return $this
     */
    public function setAuxUnitNumber($aux_unit_number)
    {
        $this->container['aux_unit_number'] = $aux_unit_number;

        return $this;
    }

    /**
     * Gets is_weight
     *
     * @return bool
     */
    public function getIsWeight()
    {
        return $this->container['is_weight'];
    }

    /**
     * Sets is_weight
     *
     * @param bool $is_weight is_weight
     *
     * @return $this
     */
    public function setIsWeight($is_weight)
    {
        $this->container['is_weight'] = $is_weight;

        return $this;
    }

    /**
     * Gets is_serial
     *
     * @return bool
     */
    public function getIsSerial()
    {
        return $this->container['is_serial'];
    }

    /**
     * Sets is_serial
     *
     * @param bool $is_serial is_serial
     *
     * @return $this
     */
    public function setIsSerial($is_serial)
    {
        $this->container['is_serial'] = $is_serial;

        return $this;
    }

    /**
     * Gets is_batch
     *
     * @return bool
     */
    public function getIsBatch()
    {
        return $this->container['is_batch'];
    }

    /**
     * Sets is_batch
     *
     * @param bool $is_batch is_batch
     *
     * @return $this
     */
    public function setIsBatch($is_batch)
    {
        $this->container['is_batch'] = $is_batch;

        return $this;
    }

    /**
     * Gets is_sale
     *
     * @return bool
     */
    public function getIsSale()
    {
        return $this->container['is_sale'];
    }

    /**
     * Sets is_sale
     *
     * @param bool $is_sale is_sale
     *
     * @return $this
     */
    public function setIsSale($is_sale)
    {
        $this->container['is_sale'] = $is_sale;

        return $this;
    }

    /**
     * Gets is_purchase
     *
     * @return bool
     */
    public function getIsPurchase()
    {
        return $this->container['is_purchase'];
    }

    /**
     * Sets is_purchase
     *
     * @param bool $is_purchase is_purchase
     *
     * @return $this
     */
    public function setIsPurchase($is_purchase)
    {
        $this->container['is_purchase'] = $is_purchase;

        return $this;
    }

    /**
     * Gets is_subpart
     *
     * @return bool
     */
    public function getIsSubpart()
    {
        return $this->container['is_subpart'];
    }

    /**
     * Sets is_subpart
     *
     * @param bool $is_subpart is_subpart
     *
     * @return $this
     */
    public function setIsSubpart($is_subpart)
    {
        $this->container['is_subpart'] = $is_subpart;

        return $this;
    }

    /**
     * Gets is_assembly
     *
     * @return bool
     */
    public function getIsAssembly()
    {
        return $this->container['is_assembly'];
    }

    /**
     * Sets is_assembly
     *
     * @param bool $is_assembly is_assembly
     *
     * @return $this
     */
    public function setIsAssembly($is_assembly)
    {
        $this->container['is_assembly'] = $is_assembly;

        return $this;
    }

    /**
     * Gets is_kf_period
     *
     * @return bool
     */
    public function getIsKfPeriod()
    {
        return $this->container['is_kf_period'];
    }

    /**
     * Sets is_kf_period
     *
     * @param bool $is_kf_period is_kf_period
     *
     * @return $this
     */
    public function setIsKfPeriod($is_kf_period)
    {
        $this->container['is_kf_period'] = $is_kf_period;

        return $this;
    }

    /**
     * Gets kf_period_type
     *
     * @return string
     */
    public function getKfPeriodType()
    {
        return $this->container['kf_period_type'];
    }

    /**
     * Sets kf_period_type
     *
     * @param string $kf_period_type kf_period_type
     *
     * @return $this
     */
    public function setKfPeriodType($kf_period_type)
    {
        $this->container['kf_period_type'] = $kf_period_type;

        return $this;
    }

    /**
     * Gets kf_period
     *
     * @return string
     */
    public function getKfPeriod()
    {
        return $this->container['kf_period'];
    }

    /**
     * Sets kf_period
     *
     * @param string $kf_period kf_period
     *
     * @return $this
     */
    public function setKfPeriod($kf_period)
    {
        $this->container['kf_period'] = $kf_period;

        return $this;
    }

    /**
     * Gets alarm_day
     *
     * @return string
     */
    public function getAlarmDay()
    {
        return $this->container['alarm_day'];
    }

    /**
     * Sets alarm_day
     *
     * @param string $alarm_day alarm_day
     *
     * @return $this
     */
    public function setAlarmDay($alarm_day)
    {
        $this->container['alarm_day'] = $alarm_day;

        return $this;
    }

    /**
     * Gets is_asst_attr
     *
     * @return bool
     */
    public function getIsAsstAttr()
    {
        return $this->container['is_asst_attr'];
    }

    /**
     * Sets is_asst_attr
     *
     * @param bool $is_asst_attr is_asst_attr
     *
     * @return $this
     */
    public function setIsAsstAttr($is_asst_attr)
    {
        $this->container['is_asst_attr'] = $is_asst_attr;

        return $this;
    }

    /**
     * Gets aux_entity
     *
     * @return \com_kingdee_service\data\entity\Auxentity[]
     */
    public function getAuxEntity()
    {
        return $this->container['aux_entity'];
    }

    /**
     * Sets aux_entity
     *
     * @param \com_kingdee_service\data\entity\Auxentity[] $aux_entity aux_entity
     *
     * @return $this
     */
    public function setAuxEntity($aux_entity)
    {
        $this->container['aux_entity'] = $aux_entity;

        return $this;
    }

    /**
     * Gets barcode_entity
     *
     * @return \com_kingdee_service\data\entity\BarcodeEntityDetails[]
     */
    public function getBarcodeEntity()
    {
        return $this->container['barcode_entity'];
    }

    /**
     * Sets barcode_entity
     *
     * @param \com_kingdee_service\data\entity\BarcodeEntityDetails[] $barcode_entity barcode_entity
     *
     * @return $this
     */
    public function setBarcodeEntity($barcode_entity)
    {
        $this->container['barcode_entity'] = $barcode_entity;

        return $this;
    }

    /**
     * Gets price_entity
     *
     * @return \com_kingdee_service\data\entity\PriceEntityDetails[]
     */
    public function getPriceEntity()
    {
        return $this->container['price_entity'];
    }

    /**
     * Sets price_entity
     *
     * @param \com_kingdee_service\data\entity\PriceEntityDetails[] $price_entity price_entity
     *
     * @return $this
     */
    public function setPriceEntity($price_entity)
    {
        $this->container['price_entity'] = $price_entity;

        return $this;
    }

    /**
     * Gets inv_mgr_type
     *
     * @return string
     */
    public function getInvMgrType()
    {
        return $this->container['inv_mgr_type'];
    }

    /**
     * Sets inv_mgr_type
     *
     * @param string $inv_mgr_type inv_mgr_type
     *
     * @return $this
     */
    public function setInvMgrType($inv_mgr_type)
    {
        $this->container['inv_mgr_type'] = $inv_mgr_type;

        return $this;
    }

    /**
     * Gets min_inventory_qty
     *
     * @return string
     */
    public function getMinInventoryQty()
    {
        return $this->container['min_inventory_qty'];
    }

    /**
     * Sets min_inventory_qty
     *
     * @param string $min_inventory_qty min_inventory_qty
     *
     * @return $this
     */
    public function setMinInventoryQty($min_inventory_qty)
    {
        $this->container['min_inventory_qty'] = $min_inventory_qty;

        return $this;
    }

    /**
     * Gets max_inventory_qty
     *
     * @return string
     */
    public function getMaxInventoryQty()
    {
        return $this->container['max_inventory_qty'];
    }

    /**
     * Sets max_inventory_qty
     *
     * @param string $max_inventory_qty max_inventory_qty
     *
     * @return $this
     */
    public function setMaxInventoryQty($max_inventory_qty)
    {
        $this->container['max_inventory_qty'] = $max_inventory_qty;

        return $this;
    }

    /**
     * Gets sec_inventory_qty
     *
     * @return string
     */
    public function getSecInventoryQty()
    {
        return $this->container['sec_inventory_qty'];
    }

    /**
     * Sets sec_inventory_qty
     *
     * @param string $sec_inventory_qty sec_inventory_qty
     *
     * @return $this
     */
    public function setSecInventoryQty($sec_inventory_qty)
    {
        $this->container['sec_inventory_qty'] = $sec_inventory_qty;

        return $this;
    }

    /**
     * Gets cost_method
     *
     * @return string
     */
    public function getCostMethod()
    {
        return $this->container['cost_method'];
    }

    /**
     * Sets cost_method
     *
     * @param string $cost_method cost_method
     *
     * @return $this
     */
    public function setCostMethod($cost_method)
    {
        $this->container['cost_method'] = $cost_method;

        return $this;
    }

    /**
     * Gets fetch_category_id
     *
     * @return string
     */
    public function getFetchCategoryId()
    {
        return $this->container['fetch_category_id'];
    }

    /**
     * Sets fetch_category_id
     *
     * @param string $fetch_category_id fetch_category_id
     *
     * @return $this
     */
    public function setFetchCategoryId($fetch_category_id)
    {
        $this->container['fetch_category_id'] = $fetch_category_id;

        return $this;
    }

    /**
     * Gets tax_rate
     *
     * @return string
     */
    public function getTaxRate()
    {
        return $this->container['tax_rate'];
    }

    /**
     * Sets tax_rate
     *
     * @param string $tax_rate tax_rate
     *
     * @return $this
     */
    public function setTaxRate($tax_rate)
    {
        $this->container['tax_rate'] = $tax_rate;

        return $this;
    }

    /**
     * Gets stock_id
     *
     * @return string
     */
    public function getStockId()
    {
        return $this->container['stock_id'];
    }

    /**
     * Sets stock_id
     *
     * @param string $stock_id stock_id
     *
     * @return $this
     */
    public function setStockId($stock_id)
    {
        $this->container['stock_id'] = $stock_id;

        return $this;
    }

    /**
     * Gets space_id
     *
     * @return string
     */
    public function getSpaceId()
    {
        return $this->container['space_id'];
    }

    /**
     * Sets space_id
     *
     * @param string $space_id space_id
     *
     * @return $this
     */
    public function setSpaceId($space_id)
    {
        $this->container['space_id'] = $space_id;

        return $this;
    }

    /**
     * Gets vender_id
     *
     * @return string
     */
    public function getVenderId()
    {
        return $this->container['vender_id'];
    }

    /**
     * Sets vender_id
     *
     * @param string $vender_id vender_id
     *
     * @return $this
     */
    public function setVenderId($vender_id)
    {
        $this->container['vender_id'] = $vender_id;

        return $this;
    }

    /**
     * Gets purchase_id
     *
     * @return string
     */
    public function getPurchaseId()
    {
        return $this->container['purchase_id'];
    }

    /**
     * Sets purchase_id
     *
     * @param string $purchase_id purchase_id
     *
     * @return $this
     */
    public function setPurchaseId($purchase_id)
    {
        $this->container['purchase_id'] = $purchase_id;

        return $this;
    }

    /**
     * Gets refistration_number
     *
     * @return string
     */
    public function getRefistrationNumber()
    {
        return $this->container['refistration_number'];
    }

    /**
     * Sets refistration_number
     *
     * @param string $refistration_number refistration_number
     *
     * @return $this
     */
    public function setRefistrationNumber($refistration_number)
    {
        $this->container['refistration_number'] = $refistration_number;

        return $this;
    }

    /**
     * Gets pro_license
     *
     * @return string
     */
    public function getProLicense()
    {
        return $this->container['pro_license'];
    }

    /**
     * Sets pro_license
     *
     * @param string $pro_license pro_license
     *
     * @return $this
     */
    public function setProLicense($pro_license)
    {
        $this->container['pro_license'] = $pro_license;

        return $this;
    }

    /**
     * Gets gross_weight
     *
     * @return string
     */
    public function getGrossWeight()
    {
        return $this->container['gross_weight'];
    }

    /**
     * Sets gross_weight
     *
     * @param string $gross_weight gross_weight
     *
     * @return $this
     */
    public function setGrossWeight($gross_weight)
    {
        $this->container['gross_weight'] = $gross_weight;

        return $this;
    }

    /**
     * Gets net_weight
     *
     * @return string
     */
    public function getNetWeight()
    {
        return $this->container['net_weight'];
    }

    /**
     * Sets net_weight
     *
     * @param string $net_weight net_weight
     *
     * @return $this
     */
    public function setNetWeight($net_weight)
    {
        $this->container['net_weight'] = $net_weight;

        return $this;
    }

    /**
     * Gets weight_unit_id
     *
     * @return string
     */
    public function getWeightUnitId()
    {
        return $this->container['weight_unit_id'];
    }

    /**
     * Sets weight_unit_id
     *
     * @param string $weight_unit_id weight_unit_id
     *
     * @return $this
     */
    public function setWeightUnitId($weight_unit_id)
    {
        $this->container['weight_unit_id'] = $weight_unit_id;

        return $this;
    }

    /**
     * Gets length
     *
     * @return string
     */
    public function getLength()
    {
        return $this->container['length'];
    }

    /**
     * Sets length
     *
     * @param string $length length
     *
     * @return $this
     */
    public function setLength($length)
    {
        $this->container['length'] = $length;

        return $this;
    }

    /**
     * Gets wide
     *
     * @return string
     */
    public function getWide()
    {
        return $this->container['wide'];
    }

    /**
     * Sets wide
     *
     * @param string $wide wide
     *
     * @return $this
     */
    public function setWide($wide)
    {
        $this->container['wide'] = $wide;

        return $this;
    }

    /**
     * Gets high
     *
     * @return string
     */
    public function getHigh()
    {
        return $this->container['high'];
    }

    /**
     * Sets high
     *
     * @param string $high high
     *
     * @return $this
     */
    public function setHigh($high)
    {
        $this->container['high'] = $high;

        return $this;
    }

    /**
     * Gets volume
     *
     * @return string
     */
    public function getVolume()
    {
        return $this->container['volume'];
    }

    /**
     * Sets volume
     *
     * @param string $volume volume
     *
     * @return $this
     */
    public function setVolume($volume)
    {
        $this->container['volume'] = $volume;

        return $this;
    }

    /**
     * Gets images
     *
     * @return \com_kingdee_service\data\entity\Image[]
     */
    public function getImages()
    {
        return $this->container['images'];
    }

    /**
     * Sets images
     *
     * @param \com_kingdee_service\data\entity\Image[] $images images
     *
     * @return $this
     */
    public function setImages($images)
    {
        $this->container['images'] = $images;

        return $this;
    }

    /**
     * Gets check_type
     *
     * @return string
     */
    public function getCheckType()
    {
        return $this->container['check_type'];
    }

    /**
     * Sets check_type
     *
     * @param string $check_type check_type
     *
     * @return $this
     */
    public function setCheckType($check_type)
    {
        $this->container['check_type'] = $check_type;

        return $this;
    }

    /**
     * Gets remark
     *
     * @return string
     */
    public function getRemark()
    {
        return $this->container['remark'];
    }

    /**
     * Sets remark
     *
     * @param string $remark remark
     *
     * @return $this
     */
    public function setRemark($remark)
    {
        $this->container['remark'] = $remark;

        return $this;
    }

    /**
     * Gets custom_field
     *
     * @return map[string,string]
     */
    public function getCustomField()
    {
        return $this->container['custom_field'];
    }

    /**
     * Sets custom_field
     *
     * @param map[string,string] $custom_field custom_field
     *
     * @return $this
     */
    public function setCustomField($custom_field)
    {
        $this->container['custom_field'] = $custom_field;

        return $this;
    }

    /**
     * Gets parent_number
     *
     * @return string
     */
    public function getParentNumber()
    {
        return $this->container['parent_number'];
    }

    /**
     * Sets parent_number
     *
     * @param string $parent_number parent_number
     *
     * @return $this
     */
    public function setParentNumber($parent_number)
    {
        $this->container['parent_number'] = $parent_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


