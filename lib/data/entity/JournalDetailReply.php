<?php
/**
 * JournalDetailReply
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * JournalDetailReply Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class JournalDetailReply implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'JournalDetailReply';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'number' => 'string',
        'account_number' => 'string',
        'account_name' => 'string',
        'account_id' => 'string',
        'date' => 'string',
        'explanation' => 'string',
        'source_type' => 'string',
        'debit_for' => 'string',
        'credit_for' => 'string',
        'check_time' => 'string',
        'is_init' => 'int',
        'bill_entry_id' => 'string',
        'operator' => 'string',
        'supplier' => 'string',
        'credit' => 'string',
        'period' => 'string',
        'contacts_account_id' => 'string',
        'bill_no' => 'string',
        'exchange_rate' => 'string',
        'remark' => 'string',
        'be_linked_number' => 'string',
        'settle_no' => 'string',
        'voucher_no' => 'string',
        'is_check' => 'string',
        'bill_type' => 'string',
        'bill_id' => 'string',
        'contacts_account_number' => 'string',
        'debit' => 'string',
        'biz_date' => 'string',
        'voucher_id' => 'string',
        'linked_id' => 'string',
        'bill_entry_type' => 'string',
        'customer' => 'string',
        'bank_seq' => 'string',
        'custom_field' => 'map[string,string]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'number' => null,
        'account_number' => null,
        'account_name' => null,
        'account_id' => null,
        'date' => null,
        'explanation' => null,
        'source_type' => null,
        'debit_for' => null,
        'credit_for' => null,
        'check_time' => null,
        'is_init' => 'int32',
        'bill_entry_id' => null,
        'operator' => null,
        'supplier' => null,
        'credit' => null,
        'period' => null,
        'contacts_account_id' => null,
        'bill_no' => null,
        'exchange_rate' => null,
        'remark' => null,
        'be_linked_number' => null,
        'settle_no' => null,
        'voucher_no' => null,
        'is_check' => null,
        'bill_type' => null,
        'bill_id' => null,
        'contacts_account_number' => null,
        'debit' => null,
        'biz_date' => null,
        'voucher_id' => null,
        'linked_id' => null,
        'bill_entry_type' => null,
        'customer' => null,
        'bank_seq' => null,
        'custom_field' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'number' => 'number',
        'account_number' => 'account_number',
        'account_name' => 'account_name',
        'account_id' => 'account_id',
        'date' => 'date',
        'explanation' => 'explanation',
        'source_type' => 'source_type',
        'debit_for' => 'debit_for',
        'credit_for' => 'credit_for',
        'check_time' => 'check_time',
        'is_init' => 'is_init',
        'bill_entry_id' => 'bill_entry_id',
        'operator' => 'operator',
        'supplier' => 'supplier',
        'credit' => 'credit',
        'period' => 'period',
        'contacts_account_id' => 'contacts_account_id',
        'bill_no' => 'bill_no',
        'exchange_rate' => 'exchange_rate',
        'remark' => 'remark',
        'be_linked_number' => 'be_linked_number',
        'settle_no' => 'settle_no',
        'voucher_no' => 'voucher_no',
        'is_check' => 'is_check',
        'bill_type' => 'bill_type',
        'bill_id' => 'bill_id',
        'contacts_account_number' => 'contacts_account_number',
        'debit' => 'debit',
        'biz_date' => 'biz_date',
        'voucher_id' => 'voucher_id',
        'linked_id' => 'linked_id',
        'bill_entry_type' => 'bill_entry_type',
        'customer' => 'customer',
        'bank_seq' => 'bank_seq',
        'custom_field' => 'custom_field'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'number' => 'setNumber',
        'account_number' => 'setAccountNumber',
        'account_name' => 'setAccountName',
        'account_id' => 'setAccountId',
        'date' => 'setDate',
        'explanation' => 'setExplanation',
        'source_type' => 'setSourceType',
        'debit_for' => 'setDebitFor',
        'credit_for' => 'setCreditFor',
        'check_time' => 'setCheckTime',
        'is_init' => 'setIsInit',
        'bill_entry_id' => 'setBillEntryId',
        'operator' => 'setOperator',
        'supplier' => 'setSupplier',
        'credit' => 'setCredit',
        'period' => 'setPeriod',
        'contacts_account_id' => 'setContactsAccountId',
        'bill_no' => 'setBillNo',
        'exchange_rate' => 'setExchangeRate',
        'remark' => 'setRemark',
        'be_linked_number' => 'setBeLinkedNumber',
        'settle_no' => 'setSettleNo',
        'voucher_no' => 'setVoucherNo',
        'is_check' => 'setIsCheck',
        'bill_type' => 'setBillType',
        'bill_id' => 'setBillId',
        'contacts_account_number' => 'setContactsAccountNumber',
        'debit' => 'setDebit',
        'biz_date' => 'setBizDate',
        'voucher_id' => 'setVoucherId',
        'linked_id' => 'setLinkedId',
        'bill_entry_type' => 'setBillEntryType',
        'customer' => 'setCustomer',
        'bank_seq' => 'setBankSeq',
        'custom_field' => 'setCustomField'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'number' => 'getNumber',
        'account_number' => 'getAccountNumber',
        'account_name' => 'getAccountName',
        'account_id' => 'getAccountId',
        'date' => 'getDate',
        'explanation' => 'getExplanation',
        'source_type' => 'getSourceType',
        'debit_for' => 'getDebitFor',
        'credit_for' => 'getCreditFor',
        'check_time' => 'getCheckTime',
        'is_init' => 'getIsInit',
        'bill_entry_id' => 'getBillEntryId',
        'operator' => 'getOperator',
        'supplier' => 'getSupplier',
        'credit' => 'getCredit',
        'period' => 'getPeriod',
        'contacts_account_id' => 'getContactsAccountId',
        'bill_no' => 'getBillNo',
        'exchange_rate' => 'getExchangeRate',
        'remark' => 'getRemark',
        'be_linked_number' => 'getBeLinkedNumber',
        'settle_no' => 'getSettleNo',
        'voucher_no' => 'getVoucherNo',
        'is_check' => 'getIsCheck',
        'bill_type' => 'getBillType',
        'bill_id' => 'getBillId',
        'contacts_account_number' => 'getContactsAccountNumber',
        'debit' => 'getDebit',
        'biz_date' => 'getBizDate',
        'voucher_id' => 'getVoucherId',
        'linked_id' => 'getLinkedId',
        'bill_entry_type' => 'getBillEntryType',
        'customer' => 'getCustomer',
        'bank_seq' => 'getBankSeq',
        'custom_field' => 'getCustomField'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['account_number'] = isset($data['account_number']) ? $data['account_number'] : null;
        $this->container['account_name'] = isset($data['account_name']) ? $data['account_name'] : null;
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['explanation'] = isset($data['explanation']) ? $data['explanation'] : null;
        $this->container['source_type'] = isset($data['source_type']) ? $data['source_type'] : null;
        $this->container['debit_for'] = isset($data['debit_for']) ? $data['debit_for'] : null;
        $this->container['credit_for'] = isset($data['credit_for']) ? $data['credit_for'] : null;
        $this->container['check_time'] = isset($data['check_time']) ? $data['check_time'] : null;
        $this->container['is_init'] = isset($data['is_init']) ? $data['is_init'] : null;
        $this->container['bill_entry_id'] = isset($data['bill_entry_id']) ? $data['bill_entry_id'] : null;
        $this->container['operator'] = isset($data['operator']) ? $data['operator'] : null;
        $this->container['supplier'] = isset($data['supplier']) ? $data['supplier'] : null;
        $this->container['credit'] = isset($data['credit']) ? $data['credit'] : null;
        $this->container['period'] = isset($data['period']) ? $data['period'] : null;
        $this->container['contacts_account_id'] = isset($data['contacts_account_id']) ? $data['contacts_account_id'] : null;
        $this->container['bill_no'] = isset($data['bill_no']) ? $data['bill_no'] : null;
        $this->container['exchange_rate'] = isset($data['exchange_rate']) ? $data['exchange_rate'] : null;
        $this->container['remark'] = isset($data['remark']) ? $data['remark'] : null;
        $this->container['be_linked_number'] = isset($data['be_linked_number']) ? $data['be_linked_number'] : null;
        $this->container['settle_no'] = isset($data['settle_no']) ? $data['settle_no'] : null;
        $this->container['voucher_no'] = isset($data['voucher_no']) ? $data['voucher_no'] : null;
        $this->container['is_check'] = isset($data['is_check']) ? $data['is_check'] : null;
        $this->container['bill_type'] = isset($data['bill_type']) ? $data['bill_type'] : null;
        $this->container['bill_id'] = isset($data['bill_id']) ? $data['bill_id'] : null;
        $this->container['contacts_account_number'] = isset($data['contacts_account_number']) ? $data['contacts_account_number'] : null;
        $this->container['debit'] = isset($data['debit']) ? $data['debit'] : null;
        $this->container['biz_date'] = isset($data['biz_date']) ? $data['biz_date'] : null;
        $this->container['voucher_id'] = isset($data['voucher_id']) ? $data['voucher_id'] : null;
        $this->container['linked_id'] = isset($data['linked_id']) ? $data['linked_id'] : null;
        $this->container['bill_entry_type'] = isset($data['bill_entry_type']) ? $data['bill_entry_type'] : null;
        $this->container['customer'] = isset($data['customer']) ? $data['customer'] : null;
        $this->container['bank_seq'] = isset($data['bank_seq']) ? $data['bank_seq'] : null;
        $this->container['custom_field'] = isset($data['custom_field']) ? $data['custom_field'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets number
     *
     * @return string
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string $number number
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets account_number
     *
     * @return string
     */
    public function getAccountNumber()
    {
        return $this->container['account_number'];
    }

    /**
     * Sets account_number
     *
     * @param string $account_number account_number
     *
     * @return $this
     */
    public function setAccountNumber($account_number)
    {
        $this->container['account_number'] = $account_number;

        return $this;
    }

    /**
     * Gets account_name
     *
     * @return string
     */
    public function getAccountName()
    {
        return $this->container['account_name'];
    }

    /**
     * Sets account_name
     *
     * @param string $account_name account_name
     *
     * @return $this
     */
    public function setAccountName($account_name)
    {
        $this->container['account_name'] = $account_name;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return string
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param string $account_id account_id
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets date
     *
     * @return string
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param string $date date
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets explanation
     *
     * @return string
     */
    public function getExplanation()
    {
        return $this->container['explanation'];
    }

    /**
     * Sets explanation
     *
     * @param string $explanation explanation
     *
     * @return $this
     */
    public function setExplanation($explanation)
    {
        $this->container['explanation'] = $explanation;

        return $this;
    }

    /**
     * Gets source_type
     *
     * @return string
     */
    public function getSourceType()
    {
        return $this->container['source_type'];
    }

    /**
     * Sets source_type
     *
     * @param string $source_type source_type
     *
     * @return $this
     */
    public function setSourceType($source_type)
    {
        $this->container['source_type'] = $source_type;

        return $this;
    }

    /**
     * Gets debit_for
     *
     * @return string
     */
    public function getDebitFor()
    {
        return $this->container['debit_for'];
    }

    /**
     * Sets debit_for
     *
     * @param string $debit_for debit_for
     *
     * @return $this
     */
    public function setDebitFor($debit_for)
    {
        $this->container['debit_for'] = $debit_for;

        return $this;
    }

    /**
     * Gets credit_for
     *
     * @return string
     */
    public function getCreditFor()
    {
        return $this->container['credit_for'];
    }

    /**
     * Sets credit_for
     *
     * @param string $credit_for credit_for
     *
     * @return $this
     */
    public function setCreditFor($credit_for)
    {
        $this->container['credit_for'] = $credit_for;

        return $this;
    }

    /**
     * Gets check_time
     *
     * @return string
     */
    public function getCheckTime()
    {
        return $this->container['check_time'];
    }

    /**
     * Sets check_time
     *
     * @param string $check_time check_time
     *
     * @return $this
     */
    public function setCheckTime($check_time)
    {
        $this->container['check_time'] = $check_time;

        return $this;
    }

    /**
     * Gets is_init
     *
     * @return int
     */
    public function getIsInit()
    {
        return $this->container['is_init'];
    }

    /**
     * Sets is_init
     *
     * @param int $is_init is_init
     *
     * @return $this
     */
    public function setIsInit($is_init)
    {
        $this->container['is_init'] = $is_init;

        return $this;
    }

    /**
     * Gets bill_entry_id
     *
     * @return string
     */
    public function getBillEntryId()
    {
        return $this->container['bill_entry_id'];
    }

    /**
     * Sets bill_entry_id
     *
     * @param string $bill_entry_id bill_entry_id
     *
     * @return $this
     */
    public function setBillEntryId($bill_entry_id)
    {
        $this->container['bill_entry_id'] = $bill_entry_id;

        return $this;
    }

    /**
     * Gets operator
     *
     * @return string
     */
    public function getOperator()
    {
        return $this->container['operator'];
    }

    /**
     * Sets operator
     *
     * @param string $operator operator
     *
     * @return $this
     */
    public function setOperator($operator)
    {
        $this->container['operator'] = $operator;

        return $this;
    }

    /**
     * Gets supplier
     *
     * @return string
     */
    public function getSupplier()
    {
        return $this->container['supplier'];
    }

    /**
     * Sets supplier
     *
     * @param string $supplier supplier
     *
     * @return $this
     */
    public function setSupplier($supplier)
    {
        $this->container['supplier'] = $supplier;

        return $this;
    }

    /**
     * Gets credit
     *
     * @return string
     */
    public function getCredit()
    {
        return $this->container['credit'];
    }

    /**
     * Sets credit
     *
     * @param string $credit credit
     *
     * @return $this
     */
    public function setCredit($credit)
    {
        $this->container['credit'] = $credit;

        return $this;
    }

    /**
     * Gets period
     *
     * @return string
     */
    public function getPeriod()
    {
        return $this->container['period'];
    }

    /**
     * Sets period
     *
     * @param string $period period
     *
     * @return $this
     */
    public function setPeriod($period)
    {
        $this->container['period'] = $period;

        return $this;
    }

    /**
     * Gets contacts_account_id
     *
     * @return string
     */
    public function getContactsAccountId()
    {
        return $this->container['contacts_account_id'];
    }

    /**
     * Sets contacts_account_id
     *
     * @param string $contacts_account_id contacts_account_id
     *
     * @return $this
     */
    public function setContactsAccountId($contacts_account_id)
    {
        $this->container['contacts_account_id'] = $contacts_account_id;

        return $this;
    }

    /**
     * Gets bill_no
     *
     * @return string
     */
    public function getBillNo()
    {
        return $this->container['bill_no'];
    }

    /**
     * Sets bill_no
     *
     * @param string $bill_no bill_no
     *
     * @return $this
     */
    public function setBillNo($bill_no)
    {
        $this->container['bill_no'] = $bill_no;

        return $this;
    }

    /**
     * Gets exchange_rate
     *
     * @return string
     */
    public function getExchangeRate()
    {
        return $this->container['exchange_rate'];
    }

    /**
     * Sets exchange_rate
     *
     * @param string $exchange_rate exchange_rate
     *
     * @return $this
     */
    public function setExchangeRate($exchange_rate)
    {
        $this->container['exchange_rate'] = $exchange_rate;

        return $this;
    }

    /**
     * Gets remark
     *
     * @return string
     */
    public function getRemark()
    {
        return $this->container['remark'];
    }

    /**
     * Sets remark
     *
     * @param string $remark remark
     *
     * @return $this
     */
    public function setRemark($remark)
    {
        $this->container['remark'] = $remark;

        return $this;
    }

    /**
     * Gets be_linked_number
     *
     * @return string
     */
    public function getBeLinkedNumber()
    {
        return $this->container['be_linked_number'];
    }

    /**
     * Sets be_linked_number
     *
     * @param string $be_linked_number be_linked_number
     *
     * @return $this
     */
    public function setBeLinkedNumber($be_linked_number)
    {
        $this->container['be_linked_number'] = $be_linked_number;

        return $this;
    }

    /**
     * Gets settle_no
     *
     * @return string
     */
    public function getSettleNo()
    {
        return $this->container['settle_no'];
    }

    /**
     * Sets settle_no
     *
     * @param string $settle_no settle_no
     *
     * @return $this
     */
    public function setSettleNo($settle_no)
    {
        $this->container['settle_no'] = $settle_no;

        return $this;
    }

    /**
     * Gets voucher_no
     *
     * @return string
     */
    public function getVoucherNo()
    {
        return $this->container['voucher_no'];
    }

    /**
     * Sets voucher_no
     *
     * @param string $voucher_no voucher_no
     *
     * @return $this
     */
    public function setVoucherNo($voucher_no)
    {
        $this->container['voucher_no'] = $voucher_no;

        return $this;
    }

    /**
     * Gets is_check
     *
     * @return string
     */
    public function getIsCheck()
    {
        return $this->container['is_check'];
    }

    /**
     * Sets is_check
     *
     * @param string $is_check is_check
     *
     * @return $this
     */
    public function setIsCheck($is_check)
    {
        $this->container['is_check'] = $is_check;

        return $this;
    }

    /**
     * Gets bill_type
     *
     * @return string
     */
    public function getBillType()
    {
        return $this->container['bill_type'];
    }

    /**
     * Sets bill_type
     *
     * @param string $bill_type bill_type
     *
     * @return $this
     */
    public function setBillType($bill_type)
    {
        $this->container['bill_type'] = $bill_type;

        return $this;
    }

    /**
     * Gets bill_id
     *
     * @return string
     */
    public function getBillId()
    {
        return $this->container['bill_id'];
    }

    /**
     * Sets bill_id
     *
     * @param string $bill_id bill_id
     *
     * @return $this
     */
    public function setBillId($bill_id)
    {
        $this->container['bill_id'] = $bill_id;

        return $this;
    }

    /**
     * Gets contacts_account_number
     *
     * @return string
     */
    public function getContactsAccountNumber()
    {
        return $this->container['contacts_account_number'];
    }

    /**
     * Sets contacts_account_number
     *
     * @param string $contacts_account_number contacts_account_number
     *
     * @return $this
     */
    public function setContactsAccountNumber($contacts_account_number)
    {
        $this->container['contacts_account_number'] = $contacts_account_number;

        return $this;
    }

    /**
     * Gets debit
     *
     * @return string
     */
    public function getDebit()
    {
        return $this->container['debit'];
    }

    /**
     * Sets debit
     *
     * @param string $debit debit
     *
     * @return $this
     */
    public function setDebit($debit)
    {
        $this->container['debit'] = $debit;

        return $this;
    }

    /**
     * Gets biz_date
     *
     * @return string
     */
    public function getBizDate()
    {
        return $this->container['biz_date'];
    }

    /**
     * Sets biz_date
     *
     * @param string $biz_date biz_date
     *
     * @return $this
     */
    public function setBizDate($biz_date)
    {
        $this->container['biz_date'] = $biz_date;

        return $this;
    }

    /**
     * Gets voucher_id
     *
     * @return string
     */
    public function getVoucherId()
    {
        return $this->container['voucher_id'];
    }

    /**
     * Sets voucher_id
     *
     * @param string $voucher_id voucher_id
     *
     * @return $this
     */
    public function setVoucherId($voucher_id)
    {
        $this->container['voucher_id'] = $voucher_id;

        return $this;
    }

    /**
     * Gets linked_id
     *
     * @return string
     */
    public function getLinkedId()
    {
        return $this->container['linked_id'];
    }

    /**
     * Sets linked_id
     *
     * @param string $linked_id linked_id
     *
     * @return $this
     */
    public function setLinkedId($linked_id)
    {
        $this->container['linked_id'] = $linked_id;

        return $this;
    }

    /**
     * Gets bill_entry_type
     *
     * @return string
     */
    public function getBillEntryType()
    {
        return $this->container['bill_entry_type'];
    }

    /**
     * Sets bill_entry_type
     *
     * @param string $bill_entry_type bill_entry_type
     *
     * @return $this
     */
    public function setBillEntryType($bill_entry_type)
    {
        $this->container['bill_entry_type'] = $bill_entry_type;

        return $this;
    }

    /**
     * Gets customer
     *
     * @return string
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     *
     * @param string $customer customer
     *
     * @return $this
     */
    public function setCustomer($customer)
    {
        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets bank_seq
     *
     * @return string
     */
    public function getBankSeq()
    {
        return $this->container['bank_seq'];
    }

    /**
     * Sets bank_seq
     *
     * @param string $bank_seq bank_seq
     *
     * @return $this
     */
    public function setBankSeq($bank_seq)
    {
        $this->container['bank_seq'] = $bank_seq;

        return $this;
    }

    /**
     * Gets custom_field
     *
     * @return map[string,string]
     */
    public function getCustomField()
    {
        return $this->container['custom_field'];
    }

    /**
     * Sets custom_field
     *
     * @param map[string,string] $custom_field custom_field
     *
     * @return $this
     */
    public function setCustomField($custom_field)
    {
        $this->container['custom_field'] = $custom_field;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


