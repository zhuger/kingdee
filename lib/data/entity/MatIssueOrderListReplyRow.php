<?php
/**
 * MatIssueOrderListReplyRow
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * MatIssueOrderListReplyRow Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MatIssueOrderListReplyRow implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'MatIssueOrderListReply.Row';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'create_time' => 'string',
        'bill_date' => 'string',
        'id' => 'string',
        'bill_no' => 'string',
        'bill_status' => 'string',
        'supplier_id' => 'string',
        'supplier_name' => 'string',
        'supplier_number' => 'string',
        'emp_id' => 'string',
        'emp_name' => 'string',
        'emp_number' => 'string',
        'bill_stock_id' => 'string',
        'bill_stock_name' => 'string',
        'bill_sp_id' => 'string',
        'stock_id' => 'string',
        'stock_name' => 'string',
        'stock_number' => 'string',
        'sp_id' => 'string',
        'sp_name' => 'string',
        'sp_number' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'create_time' => null,
        'bill_date' => null,
        'id' => null,
        'bill_no' => null,
        'bill_status' => null,
        'supplier_id' => null,
        'supplier_name' => null,
        'supplier_number' => null,
        'emp_id' => null,
        'emp_name' => null,
        'emp_number' => null,
        'bill_stock_id' => null,
        'bill_stock_name' => null,
        'bill_sp_id' => null,
        'stock_id' => null,
        'stock_name' => null,
        'stock_number' => null,
        'sp_id' => null,
        'sp_name' => null,
        'sp_number' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'create_time' => 'create_time',
        'bill_date' => 'bill_date',
        'id' => 'id',
        'bill_no' => 'bill_no',
        'bill_status' => 'bill_status',
        'supplier_id' => 'supplier_id',
        'supplier_name' => 'supplier_name',
        'supplier_number' => 'supplier_number',
        'emp_id' => 'emp_id',
        'emp_name' => 'emp_name',
        'emp_number' => 'emp_number',
        'bill_stock_id' => 'bill_stock_id',
        'bill_stock_name' => 'bill_stock_name',
        'bill_sp_id' => 'bill_sp_id',
        'stock_id' => 'stock_id',
        'stock_name' => 'stock_name',
        'stock_number' => 'stock_number',
        'sp_id' => 'sp_id',
        'sp_name' => 'sp_name',
        'sp_number' => 'sp_number'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'create_time' => 'setCreateTime',
        'bill_date' => 'setBillDate',
        'id' => 'setId',
        'bill_no' => 'setBillNo',
        'bill_status' => 'setBillStatus',
        'supplier_id' => 'setSupplierId',
        'supplier_name' => 'setSupplierName',
        'supplier_number' => 'setSupplierNumber',
        'emp_id' => 'setEmpId',
        'emp_name' => 'setEmpName',
        'emp_number' => 'setEmpNumber',
        'bill_stock_id' => 'setBillStockId',
        'bill_stock_name' => 'setBillStockName',
        'bill_sp_id' => 'setBillSpId',
        'stock_id' => 'setStockId',
        'stock_name' => 'setStockName',
        'stock_number' => 'setStockNumber',
        'sp_id' => 'setSpId',
        'sp_name' => 'setSpName',
        'sp_number' => 'setSpNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'create_time' => 'getCreateTime',
        'bill_date' => 'getBillDate',
        'id' => 'getId',
        'bill_no' => 'getBillNo',
        'bill_status' => 'getBillStatus',
        'supplier_id' => 'getSupplierId',
        'supplier_name' => 'getSupplierName',
        'supplier_number' => 'getSupplierNumber',
        'emp_id' => 'getEmpId',
        'emp_name' => 'getEmpName',
        'emp_number' => 'getEmpNumber',
        'bill_stock_id' => 'getBillStockId',
        'bill_stock_name' => 'getBillStockName',
        'bill_sp_id' => 'getBillSpId',
        'stock_id' => 'getStockId',
        'stock_name' => 'getStockName',
        'stock_number' => 'getStockNumber',
        'sp_id' => 'getSpId',
        'sp_name' => 'getSpName',
        'sp_number' => 'getSpNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['bill_date'] = isset($data['bill_date']) ? $data['bill_date'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['bill_no'] = isset($data['bill_no']) ? $data['bill_no'] : null;
        $this->container['bill_status'] = isset($data['bill_status']) ? $data['bill_status'] : null;
        $this->container['supplier_id'] = isset($data['supplier_id']) ? $data['supplier_id'] : null;
        $this->container['supplier_name'] = isset($data['supplier_name']) ? $data['supplier_name'] : null;
        $this->container['supplier_number'] = isset($data['supplier_number']) ? $data['supplier_number'] : null;
        $this->container['emp_id'] = isset($data['emp_id']) ? $data['emp_id'] : null;
        $this->container['emp_name'] = isset($data['emp_name']) ? $data['emp_name'] : null;
        $this->container['emp_number'] = isset($data['emp_number']) ? $data['emp_number'] : null;
        $this->container['bill_stock_id'] = isset($data['bill_stock_id']) ? $data['bill_stock_id'] : null;
        $this->container['bill_stock_name'] = isset($data['bill_stock_name']) ? $data['bill_stock_name'] : null;
        $this->container['bill_sp_id'] = isset($data['bill_sp_id']) ? $data['bill_sp_id'] : null;
        $this->container['stock_id'] = isset($data['stock_id']) ? $data['stock_id'] : null;
        $this->container['stock_name'] = isset($data['stock_name']) ? $data['stock_name'] : null;
        $this->container['stock_number'] = isset($data['stock_number']) ? $data['stock_number'] : null;
        $this->container['sp_id'] = isset($data['sp_id']) ? $data['sp_id'] : null;
        $this->container['sp_name'] = isset($data['sp_name']) ? $data['sp_name'] : null;
        $this->container['sp_number'] = isset($data['sp_number']) ? $data['sp_number'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets create_time
     *
     * @return string
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param string $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets bill_date
     *
     * @return string
     */
    public function getBillDate()
    {
        return $this->container['bill_date'];
    }

    /**
     * Sets bill_date
     *
     * @param string $bill_date bill_date
     *
     * @return $this
     */
    public function setBillDate($bill_date)
    {
        $this->container['bill_date'] = $bill_date;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets bill_no
     *
     * @return string
     */
    public function getBillNo()
    {
        return $this->container['bill_no'];
    }

    /**
     * Sets bill_no
     *
     * @param string $bill_no bill_no
     *
     * @return $this
     */
    public function setBillNo($bill_no)
    {
        $this->container['bill_no'] = $bill_no;

        return $this;
    }

    /**
     * Gets bill_status
     *
     * @return string
     */
    public function getBillStatus()
    {
        return $this->container['bill_status'];
    }

    /**
     * Sets bill_status
     *
     * @param string $bill_status bill_status
     *
     * @return $this
     */
    public function setBillStatus($bill_status)
    {
        $this->container['bill_status'] = $bill_status;

        return $this;
    }

    /**
     * Gets supplier_id
     *
     * @return string
     */
    public function getSupplierId()
    {
        return $this->container['supplier_id'];
    }

    /**
     * Sets supplier_id
     *
     * @param string $supplier_id supplier_id
     *
     * @return $this
     */
    public function setSupplierId($supplier_id)
    {
        $this->container['supplier_id'] = $supplier_id;

        return $this;
    }

    /**
     * Gets supplier_name
     *
     * @return string
     */
    public function getSupplierName()
    {
        return $this->container['supplier_name'];
    }

    /**
     * Sets supplier_name
     *
     * @param string $supplier_name supplier_name
     *
     * @return $this
     */
    public function setSupplierName($supplier_name)
    {
        $this->container['supplier_name'] = $supplier_name;

        return $this;
    }

    /**
     * Gets supplier_number
     *
     * @return string
     */
    public function getSupplierNumber()
    {
        return $this->container['supplier_number'];
    }

    /**
     * Sets supplier_number
     *
     * @param string $supplier_number supplier_number
     *
     * @return $this
     */
    public function setSupplierNumber($supplier_number)
    {
        $this->container['supplier_number'] = $supplier_number;

        return $this;
    }

    /**
     * Gets emp_id
     *
     * @return string
     */
    public function getEmpId()
    {
        return $this->container['emp_id'];
    }

    /**
     * Sets emp_id
     *
     * @param string $emp_id emp_id
     *
     * @return $this
     */
    public function setEmpId($emp_id)
    {
        $this->container['emp_id'] = $emp_id;

        return $this;
    }

    /**
     * Gets emp_name
     *
     * @return string
     */
    public function getEmpName()
    {
        return $this->container['emp_name'];
    }

    /**
     * Sets emp_name
     *
     * @param string $emp_name emp_name
     *
     * @return $this
     */
    public function setEmpName($emp_name)
    {
        $this->container['emp_name'] = $emp_name;

        return $this;
    }

    /**
     * Gets emp_number
     *
     * @return string
     */
    public function getEmpNumber()
    {
        return $this->container['emp_number'];
    }

    /**
     * Sets emp_number
     *
     * @param string $emp_number emp_number
     *
     * @return $this
     */
    public function setEmpNumber($emp_number)
    {
        $this->container['emp_number'] = $emp_number;

        return $this;
    }

    /**
     * Gets bill_stock_id
     *
     * @return string
     */
    public function getBillStockId()
    {
        return $this->container['bill_stock_id'];
    }

    /**
     * Sets bill_stock_id
     *
     * @param string $bill_stock_id bill_stock_id
     *
     * @return $this
     */
    public function setBillStockId($bill_stock_id)
    {
        $this->container['bill_stock_id'] = $bill_stock_id;

        return $this;
    }

    /**
     * Gets bill_stock_name
     *
     * @return string
     */
    public function getBillStockName()
    {
        return $this->container['bill_stock_name'];
    }

    /**
     * Sets bill_stock_name
     *
     * @param string $bill_stock_name bill_stock_name
     *
     * @return $this
     */
    public function setBillStockName($bill_stock_name)
    {
        $this->container['bill_stock_name'] = $bill_stock_name;

        return $this;
    }

    /**
     * Gets bill_sp_id
     *
     * @return string
     */
    public function getBillSpId()
    {
        return $this->container['bill_sp_id'];
    }

    /**
     * Sets bill_sp_id
     *
     * @param string $bill_sp_id bill_sp_id
     *
     * @return $this
     */
    public function setBillSpId($bill_sp_id)
    {
        $this->container['bill_sp_id'] = $bill_sp_id;

        return $this;
    }

    /**
     * Gets stock_id
     *
     * @return string
     */
    public function getStockId()
    {
        return $this->container['stock_id'];
    }

    /**
     * Sets stock_id
     *
     * @param string $stock_id stock_id
     *
     * @return $this
     */
    public function setStockId($stock_id)
    {
        $this->container['stock_id'] = $stock_id;

        return $this;
    }

    /**
     * Gets stock_name
     *
     * @return string
     */
    public function getStockName()
    {
        return $this->container['stock_name'];
    }

    /**
     * Sets stock_name
     *
     * @param string $stock_name stock_name
     *
     * @return $this
     */
    public function setStockName($stock_name)
    {
        $this->container['stock_name'] = $stock_name;

        return $this;
    }

    /**
     * Gets stock_number
     *
     * @return string
     */
    public function getStockNumber()
    {
        return $this->container['stock_number'];
    }

    /**
     * Sets stock_number
     *
     * @param string $stock_number stock_number
     *
     * @return $this
     */
    public function setStockNumber($stock_number)
    {
        $this->container['stock_number'] = $stock_number;

        return $this;
    }

    /**
     * Gets sp_id
     *
     * @return string
     */
    public function getSpId()
    {
        return $this->container['sp_id'];
    }

    /**
     * Sets sp_id
     *
     * @param string $sp_id sp_id
     *
     * @return $this
     */
    public function setSpId($sp_id)
    {
        $this->container['sp_id'] = $sp_id;

        return $this;
    }

    /**
     * Gets sp_name
     *
     * @return string
     */
    public function getSpName()
    {
        return $this->container['sp_name'];
    }

    /**
     * Sets sp_name
     *
     * @param string $sp_name sp_name
     *
     * @return $this
     */
    public function setSpName($sp_name)
    {
        $this->container['sp_name'] = $sp_name;

        return $this;
    }

    /**
     * Gets sp_number
     *
     * @return string
     */
    public function getSpNumber()
    {
        return $this->container['sp_number'];
    }

    /**
     * Sets sp_number
     *
     * @param string $sp_number sp_number
     *
     * @return $this
     */
    public function setSpNumber($sp_number)
    {
        $this->container['sp_number'] = $sp_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


