<?php
/**
 * MaterialEntity
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * MaterialEntity Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MaterialEntity implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'MaterialEntity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'seq' => 'double',
        'material_id' => 'string',
        'material_name' => 'string',
        'material_number' => 'string',
        'material_auxprop_id' => 'string',
        'material_auxprop_name' => 'string',
        'material_auxprop_number' => 'string',
        'aux1_id' => 'string',
        'aux1_name' => 'string',
        'aux1_number' => 'string',
        'aux2_id' => 'string',
        'aux2_name' => 'string',
        'aux2_number' => 'string',
        'aux3_id' => 'string',
        'aux3_name' => 'string',
        'aux3_number' => 'string',
        'aux4_id' => 'string',
        'aux4_name' => 'string',
        'aux4_number' => 'string',
        'aux5_id' => 'string',
        'aux5_name' => 'string',
        'aux5_number' => 'string',
        'dosage_denominator' => 'string',
        'dosage_numerator' => 'string',
        'unitqty' => 'double',
        'scrap' => 'double',
        'fixed_loss' => 'double',
        'iskeypieces' => 'string',
        'isrepitem' => 'string',
        'issue_pattern' => 'string',
        'machinepos' => 'string',
        'material_baseunit_id' => 'string',
        'material_baseunit_name' => 'string',
        'material_baseunit_number' => 'string',
        'material_unit_id' => 'string',
        'material_unit_name' => 'string',
        'material_unit_number' => 'string',
        'material_remark' => 'string',
        'custom_txt1' => 'string',
        'custom_txt2' => 'string',
        'custom_txt3' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'seq' => 'double',
        'material_id' => null,
        'material_name' => null,
        'material_number' => null,
        'material_auxprop_id' => null,
        'material_auxprop_name' => null,
        'material_auxprop_number' => null,
        'aux1_id' => null,
        'aux1_name' => null,
        'aux1_number' => null,
        'aux2_id' => null,
        'aux2_name' => null,
        'aux2_number' => null,
        'aux3_id' => null,
        'aux3_name' => null,
        'aux3_number' => null,
        'aux4_id' => null,
        'aux4_name' => null,
        'aux4_number' => null,
        'aux5_id' => null,
        'aux5_name' => null,
        'aux5_number' => null,
        'dosage_denominator' => null,
        'dosage_numerator' => null,
        'unitqty' => 'double',
        'scrap' => 'double',
        'fixed_loss' => 'double',
        'iskeypieces' => null,
        'isrepitem' => null,
        'issue_pattern' => null,
        'machinepos' => null,
        'material_baseunit_id' => null,
        'material_baseunit_name' => null,
        'material_baseunit_number' => null,
        'material_unit_id' => null,
        'material_unit_name' => null,
        'material_unit_number' => null,
        'material_remark' => null,
        'custom_txt1' => null,
        'custom_txt2' => null,
        'custom_txt3' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'seq' => 'seq',
        'material_id' => 'material_id',
        'material_name' => 'material_name',
        'material_number' => 'material_number',
        'material_auxprop_id' => 'material_auxprop_id',
        'material_auxprop_name' => 'material_auxprop_name',
        'material_auxprop_number' => 'material_auxprop_number',
        'aux1_id' => 'aux1_id',
        'aux1_name' => 'aux1_name',
        'aux1_number' => 'aux1_number',
        'aux2_id' => 'aux2_id',
        'aux2_name' => 'aux2_name',
        'aux2_number' => 'aux2_number',
        'aux3_id' => 'aux3_id',
        'aux3_name' => 'aux3_name',
        'aux3_number' => 'aux3_number',
        'aux4_id' => 'aux4_id',
        'aux4_name' => 'aux4_name',
        'aux4_number' => 'aux4_number',
        'aux5_id' => 'aux5_id',
        'aux5_name' => 'aux5_name',
        'aux5_number' => 'aux5_number',
        'dosage_denominator' => 'dosage_denominator',
        'dosage_numerator' => 'dosage_numerator',
        'unitqty' => 'unitqty',
        'scrap' => 'scrap',
        'fixed_loss' => 'fixed_loss',
        'iskeypieces' => 'iskeypieces',
        'isrepitem' => 'isrepitem',
        'issue_pattern' => 'issue_pattern',
        'machinepos' => 'machinepos',
        'material_baseunit_id' => 'material_baseunit_id',
        'material_baseunit_name' => 'material_baseunit_name',
        'material_baseunit_number' => 'material_baseunit_number',
        'material_unit_id' => 'material_unit_id',
        'material_unit_name' => 'material_unit_name',
        'material_unit_number' => 'material_unit_number',
        'material_remark' => 'material_remark',
        'custom_txt1' => 'custom_txt1',
        'custom_txt2' => 'custom_txt2',
        'custom_txt3' => 'custom_txt3'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'seq' => 'setSeq',
        'material_id' => 'setMaterialId',
        'material_name' => 'setMaterialName',
        'material_number' => 'setMaterialNumber',
        'material_auxprop_id' => 'setMaterialAuxpropId',
        'material_auxprop_name' => 'setMaterialAuxpropName',
        'material_auxprop_number' => 'setMaterialAuxpropNumber',
        'aux1_id' => 'setAux1Id',
        'aux1_name' => 'setAux1Name',
        'aux1_number' => 'setAux1Number',
        'aux2_id' => 'setAux2Id',
        'aux2_name' => 'setAux2Name',
        'aux2_number' => 'setAux2Number',
        'aux3_id' => 'setAux3Id',
        'aux3_name' => 'setAux3Name',
        'aux3_number' => 'setAux3Number',
        'aux4_id' => 'setAux4Id',
        'aux4_name' => 'setAux4Name',
        'aux4_number' => 'setAux4Number',
        'aux5_id' => 'setAux5Id',
        'aux5_name' => 'setAux5Name',
        'aux5_number' => 'setAux5Number',
        'dosage_denominator' => 'setDosageDenominator',
        'dosage_numerator' => 'setDosageNumerator',
        'unitqty' => 'setUnitqty',
        'scrap' => 'setScrap',
        'fixed_loss' => 'setFixedLoss',
        'iskeypieces' => 'setIskeypieces',
        'isrepitem' => 'setIsrepitem',
        'issue_pattern' => 'setIssuePattern',
        'machinepos' => 'setMachinepos',
        'material_baseunit_id' => 'setMaterialBaseunitId',
        'material_baseunit_name' => 'setMaterialBaseunitName',
        'material_baseunit_number' => 'setMaterialBaseunitNumber',
        'material_unit_id' => 'setMaterialUnitId',
        'material_unit_name' => 'setMaterialUnitName',
        'material_unit_number' => 'setMaterialUnitNumber',
        'material_remark' => 'setMaterialRemark',
        'custom_txt1' => 'setCustomTxt1',
        'custom_txt2' => 'setCustomTxt2',
        'custom_txt3' => 'setCustomTxt3'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'seq' => 'getSeq',
        'material_id' => 'getMaterialId',
        'material_name' => 'getMaterialName',
        'material_number' => 'getMaterialNumber',
        'material_auxprop_id' => 'getMaterialAuxpropId',
        'material_auxprop_name' => 'getMaterialAuxpropName',
        'material_auxprop_number' => 'getMaterialAuxpropNumber',
        'aux1_id' => 'getAux1Id',
        'aux1_name' => 'getAux1Name',
        'aux1_number' => 'getAux1Number',
        'aux2_id' => 'getAux2Id',
        'aux2_name' => 'getAux2Name',
        'aux2_number' => 'getAux2Number',
        'aux3_id' => 'getAux3Id',
        'aux3_name' => 'getAux3Name',
        'aux3_number' => 'getAux3Number',
        'aux4_id' => 'getAux4Id',
        'aux4_name' => 'getAux4Name',
        'aux4_number' => 'getAux4Number',
        'aux5_id' => 'getAux5Id',
        'aux5_name' => 'getAux5Name',
        'aux5_number' => 'getAux5Number',
        'dosage_denominator' => 'getDosageDenominator',
        'dosage_numerator' => 'getDosageNumerator',
        'unitqty' => 'getUnitqty',
        'scrap' => 'getScrap',
        'fixed_loss' => 'getFixedLoss',
        'iskeypieces' => 'getIskeypieces',
        'isrepitem' => 'getIsrepitem',
        'issue_pattern' => 'getIssuePattern',
        'machinepos' => 'getMachinepos',
        'material_baseunit_id' => 'getMaterialBaseunitId',
        'material_baseunit_name' => 'getMaterialBaseunitName',
        'material_baseunit_number' => 'getMaterialBaseunitNumber',
        'material_unit_id' => 'getMaterialUnitId',
        'material_unit_name' => 'getMaterialUnitName',
        'material_unit_number' => 'getMaterialUnitNumber',
        'material_remark' => 'getMaterialRemark',
        'custom_txt1' => 'getCustomTxt1',
        'custom_txt2' => 'getCustomTxt2',
        'custom_txt3' => 'getCustomTxt3'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['seq'] = isset($data['seq']) ? $data['seq'] : null;
        $this->container['material_id'] = isset($data['material_id']) ? $data['material_id'] : null;
        $this->container['material_name'] = isset($data['material_name']) ? $data['material_name'] : null;
        $this->container['material_number'] = isset($data['material_number']) ? $data['material_number'] : null;
        $this->container['material_auxprop_id'] = isset($data['material_auxprop_id']) ? $data['material_auxprop_id'] : null;
        $this->container['material_auxprop_name'] = isset($data['material_auxprop_name']) ? $data['material_auxprop_name'] : null;
        $this->container['material_auxprop_number'] = isset($data['material_auxprop_number']) ? $data['material_auxprop_number'] : null;
        $this->container['aux1_id'] = isset($data['aux1_id']) ? $data['aux1_id'] : null;
        $this->container['aux1_name'] = isset($data['aux1_name']) ? $data['aux1_name'] : null;
        $this->container['aux1_number'] = isset($data['aux1_number']) ? $data['aux1_number'] : null;
        $this->container['aux2_id'] = isset($data['aux2_id']) ? $data['aux2_id'] : null;
        $this->container['aux2_name'] = isset($data['aux2_name']) ? $data['aux2_name'] : null;
        $this->container['aux2_number'] = isset($data['aux2_number']) ? $data['aux2_number'] : null;
        $this->container['aux3_id'] = isset($data['aux3_id']) ? $data['aux3_id'] : null;
        $this->container['aux3_name'] = isset($data['aux3_name']) ? $data['aux3_name'] : null;
        $this->container['aux3_number'] = isset($data['aux3_number']) ? $data['aux3_number'] : null;
        $this->container['aux4_id'] = isset($data['aux4_id']) ? $data['aux4_id'] : null;
        $this->container['aux4_name'] = isset($data['aux4_name']) ? $data['aux4_name'] : null;
        $this->container['aux4_number'] = isset($data['aux4_number']) ? $data['aux4_number'] : null;
        $this->container['aux5_id'] = isset($data['aux5_id']) ? $data['aux5_id'] : null;
        $this->container['aux5_name'] = isset($data['aux5_name']) ? $data['aux5_name'] : null;
        $this->container['aux5_number'] = isset($data['aux5_number']) ? $data['aux5_number'] : null;
        $this->container['dosage_denominator'] = isset($data['dosage_denominator']) ? $data['dosage_denominator'] : null;
        $this->container['dosage_numerator'] = isset($data['dosage_numerator']) ? $data['dosage_numerator'] : null;
        $this->container['unitqty'] = isset($data['unitqty']) ? $data['unitqty'] : null;
        $this->container['scrap'] = isset($data['scrap']) ? $data['scrap'] : null;
        $this->container['fixed_loss'] = isset($data['fixed_loss']) ? $data['fixed_loss'] : null;
        $this->container['iskeypieces'] = isset($data['iskeypieces']) ? $data['iskeypieces'] : null;
        $this->container['isrepitem'] = isset($data['isrepitem']) ? $data['isrepitem'] : null;
        $this->container['issue_pattern'] = isset($data['issue_pattern']) ? $data['issue_pattern'] : null;
        $this->container['machinepos'] = isset($data['machinepos']) ? $data['machinepos'] : null;
        $this->container['material_baseunit_id'] = isset($data['material_baseunit_id']) ? $data['material_baseunit_id'] : null;
        $this->container['material_baseunit_name'] = isset($data['material_baseunit_name']) ? $data['material_baseunit_name'] : null;
        $this->container['material_baseunit_number'] = isset($data['material_baseunit_number']) ? $data['material_baseunit_number'] : null;
        $this->container['material_unit_id'] = isset($data['material_unit_id']) ? $data['material_unit_id'] : null;
        $this->container['material_unit_name'] = isset($data['material_unit_name']) ? $data['material_unit_name'] : null;
        $this->container['material_unit_number'] = isset($data['material_unit_number']) ? $data['material_unit_number'] : null;
        $this->container['material_remark'] = isset($data['material_remark']) ? $data['material_remark'] : null;
        $this->container['custom_txt1'] = isset($data['custom_txt1']) ? $data['custom_txt1'] : null;
        $this->container['custom_txt2'] = isset($data['custom_txt2']) ? $data['custom_txt2'] : null;
        $this->container['custom_txt3'] = isset($data['custom_txt3']) ? $data['custom_txt3'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets seq
     *
     * @return double
     */
    public function getSeq()
    {
        return $this->container['seq'];
    }

    /**
     * Sets seq
     *
     * @param double $seq seq
     *
     * @return $this
     */
    public function setSeq($seq)
    {
        $this->container['seq'] = $seq;

        return $this;
    }

    /**
     * Gets material_id
     *
     * @return string
     */
    public function getMaterialId()
    {
        return $this->container['material_id'];
    }

    /**
     * Sets material_id
     *
     * @param string $material_id material_id
     *
     * @return $this
     */
    public function setMaterialId($material_id)
    {
        $this->container['material_id'] = $material_id;

        return $this;
    }

    /**
     * Gets material_name
     *
     * @return string
     */
    public function getMaterialName()
    {
        return $this->container['material_name'];
    }

    /**
     * Sets material_name
     *
     * @param string $material_name material_name
     *
     * @return $this
     */
    public function setMaterialName($material_name)
    {
        $this->container['material_name'] = $material_name;

        return $this;
    }

    /**
     * Gets material_number
     *
     * @return string
     */
    public function getMaterialNumber()
    {
        return $this->container['material_number'];
    }

    /**
     * Sets material_number
     *
     * @param string $material_number material_number
     *
     * @return $this
     */
    public function setMaterialNumber($material_number)
    {
        $this->container['material_number'] = $material_number;

        return $this;
    }

    /**
     * Gets material_auxprop_id
     *
     * @return string
     */
    public function getMaterialAuxpropId()
    {
        return $this->container['material_auxprop_id'];
    }

    /**
     * Sets material_auxprop_id
     *
     * @param string $material_auxprop_id material_auxprop_id
     *
     * @return $this
     */
    public function setMaterialAuxpropId($material_auxprop_id)
    {
        $this->container['material_auxprop_id'] = $material_auxprop_id;

        return $this;
    }

    /**
     * Gets material_auxprop_name
     *
     * @return string
     */
    public function getMaterialAuxpropName()
    {
        return $this->container['material_auxprop_name'];
    }

    /**
     * Sets material_auxprop_name
     *
     * @param string $material_auxprop_name material_auxprop_name
     *
     * @return $this
     */
    public function setMaterialAuxpropName($material_auxprop_name)
    {
        $this->container['material_auxprop_name'] = $material_auxprop_name;

        return $this;
    }

    /**
     * Gets material_auxprop_number
     *
     * @return string
     */
    public function getMaterialAuxpropNumber()
    {
        return $this->container['material_auxprop_number'];
    }

    /**
     * Sets material_auxprop_number
     *
     * @param string $material_auxprop_number material_auxprop_number
     *
     * @return $this
     */
    public function setMaterialAuxpropNumber($material_auxprop_number)
    {
        $this->container['material_auxprop_number'] = $material_auxprop_number;

        return $this;
    }

    /**
     * Gets aux1_id
     *
     * @return string
     */
    public function getAux1Id()
    {
        return $this->container['aux1_id'];
    }

    /**
     * Sets aux1_id
     *
     * @param string $aux1_id aux1_id
     *
     * @return $this
     */
    public function setAux1Id($aux1_id)
    {
        $this->container['aux1_id'] = $aux1_id;

        return $this;
    }

    /**
     * Gets aux1_name
     *
     * @return string
     */
    public function getAux1Name()
    {
        return $this->container['aux1_name'];
    }

    /**
     * Sets aux1_name
     *
     * @param string $aux1_name aux1_name
     *
     * @return $this
     */
    public function setAux1Name($aux1_name)
    {
        $this->container['aux1_name'] = $aux1_name;

        return $this;
    }

    /**
     * Gets aux1_number
     *
     * @return string
     */
    public function getAux1Number()
    {
        return $this->container['aux1_number'];
    }

    /**
     * Sets aux1_number
     *
     * @param string $aux1_number aux1_number
     *
     * @return $this
     */
    public function setAux1Number($aux1_number)
    {
        $this->container['aux1_number'] = $aux1_number;

        return $this;
    }

    /**
     * Gets aux2_id
     *
     * @return string
     */
    public function getAux2Id()
    {
        return $this->container['aux2_id'];
    }

    /**
     * Sets aux2_id
     *
     * @param string $aux2_id aux2_id
     *
     * @return $this
     */
    public function setAux2Id($aux2_id)
    {
        $this->container['aux2_id'] = $aux2_id;

        return $this;
    }

    /**
     * Gets aux2_name
     *
     * @return string
     */
    public function getAux2Name()
    {
        return $this->container['aux2_name'];
    }

    /**
     * Sets aux2_name
     *
     * @param string $aux2_name aux2_name
     *
     * @return $this
     */
    public function setAux2Name($aux2_name)
    {
        $this->container['aux2_name'] = $aux2_name;

        return $this;
    }

    /**
     * Gets aux2_number
     *
     * @return string
     */
    public function getAux2Number()
    {
        return $this->container['aux2_number'];
    }

    /**
     * Sets aux2_number
     *
     * @param string $aux2_number aux2_number
     *
     * @return $this
     */
    public function setAux2Number($aux2_number)
    {
        $this->container['aux2_number'] = $aux2_number;

        return $this;
    }

    /**
     * Gets aux3_id
     *
     * @return string
     */
    public function getAux3Id()
    {
        return $this->container['aux3_id'];
    }

    /**
     * Sets aux3_id
     *
     * @param string $aux3_id aux3_id
     *
     * @return $this
     */
    public function setAux3Id($aux3_id)
    {
        $this->container['aux3_id'] = $aux3_id;

        return $this;
    }

    /**
     * Gets aux3_name
     *
     * @return string
     */
    public function getAux3Name()
    {
        return $this->container['aux3_name'];
    }

    /**
     * Sets aux3_name
     *
     * @param string $aux3_name aux3_name
     *
     * @return $this
     */
    public function setAux3Name($aux3_name)
    {
        $this->container['aux3_name'] = $aux3_name;

        return $this;
    }

    /**
     * Gets aux3_number
     *
     * @return string
     */
    public function getAux3Number()
    {
        return $this->container['aux3_number'];
    }

    /**
     * Sets aux3_number
     *
     * @param string $aux3_number aux3_number
     *
     * @return $this
     */
    public function setAux3Number($aux3_number)
    {
        $this->container['aux3_number'] = $aux3_number;

        return $this;
    }

    /**
     * Gets aux4_id
     *
     * @return string
     */
    public function getAux4Id()
    {
        return $this->container['aux4_id'];
    }

    /**
     * Sets aux4_id
     *
     * @param string $aux4_id aux4_id
     *
     * @return $this
     */
    public function setAux4Id($aux4_id)
    {
        $this->container['aux4_id'] = $aux4_id;

        return $this;
    }

    /**
     * Gets aux4_name
     *
     * @return string
     */
    public function getAux4Name()
    {
        return $this->container['aux4_name'];
    }

    /**
     * Sets aux4_name
     *
     * @param string $aux4_name aux4_name
     *
     * @return $this
     */
    public function setAux4Name($aux4_name)
    {
        $this->container['aux4_name'] = $aux4_name;

        return $this;
    }

    /**
     * Gets aux4_number
     *
     * @return string
     */
    public function getAux4Number()
    {
        return $this->container['aux4_number'];
    }

    /**
     * Sets aux4_number
     *
     * @param string $aux4_number aux4_number
     *
     * @return $this
     */
    public function setAux4Number($aux4_number)
    {
        $this->container['aux4_number'] = $aux4_number;

        return $this;
    }

    /**
     * Gets aux5_id
     *
     * @return string
     */
    public function getAux5Id()
    {
        return $this->container['aux5_id'];
    }

    /**
     * Sets aux5_id
     *
     * @param string $aux5_id aux5_id
     *
     * @return $this
     */
    public function setAux5Id($aux5_id)
    {
        $this->container['aux5_id'] = $aux5_id;

        return $this;
    }

    /**
     * Gets aux5_name
     *
     * @return string
     */
    public function getAux5Name()
    {
        return $this->container['aux5_name'];
    }

    /**
     * Sets aux5_name
     *
     * @param string $aux5_name aux5_name
     *
     * @return $this
     */
    public function setAux5Name($aux5_name)
    {
        $this->container['aux5_name'] = $aux5_name;

        return $this;
    }

    /**
     * Gets aux5_number
     *
     * @return string
     */
    public function getAux5Number()
    {
        return $this->container['aux5_number'];
    }

    /**
     * Sets aux5_number
     *
     * @param string $aux5_number aux5_number
     *
     * @return $this
     */
    public function setAux5Number($aux5_number)
    {
        $this->container['aux5_number'] = $aux5_number;

        return $this;
    }

    /**
     * Gets dosage_denominator
     *
     * @return string
     */
    public function getDosageDenominator()
    {
        return $this->container['dosage_denominator'];
    }

    /**
     * Sets dosage_denominator
     *
     * @param string $dosage_denominator dosage_denominator
     *
     * @return $this
     */
    public function setDosageDenominator($dosage_denominator)
    {
        $this->container['dosage_denominator'] = $dosage_denominator;

        return $this;
    }

    /**
     * Gets dosage_numerator
     *
     * @return string
     */
    public function getDosageNumerator()
    {
        return $this->container['dosage_numerator'];
    }

    /**
     * Sets dosage_numerator
     *
     * @param string $dosage_numerator dosage_numerator
     *
     * @return $this
     */
    public function setDosageNumerator($dosage_numerator)
    {
        $this->container['dosage_numerator'] = $dosage_numerator;

        return $this;
    }

    /**
     * Gets unitqty
     *
     * @return double
     */
    public function getUnitqty()
    {
        return $this->container['unitqty'];
    }

    /**
     * Sets unitqty
     *
     * @param double $unitqty unitqty
     *
     * @return $this
     */
    public function setUnitqty($unitqty)
    {
        $this->container['unitqty'] = $unitqty;

        return $this;
    }

    /**
     * Gets scrap
     *
     * @return double
     */
    public function getScrap()
    {
        return $this->container['scrap'];
    }

    /**
     * Sets scrap
     *
     * @param double $scrap scrap
     *
     * @return $this
     */
    public function setScrap($scrap)
    {
        $this->container['scrap'] = $scrap;

        return $this;
    }

    /**
     * Gets fixed_loss
     *
     * @return double
     */
    public function getFixedLoss()
    {
        return $this->container['fixed_loss'];
    }

    /**
     * Sets fixed_loss
     *
     * @param double $fixed_loss fixed_loss
     *
     * @return $this
     */
    public function setFixedLoss($fixed_loss)
    {
        $this->container['fixed_loss'] = $fixed_loss;

        return $this;
    }

    /**
     * Gets iskeypieces
     *
     * @return string
     */
    public function getIskeypieces()
    {
        return $this->container['iskeypieces'];
    }

    /**
     * Sets iskeypieces
     *
     * @param string $iskeypieces iskeypieces
     *
     * @return $this
     */
    public function setIskeypieces($iskeypieces)
    {
        $this->container['iskeypieces'] = $iskeypieces;

        return $this;
    }

    /**
     * Gets isrepitem
     *
     * @return string
     */
    public function getIsrepitem()
    {
        return $this->container['isrepitem'];
    }

    /**
     * Sets isrepitem
     *
     * @param string $isrepitem isrepitem
     *
     * @return $this
     */
    public function setIsrepitem($isrepitem)
    {
        $this->container['isrepitem'] = $isrepitem;

        return $this;
    }

    /**
     * Gets issue_pattern
     *
     * @return string
     */
    public function getIssuePattern()
    {
        return $this->container['issue_pattern'];
    }

    /**
     * Sets issue_pattern
     *
     * @param string $issue_pattern issue_pattern
     *
     * @return $this
     */
    public function setIssuePattern($issue_pattern)
    {
        $this->container['issue_pattern'] = $issue_pattern;

        return $this;
    }

    /**
     * Gets machinepos
     *
     * @return string
     */
    public function getMachinepos()
    {
        return $this->container['machinepos'];
    }

    /**
     * Sets machinepos
     *
     * @param string $machinepos machinepos
     *
     * @return $this
     */
    public function setMachinepos($machinepos)
    {
        $this->container['machinepos'] = $machinepos;

        return $this;
    }

    /**
     * Gets material_baseunit_id
     *
     * @return string
     */
    public function getMaterialBaseunitId()
    {
        return $this->container['material_baseunit_id'];
    }

    /**
     * Sets material_baseunit_id
     *
     * @param string $material_baseunit_id material_baseunit_id
     *
     * @return $this
     */
    public function setMaterialBaseunitId($material_baseunit_id)
    {
        $this->container['material_baseunit_id'] = $material_baseunit_id;

        return $this;
    }

    /**
     * Gets material_baseunit_name
     *
     * @return string
     */
    public function getMaterialBaseunitName()
    {
        return $this->container['material_baseunit_name'];
    }

    /**
     * Sets material_baseunit_name
     *
     * @param string $material_baseunit_name material_baseunit_name
     *
     * @return $this
     */
    public function setMaterialBaseunitName($material_baseunit_name)
    {
        $this->container['material_baseunit_name'] = $material_baseunit_name;

        return $this;
    }

    /**
     * Gets material_baseunit_number
     *
     * @return string
     */
    public function getMaterialBaseunitNumber()
    {
        return $this->container['material_baseunit_number'];
    }

    /**
     * Sets material_baseunit_number
     *
     * @param string $material_baseunit_number material_baseunit_number
     *
     * @return $this
     */
    public function setMaterialBaseunitNumber($material_baseunit_number)
    {
        $this->container['material_baseunit_number'] = $material_baseunit_number;

        return $this;
    }

    /**
     * Gets material_unit_id
     *
     * @return string
     */
    public function getMaterialUnitId()
    {
        return $this->container['material_unit_id'];
    }

    /**
     * Sets material_unit_id
     *
     * @param string $material_unit_id material_unit_id
     *
     * @return $this
     */
    public function setMaterialUnitId($material_unit_id)
    {
        $this->container['material_unit_id'] = $material_unit_id;

        return $this;
    }

    /**
     * Gets material_unit_name
     *
     * @return string
     */
    public function getMaterialUnitName()
    {
        return $this->container['material_unit_name'];
    }

    /**
     * Sets material_unit_name
     *
     * @param string $material_unit_name material_unit_name
     *
     * @return $this
     */
    public function setMaterialUnitName($material_unit_name)
    {
        $this->container['material_unit_name'] = $material_unit_name;

        return $this;
    }

    /**
     * Gets material_unit_number
     *
     * @return string
     */
    public function getMaterialUnitNumber()
    {
        return $this->container['material_unit_number'];
    }

    /**
     * Sets material_unit_number
     *
     * @param string $material_unit_number material_unit_number
     *
     * @return $this
     */
    public function setMaterialUnitNumber($material_unit_number)
    {
        $this->container['material_unit_number'] = $material_unit_number;

        return $this;
    }

    /**
     * Gets material_remark
     *
     * @return string
     */
    public function getMaterialRemark()
    {
        return $this->container['material_remark'];
    }

    /**
     * Sets material_remark
     *
     * @param string $material_remark material_remark
     *
     * @return $this
     */
    public function setMaterialRemark($material_remark)
    {
        $this->container['material_remark'] = $material_remark;

        return $this;
    }

    /**
     * Gets custom_txt1
     *
     * @return string
     */
    public function getCustomTxt1()
    {
        return $this->container['custom_txt1'];
    }

    /**
     * Sets custom_txt1
     *
     * @param string $custom_txt1 custom_txt1
     *
     * @return $this
     */
    public function setCustomTxt1($custom_txt1)
    {
        $this->container['custom_txt1'] = $custom_txt1;

        return $this;
    }

    /**
     * Gets custom_txt2
     *
     * @return string
     */
    public function getCustomTxt2()
    {
        return $this->container['custom_txt2'];
    }

    /**
     * Sets custom_txt2
     *
     * @param string $custom_txt2 custom_txt2
     *
     * @return $this
     */
    public function setCustomTxt2($custom_txt2)
    {
        $this->container['custom_txt2'] = $custom_txt2;

        return $this;
    }

    /**
     * Gets custom_txt3
     *
     * @return string
     */
    public function getCustomTxt3()
    {
        return $this->container['custom_txt3'];
    }

    /**
     * Sets custom_txt3
     *
     * @param string $custom_txt3 custom_txt3
     *
     * @return $this
     */
    public function setCustomTxt3($custom_txt3)
    {
        $this->container['custom_txt3'] = $custom_txt3;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


