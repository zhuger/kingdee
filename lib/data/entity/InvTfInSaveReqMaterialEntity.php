<?php
/**
 * InvTfInSaveReqMaterialEntity
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * InvTfInSaveReqMaterialEntity Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvTfInSaveReqMaterialEntity implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InvTfInSaveReq.MaterialEntity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'material_id' => 'string',
        'in_stock_id' => 'string',
        'in_sp_id' => 'string',
        'out_stock_id' => 'string',
        'out_sp_id' => 'string',
        'aux_prop_id' => 'string',
        'batch_no' => 'string',
        'pro_place' => 'string',
        'pro_reg_no' => 'string',
        'pro_license' => 'string',
        'kf_date' => 'string',
        'valid_date' => 'string',
        'kf_period' => 'int',
        'kf_type' => 'int',
        'qty' => 'double',
        'unit_id' => 'string',
        'aux_qty' => 'double',
        'aux_unit_id' => 'string',
        'in_price' => 'double',
        'discount' => 'double',
        'comment' => 'string',
        'src_bill_type_id' => 'string',
        'src_inter_id' => 'string',
        'src_entry_id' => 'string',
        'custom_entity_field' => 'map[string,string]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'material_id' => null,
        'in_stock_id' => null,
        'in_sp_id' => null,
        'out_stock_id' => null,
        'out_sp_id' => null,
        'aux_prop_id' => null,
        'batch_no' => null,
        'pro_place' => null,
        'pro_reg_no' => null,
        'pro_license' => null,
        'kf_date' => null,
        'valid_date' => null,
        'kf_period' => 'int32',
        'kf_type' => 'int32',
        'qty' => 'double',
        'unit_id' => null,
        'aux_qty' => 'double',
        'aux_unit_id' => null,
        'in_price' => 'double',
        'discount' => 'double',
        'comment' => null,
        'src_bill_type_id' => null,
        'src_inter_id' => null,
        'src_entry_id' => null,
        'custom_entity_field' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'material_id' => 'material_id',
        'in_stock_id' => 'in_stock_id',
        'in_sp_id' => 'in_sp_id',
        'out_stock_id' => 'out_stock_id',
        'out_sp_id' => 'out_sp_id',
        'aux_prop_id' => 'aux_prop_id',
        'batch_no' => 'batch_no',
        'pro_place' => 'pro_place',
        'pro_reg_no' => 'pro_reg_no',
        'pro_license' => 'pro_license',
        'kf_date' => 'kf_date',
        'valid_date' => 'valid_date',
        'kf_period' => 'kf_period',
        'kf_type' => 'kf_type',
        'qty' => 'qty',
        'unit_id' => 'unit_id',
        'aux_qty' => 'aux_qty',
        'aux_unit_id' => 'aux_unit_id',
        'in_price' => 'in_price',
        'discount' => 'discount',
        'comment' => 'comment',
        'src_bill_type_id' => 'src_bill_type_id',
        'src_inter_id' => 'src_inter_id',
        'src_entry_id' => 'src_entry_id',
        'custom_entity_field' => 'custom_entity_field'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'material_id' => 'setMaterialId',
        'in_stock_id' => 'setInStockId',
        'in_sp_id' => 'setInSpId',
        'out_stock_id' => 'setOutStockId',
        'out_sp_id' => 'setOutSpId',
        'aux_prop_id' => 'setAuxPropId',
        'batch_no' => 'setBatchNo',
        'pro_place' => 'setProPlace',
        'pro_reg_no' => 'setProRegNo',
        'pro_license' => 'setProLicense',
        'kf_date' => 'setKfDate',
        'valid_date' => 'setValidDate',
        'kf_period' => 'setKfPeriod',
        'kf_type' => 'setKfType',
        'qty' => 'setQty',
        'unit_id' => 'setUnitId',
        'aux_qty' => 'setAuxQty',
        'aux_unit_id' => 'setAuxUnitId',
        'in_price' => 'setInPrice',
        'discount' => 'setDiscount',
        'comment' => 'setComment',
        'src_bill_type_id' => 'setSrcBillTypeId',
        'src_inter_id' => 'setSrcInterId',
        'src_entry_id' => 'setSrcEntryId',
        'custom_entity_field' => 'setCustomEntityField'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'material_id' => 'getMaterialId',
        'in_stock_id' => 'getInStockId',
        'in_sp_id' => 'getInSpId',
        'out_stock_id' => 'getOutStockId',
        'out_sp_id' => 'getOutSpId',
        'aux_prop_id' => 'getAuxPropId',
        'batch_no' => 'getBatchNo',
        'pro_place' => 'getProPlace',
        'pro_reg_no' => 'getProRegNo',
        'pro_license' => 'getProLicense',
        'kf_date' => 'getKfDate',
        'valid_date' => 'getValidDate',
        'kf_period' => 'getKfPeriod',
        'kf_type' => 'getKfType',
        'qty' => 'getQty',
        'unit_id' => 'getUnitId',
        'aux_qty' => 'getAuxQty',
        'aux_unit_id' => 'getAuxUnitId',
        'in_price' => 'getInPrice',
        'discount' => 'getDiscount',
        'comment' => 'getComment',
        'src_bill_type_id' => 'getSrcBillTypeId',
        'src_inter_id' => 'getSrcInterId',
        'src_entry_id' => 'getSrcEntryId',
        'custom_entity_field' => 'getCustomEntityField'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['material_id'] = isset($data['material_id']) ? $data['material_id'] : null;
        $this->container['in_stock_id'] = isset($data['in_stock_id']) ? $data['in_stock_id'] : null;
        $this->container['in_sp_id'] = isset($data['in_sp_id']) ? $data['in_sp_id'] : null;
        $this->container['out_stock_id'] = isset($data['out_stock_id']) ? $data['out_stock_id'] : null;
        $this->container['out_sp_id'] = isset($data['out_sp_id']) ? $data['out_sp_id'] : null;
        $this->container['aux_prop_id'] = isset($data['aux_prop_id']) ? $data['aux_prop_id'] : null;
        $this->container['batch_no'] = isset($data['batch_no']) ? $data['batch_no'] : null;
        $this->container['pro_place'] = isset($data['pro_place']) ? $data['pro_place'] : null;
        $this->container['pro_reg_no'] = isset($data['pro_reg_no']) ? $data['pro_reg_no'] : null;
        $this->container['pro_license'] = isset($data['pro_license']) ? $data['pro_license'] : null;
        $this->container['kf_date'] = isset($data['kf_date']) ? $data['kf_date'] : null;
        $this->container['valid_date'] = isset($data['valid_date']) ? $data['valid_date'] : null;
        $this->container['kf_period'] = isset($data['kf_period']) ? $data['kf_period'] : null;
        $this->container['kf_type'] = isset($data['kf_type']) ? $data['kf_type'] : null;
        $this->container['qty'] = isset($data['qty']) ? $data['qty'] : null;
        $this->container['unit_id'] = isset($data['unit_id']) ? $data['unit_id'] : null;
        $this->container['aux_qty'] = isset($data['aux_qty']) ? $data['aux_qty'] : null;
        $this->container['aux_unit_id'] = isset($data['aux_unit_id']) ? $data['aux_unit_id'] : null;
        $this->container['in_price'] = isset($data['in_price']) ? $data['in_price'] : null;
        $this->container['discount'] = isset($data['discount']) ? $data['discount'] : null;
        $this->container['comment'] = isset($data['comment']) ? $data['comment'] : null;
        $this->container['src_bill_type_id'] = isset($data['src_bill_type_id']) ? $data['src_bill_type_id'] : null;
        $this->container['src_inter_id'] = isset($data['src_inter_id']) ? $data['src_inter_id'] : null;
        $this->container['src_entry_id'] = isset($data['src_entry_id']) ? $data['src_entry_id'] : null;
        $this->container['custom_entity_field'] = isset($data['custom_entity_field']) ? $data['custom_entity_field'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets material_id
     *
     * @return string
     */
    public function getMaterialId()
    {
        return $this->container['material_id'];
    }

    /**
     * Sets material_id
     *
     * @param string $material_id material_id
     *
     * @return $this
     */
    public function setMaterialId($material_id)
    {
        $this->container['material_id'] = $material_id;

        return $this;
    }

    /**
     * Gets in_stock_id
     *
     * @return string
     */
    public function getInStockId()
    {
        return $this->container['in_stock_id'];
    }

    /**
     * Sets in_stock_id
     *
     * @param string $in_stock_id in_stock_id
     *
     * @return $this
     */
    public function setInStockId($in_stock_id)
    {
        $this->container['in_stock_id'] = $in_stock_id;

        return $this;
    }

    /**
     * Gets in_sp_id
     *
     * @return string
     */
    public function getInSpId()
    {
        return $this->container['in_sp_id'];
    }

    /**
     * Sets in_sp_id
     *
     * @param string $in_sp_id in_sp_id
     *
     * @return $this
     */
    public function setInSpId($in_sp_id)
    {
        $this->container['in_sp_id'] = $in_sp_id;

        return $this;
    }

    /**
     * Gets out_stock_id
     *
     * @return string
     */
    public function getOutStockId()
    {
        return $this->container['out_stock_id'];
    }

    /**
     * Sets out_stock_id
     *
     * @param string $out_stock_id out_stock_id
     *
     * @return $this
     */
    public function setOutStockId($out_stock_id)
    {
        $this->container['out_stock_id'] = $out_stock_id;

        return $this;
    }

    /**
     * Gets out_sp_id
     *
     * @return string
     */
    public function getOutSpId()
    {
        return $this->container['out_sp_id'];
    }

    /**
     * Sets out_sp_id
     *
     * @param string $out_sp_id out_sp_id
     *
     * @return $this
     */
    public function setOutSpId($out_sp_id)
    {
        $this->container['out_sp_id'] = $out_sp_id;

        return $this;
    }

    /**
     * Gets aux_prop_id
     *
     * @return string
     */
    public function getAuxPropId()
    {
        return $this->container['aux_prop_id'];
    }

    /**
     * Sets aux_prop_id
     *
     * @param string $aux_prop_id aux_prop_id
     *
     * @return $this
     */
    public function setAuxPropId($aux_prop_id)
    {
        $this->container['aux_prop_id'] = $aux_prop_id;

        return $this;
    }

    /**
     * Gets batch_no
     *
     * @return string
     */
    public function getBatchNo()
    {
        return $this->container['batch_no'];
    }

    /**
     * Sets batch_no
     *
     * @param string $batch_no batch_no
     *
     * @return $this
     */
    public function setBatchNo($batch_no)
    {
        $this->container['batch_no'] = $batch_no;

        return $this;
    }

    /**
     * Gets pro_place
     *
     * @return string
     */
    public function getProPlace()
    {
        return $this->container['pro_place'];
    }

    /**
     * Sets pro_place
     *
     * @param string $pro_place pro_place
     *
     * @return $this
     */
    public function setProPlace($pro_place)
    {
        $this->container['pro_place'] = $pro_place;

        return $this;
    }

    /**
     * Gets pro_reg_no
     *
     * @return string
     */
    public function getProRegNo()
    {
        return $this->container['pro_reg_no'];
    }

    /**
     * Sets pro_reg_no
     *
     * @param string $pro_reg_no pro_reg_no
     *
     * @return $this
     */
    public function setProRegNo($pro_reg_no)
    {
        $this->container['pro_reg_no'] = $pro_reg_no;

        return $this;
    }

    /**
     * Gets pro_license
     *
     * @return string
     */
    public function getProLicense()
    {
        return $this->container['pro_license'];
    }

    /**
     * Sets pro_license
     *
     * @param string $pro_license pro_license
     *
     * @return $this
     */
    public function setProLicense($pro_license)
    {
        $this->container['pro_license'] = $pro_license;

        return $this;
    }

    /**
     * Gets kf_date
     *
     * @return string
     */
    public function getKfDate()
    {
        return $this->container['kf_date'];
    }

    /**
     * Sets kf_date
     *
     * @param string $kf_date kf_date
     *
     * @return $this
     */
    public function setKfDate($kf_date)
    {
        $this->container['kf_date'] = $kf_date;

        return $this;
    }

    /**
     * Gets valid_date
     *
     * @return string
     */
    public function getValidDate()
    {
        return $this->container['valid_date'];
    }

    /**
     * Sets valid_date
     *
     * @param string $valid_date valid_date
     *
     * @return $this
     */
    public function setValidDate($valid_date)
    {
        $this->container['valid_date'] = $valid_date;

        return $this;
    }

    /**
     * Gets kf_period
     *
     * @return int
     */
    public function getKfPeriod()
    {
        return $this->container['kf_period'];
    }

    /**
     * Sets kf_period
     *
     * @param int $kf_period kf_period
     *
     * @return $this
     */
    public function setKfPeriod($kf_period)
    {
        $this->container['kf_period'] = $kf_period;

        return $this;
    }

    /**
     * Gets kf_type
     *
     * @return int
     */
    public function getKfType()
    {
        return $this->container['kf_type'];
    }

    /**
     * Sets kf_type
     *
     * @param int $kf_type kf_type
     *
     * @return $this
     */
    public function setKfType($kf_type)
    {
        $this->container['kf_type'] = $kf_type;

        return $this;
    }

    /**
     * Gets qty
     *
     * @return double
     */
    public function getQty()
    {
        return $this->container['qty'];
    }

    /**
     * Sets qty
     *
     * @param double $qty qty
     *
     * @return $this
     */
    public function setQty($qty)
    {
        $this->container['qty'] = $qty;

        return $this;
    }

    /**
     * Gets unit_id
     *
     * @return string
     */
    public function getUnitId()
    {
        return $this->container['unit_id'];
    }

    /**
     * Sets unit_id
     *
     * @param string $unit_id unit_id
     *
     * @return $this
     */
    public function setUnitId($unit_id)
    {
        $this->container['unit_id'] = $unit_id;

        return $this;
    }

    /**
     * Gets aux_qty
     *
     * @return double
     */
    public function getAuxQty()
    {
        return $this->container['aux_qty'];
    }

    /**
     * Sets aux_qty
     *
     * @param double $aux_qty aux_qty
     *
     * @return $this
     */
    public function setAuxQty($aux_qty)
    {
        $this->container['aux_qty'] = $aux_qty;

        return $this;
    }

    /**
     * Gets aux_unit_id
     *
     * @return string
     */
    public function getAuxUnitId()
    {
        return $this->container['aux_unit_id'];
    }

    /**
     * Sets aux_unit_id
     *
     * @param string $aux_unit_id aux_unit_id
     *
     * @return $this
     */
    public function setAuxUnitId($aux_unit_id)
    {
        $this->container['aux_unit_id'] = $aux_unit_id;

        return $this;
    }

    /**
     * Gets in_price
     *
     * @return double
     */
    public function getInPrice()
    {
        return $this->container['in_price'];
    }

    /**
     * Sets in_price
     *
     * @param double $in_price in_price
     *
     * @return $this
     */
    public function setInPrice($in_price)
    {
        $this->container['in_price'] = $in_price;

        return $this;
    }

    /**
     * Gets discount
     *
     * @return double
     */
    public function getDiscount()
    {
        return $this->container['discount'];
    }

    /**
     * Sets discount
     *
     * @param double $discount discount
     *
     * @return $this
     */
    public function setDiscount($discount)
    {
        $this->container['discount'] = $discount;

        return $this;
    }

    /**
     * Gets comment
     *
     * @return string
     */
    public function getComment()
    {
        return $this->container['comment'];
    }

    /**
     * Sets comment
     *
     * @param string $comment comment
     *
     * @return $this
     */
    public function setComment($comment)
    {
        $this->container['comment'] = $comment;

        return $this;
    }

    /**
     * Gets src_bill_type_id
     *
     * @return string
     */
    public function getSrcBillTypeId()
    {
        return $this->container['src_bill_type_id'];
    }

    /**
     * Sets src_bill_type_id
     *
     * @param string $src_bill_type_id src_bill_type_id
     *
     * @return $this
     */
    public function setSrcBillTypeId($src_bill_type_id)
    {
        $this->container['src_bill_type_id'] = $src_bill_type_id;

        return $this;
    }

    /**
     * Gets src_inter_id
     *
     * @return string
     */
    public function getSrcInterId()
    {
        return $this->container['src_inter_id'];
    }

    /**
     * Sets src_inter_id
     *
     * @param string $src_inter_id src_inter_id
     *
     * @return $this
     */
    public function setSrcInterId($src_inter_id)
    {
        $this->container['src_inter_id'] = $src_inter_id;

        return $this;
    }

    /**
     * Gets src_entry_id
     *
     * @return string
     */
    public function getSrcEntryId()
    {
        return $this->container['src_entry_id'];
    }

    /**
     * Sets src_entry_id
     *
     * @param string $src_entry_id src_entry_id
     *
     * @return $this
     */
    public function setSrcEntryId($src_entry_id)
    {
        $this->container['src_entry_id'] = $src_entry_id;

        return $this;
    }

    /**
     * Gets custom_entity_field
     *
     * @return map[string,string]
     */
    public function getCustomEntityField()
    {
        return $this->container['custom_entity_field'];
    }

    /**
     * Sets custom_entity_field
     *
     * @param map[string,string] $custom_entity_field custom_entity_field
     *
     * @return $this
     */
    public function setCustomEntityField($custom_entity_field)
    {
        $this->container['custom_entity_field'] = $custom_entity_field;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


