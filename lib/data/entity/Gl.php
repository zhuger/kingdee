<?php
/**
 * Gl
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * Gl Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Gl implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Gl';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'start_year' => 'string',
        'start_period' => 'string',
        'current_year' => 'string',
        'current_period' => 'string',
        'account_rule' => 'int',
        'vch_maker_not_single' => 'bool',
        'check_cash_bank_redink' => 'bool',
        'must_transpl' => 'bool',
        'trans_dc_by_balance' => 'bool',
        'vch_checker_single' => 'bool',
        'must_vch_checked' => 'bool',
        'allow_recheck_vch' => 'bool',
        'is_first_close_set' => 'bool',
        'is_check_for_assets' => 'bool',
        'is_check_for_fee' => 'bool',
        'is_check_for_close' => 'bool',
        'is_check_for_other' => 'bool',
        'is_check_for_pa' => 'bool',
        'is_check_for_arap' => 'bool',
        'max_voucher_number' => 'string',
        'max_of_gen_voucher' => 'string',
        'acct_for_arap_recmoney' => 'string',
        'acct_for_sale_income_trans' => 'string',
        'acct_for_arap_recbill' => 'string',
        'acct_for_pending_loss' => 'string',
        'acct_for_virtual_assets_dep' => 'string',
        'acct_for_arap_long_recmoney' => 'string',
        'acct_for_virtual_assets_bal' => 'string',
        'acct_for_arap_pay_money' => 'string',
        'acct_for_fixed_asset_sclear' => 'string',
        'acct_for_long_pending_fee' => 'string',
        'acct_for_employee_pay' => 'string',
        'acct_for_fixed_assets_dep' => 'string',
        'acct_for_currency_amount' => 'string',
        'acct_for_fixed_assets_bal' => 'string',
        'acct_for_fixed_assets_impa' => 'string',
        'acct_for_virtual_assets_impa' => 'string',
        'acct_for_sale_income_fee' => 'string',
        'acct_for_entertain_fee' => 'string',
        'acct_for_assets_inventory' => 'string',
        'acct_for_sale_cost_trans' => 'string',
        'acct_for_added_tax' => 'string',
        'acct_for_advertisement_fee' => 'string',
        'adjust_rate_voucher_gen_type' => 'string',
        'adjust_rate_account' => 'string',
        'adjust_rate_item' => 'string',
        'adjust_rate_voucher_group' => 'string',
        'adjust_rate_account_loss' => 'string',
        'adjust_rate_dcbybal' => 'string',
        'adjust_rate_voucher_explanation' => 'string',
        'adjust_rate_loss_item' => 'string',
        'trans_pl_voucher_gen_type' => 'string',
        'trans_pl_account' => 'string',
        'trans_pl_dc_by_bal' => 'bool',
        'trans_pl_voucher_explanation' => 'string',
        'trans_pl_assist_item' => 'string',
        'trans_pl_account_ago' => 'string',
        'trans_pl_voucher_group' => 'string',
        'trans_pl_advance_assist_item' => 'string',
        'trans_pl_advance_by_assist' => 'bool',
        'trans_pl_account_adjust' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'start_year' => null,
        'start_period' => null,
        'current_year' => null,
        'current_period' => null,
        'account_rule' => 'int32',
        'vch_maker_not_single' => null,
        'check_cash_bank_redink' => null,
        'must_transpl' => null,
        'trans_dc_by_balance' => null,
        'vch_checker_single' => null,
        'must_vch_checked' => null,
        'allow_recheck_vch' => null,
        'is_first_close_set' => null,
        'is_check_for_assets' => null,
        'is_check_for_fee' => null,
        'is_check_for_close' => null,
        'is_check_for_other' => null,
        'is_check_for_pa' => null,
        'is_check_for_arap' => null,
        'max_voucher_number' => null,
        'max_of_gen_voucher' => null,
        'acct_for_arap_recmoney' => null,
        'acct_for_sale_income_trans' => null,
        'acct_for_arap_recbill' => null,
        'acct_for_pending_loss' => null,
        'acct_for_virtual_assets_dep' => null,
        'acct_for_arap_long_recmoney' => null,
        'acct_for_virtual_assets_bal' => null,
        'acct_for_arap_pay_money' => null,
        'acct_for_fixed_asset_sclear' => null,
        'acct_for_long_pending_fee' => null,
        'acct_for_employee_pay' => null,
        'acct_for_fixed_assets_dep' => null,
        'acct_for_currency_amount' => null,
        'acct_for_fixed_assets_bal' => null,
        'acct_for_fixed_assets_impa' => null,
        'acct_for_virtual_assets_impa' => null,
        'acct_for_sale_income_fee' => null,
        'acct_for_entertain_fee' => null,
        'acct_for_assets_inventory' => null,
        'acct_for_sale_cost_trans' => null,
        'acct_for_added_tax' => null,
        'acct_for_advertisement_fee' => null,
        'adjust_rate_voucher_gen_type' => null,
        'adjust_rate_account' => null,
        'adjust_rate_item' => null,
        'adjust_rate_voucher_group' => null,
        'adjust_rate_account_loss' => null,
        'adjust_rate_dcbybal' => null,
        'adjust_rate_voucher_explanation' => null,
        'adjust_rate_loss_item' => null,
        'trans_pl_voucher_gen_type' => null,
        'trans_pl_account' => null,
        'trans_pl_dc_by_bal' => null,
        'trans_pl_voucher_explanation' => null,
        'trans_pl_assist_item' => null,
        'trans_pl_account_ago' => null,
        'trans_pl_voucher_group' => null,
        'trans_pl_advance_assist_item' => null,
        'trans_pl_advance_by_assist' => null,
        'trans_pl_account_adjust' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'start_year' => 'start_year',
        'start_period' => 'start_period',
        'current_year' => 'current_year',
        'current_period' => 'current_period',
        'account_rule' => 'account_rule',
        'vch_maker_not_single' => 'vch_maker_not_single',
        'check_cash_bank_redink' => 'check_cash_bank_redink',
        'must_transpl' => 'must_transpl',
        'trans_dc_by_balance' => 'trans_dc_by_balance',
        'vch_checker_single' => 'vch_checker_single',
        'must_vch_checked' => 'must_vch_checked',
        'allow_recheck_vch' => 'allow_recheck_vch',
        'is_first_close_set' => 'is_first_close_set',
        'is_check_for_assets' => 'is_check_for_assets',
        'is_check_for_fee' => 'is_check_for_fee',
        'is_check_for_close' => 'is_check_for_close',
        'is_check_for_other' => 'is_check_for_other',
        'is_check_for_pa' => 'is_check_for_pa',
        'is_check_for_arap' => 'is_check_for_arap',
        'max_voucher_number' => 'max_voucher_number',
        'max_of_gen_voucher' => 'max_of_gen_voucher',
        'acct_for_arap_recmoney' => 'acct_for_arap_recmoney',
        'acct_for_sale_income_trans' => 'acct_for_sale_income_trans',
        'acct_for_arap_recbill' => 'acct_for_arap_recbill',
        'acct_for_pending_loss' => 'acct_for_pending_loss',
        'acct_for_virtual_assets_dep' => 'acct_for_virtual_assets_dep',
        'acct_for_arap_long_recmoney' => 'acct_for_arap_long_recmoney',
        'acct_for_virtual_assets_bal' => 'acct_for_virtual_assets_bal',
        'acct_for_arap_pay_money' => 'acct_for_arap_pay_money',
        'acct_for_fixed_asset_sclear' => 'acct_for_fixed_asset_sclear',
        'acct_for_long_pending_fee' => 'acct_for_long_pending_fee',
        'acct_for_employee_pay' => 'acct_for_employee_pay',
        'acct_for_fixed_assets_dep' => 'acct_for_fixed_assets_dep',
        'acct_for_currency_amount' => 'acct_for_currency_amount',
        'acct_for_fixed_assets_bal' => 'acct_for_fixed_assets_bal',
        'acct_for_fixed_assets_impa' => 'acct_for_fixed_assets_impa',
        'acct_for_virtual_assets_impa' => 'acct_for_virtual_assets_impa',
        'acct_for_sale_income_fee' => 'acct_for_sale_income_fee',
        'acct_for_entertain_fee' => 'acct_for_entertain_fee',
        'acct_for_assets_inventory' => 'acct_for_assets_inventory',
        'acct_for_sale_cost_trans' => 'acct_for_sale_cost_trans',
        'acct_for_added_tax' => 'acct_for_added_tax',
        'acct_for_advertisement_fee' => 'acct_for_advertisement_fee',
        'adjust_rate_voucher_gen_type' => 'adjust_rate_voucher_gen_type',
        'adjust_rate_account' => 'adjust_rate_account',
        'adjust_rate_item' => 'adjust_rate_item',
        'adjust_rate_voucher_group' => 'adjust_rate_voucher_group',
        'adjust_rate_account_loss' => 'adjust_rate_account_loss',
        'adjust_rate_dcbybal' => 'adjust_rate_dcbybal',
        'adjust_rate_voucher_explanation' => 'adjust_rate_voucher_explanation',
        'adjust_rate_loss_item' => 'adjust_rate_loss_item',
        'trans_pl_voucher_gen_type' => 'trans_pl_voucher_gen_type',
        'trans_pl_account' => 'trans_pl_account',
        'trans_pl_dc_by_bal' => 'trans_pl_dc_by_bal',
        'trans_pl_voucher_explanation' => 'trans_pl_voucher_explanation',
        'trans_pl_assist_item' => 'trans_pl_assist_item',
        'trans_pl_account_ago' => 'trans_pl_account_ago',
        'trans_pl_voucher_group' => 'trans_pl_voucher_group',
        'trans_pl_advance_assist_item' => 'trans_pl_advance_assist_item',
        'trans_pl_advance_by_assist' => 'trans_pl_advance_by_assist',
        'trans_pl_account_adjust' => 'trans_pl_account_adjust'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'start_year' => 'setStartYear',
        'start_period' => 'setStartPeriod',
        'current_year' => 'setCurrentYear',
        'current_period' => 'setCurrentPeriod',
        'account_rule' => 'setAccountRule',
        'vch_maker_not_single' => 'setVchMakerNotSingle',
        'check_cash_bank_redink' => 'setCheckCashBankRedink',
        'must_transpl' => 'setMustTranspl',
        'trans_dc_by_balance' => 'setTransDcByBalance',
        'vch_checker_single' => 'setVchCheckerSingle',
        'must_vch_checked' => 'setMustVchChecked',
        'allow_recheck_vch' => 'setAllowRecheckVch',
        'is_first_close_set' => 'setIsFirstCloseSet',
        'is_check_for_assets' => 'setIsCheckForAssets',
        'is_check_for_fee' => 'setIsCheckForFee',
        'is_check_for_close' => 'setIsCheckForClose',
        'is_check_for_other' => 'setIsCheckForOther',
        'is_check_for_pa' => 'setIsCheckForPa',
        'is_check_for_arap' => 'setIsCheckForArap',
        'max_voucher_number' => 'setMaxVoucherNumber',
        'max_of_gen_voucher' => 'setMaxOfGenVoucher',
        'acct_for_arap_recmoney' => 'setAcctForArapRecmoney',
        'acct_for_sale_income_trans' => 'setAcctForSaleIncomeTrans',
        'acct_for_arap_recbill' => 'setAcctForArapRecbill',
        'acct_for_pending_loss' => 'setAcctForPendingLoss',
        'acct_for_virtual_assets_dep' => 'setAcctForVirtualAssetsDep',
        'acct_for_arap_long_recmoney' => 'setAcctForArapLongRecmoney',
        'acct_for_virtual_assets_bal' => 'setAcctForVirtualAssetsBal',
        'acct_for_arap_pay_money' => 'setAcctForArapPayMoney',
        'acct_for_fixed_asset_sclear' => 'setAcctForFixedAssetSclear',
        'acct_for_long_pending_fee' => 'setAcctForLongPendingFee',
        'acct_for_employee_pay' => 'setAcctForEmployeePay',
        'acct_for_fixed_assets_dep' => 'setAcctForFixedAssetsDep',
        'acct_for_currency_amount' => 'setAcctForCurrencyAmount',
        'acct_for_fixed_assets_bal' => 'setAcctForFixedAssetsBal',
        'acct_for_fixed_assets_impa' => 'setAcctForFixedAssetsImpa',
        'acct_for_virtual_assets_impa' => 'setAcctForVirtualAssetsImpa',
        'acct_for_sale_income_fee' => 'setAcctForSaleIncomeFee',
        'acct_for_entertain_fee' => 'setAcctForEntertainFee',
        'acct_for_assets_inventory' => 'setAcctForAssetsInventory',
        'acct_for_sale_cost_trans' => 'setAcctForSaleCostTrans',
        'acct_for_added_tax' => 'setAcctForAddedTax',
        'acct_for_advertisement_fee' => 'setAcctForAdvertisementFee',
        'adjust_rate_voucher_gen_type' => 'setAdjustRateVoucherGenType',
        'adjust_rate_account' => 'setAdjustRateAccount',
        'adjust_rate_item' => 'setAdjustRateItem',
        'adjust_rate_voucher_group' => 'setAdjustRateVoucherGroup',
        'adjust_rate_account_loss' => 'setAdjustRateAccountLoss',
        'adjust_rate_dcbybal' => 'setAdjustRateDcbybal',
        'adjust_rate_voucher_explanation' => 'setAdjustRateVoucherExplanation',
        'adjust_rate_loss_item' => 'setAdjustRateLossItem',
        'trans_pl_voucher_gen_type' => 'setTransPlVoucherGenType',
        'trans_pl_account' => 'setTransPlAccount',
        'trans_pl_dc_by_bal' => 'setTransPlDcByBal',
        'trans_pl_voucher_explanation' => 'setTransPlVoucherExplanation',
        'trans_pl_assist_item' => 'setTransPlAssistItem',
        'trans_pl_account_ago' => 'setTransPlAccountAgo',
        'trans_pl_voucher_group' => 'setTransPlVoucherGroup',
        'trans_pl_advance_assist_item' => 'setTransPlAdvanceAssistItem',
        'trans_pl_advance_by_assist' => 'setTransPlAdvanceByAssist',
        'trans_pl_account_adjust' => 'setTransPlAccountAdjust'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'start_year' => 'getStartYear',
        'start_period' => 'getStartPeriod',
        'current_year' => 'getCurrentYear',
        'current_period' => 'getCurrentPeriod',
        'account_rule' => 'getAccountRule',
        'vch_maker_not_single' => 'getVchMakerNotSingle',
        'check_cash_bank_redink' => 'getCheckCashBankRedink',
        'must_transpl' => 'getMustTranspl',
        'trans_dc_by_balance' => 'getTransDcByBalance',
        'vch_checker_single' => 'getVchCheckerSingle',
        'must_vch_checked' => 'getMustVchChecked',
        'allow_recheck_vch' => 'getAllowRecheckVch',
        'is_first_close_set' => 'getIsFirstCloseSet',
        'is_check_for_assets' => 'getIsCheckForAssets',
        'is_check_for_fee' => 'getIsCheckForFee',
        'is_check_for_close' => 'getIsCheckForClose',
        'is_check_for_other' => 'getIsCheckForOther',
        'is_check_for_pa' => 'getIsCheckForPa',
        'is_check_for_arap' => 'getIsCheckForArap',
        'max_voucher_number' => 'getMaxVoucherNumber',
        'max_of_gen_voucher' => 'getMaxOfGenVoucher',
        'acct_for_arap_recmoney' => 'getAcctForArapRecmoney',
        'acct_for_sale_income_trans' => 'getAcctForSaleIncomeTrans',
        'acct_for_arap_recbill' => 'getAcctForArapRecbill',
        'acct_for_pending_loss' => 'getAcctForPendingLoss',
        'acct_for_virtual_assets_dep' => 'getAcctForVirtualAssetsDep',
        'acct_for_arap_long_recmoney' => 'getAcctForArapLongRecmoney',
        'acct_for_virtual_assets_bal' => 'getAcctForVirtualAssetsBal',
        'acct_for_arap_pay_money' => 'getAcctForArapPayMoney',
        'acct_for_fixed_asset_sclear' => 'getAcctForFixedAssetSclear',
        'acct_for_long_pending_fee' => 'getAcctForLongPendingFee',
        'acct_for_employee_pay' => 'getAcctForEmployeePay',
        'acct_for_fixed_assets_dep' => 'getAcctForFixedAssetsDep',
        'acct_for_currency_amount' => 'getAcctForCurrencyAmount',
        'acct_for_fixed_assets_bal' => 'getAcctForFixedAssetsBal',
        'acct_for_fixed_assets_impa' => 'getAcctForFixedAssetsImpa',
        'acct_for_virtual_assets_impa' => 'getAcctForVirtualAssetsImpa',
        'acct_for_sale_income_fee' => 'getAcctForSaleIncomeFee',
        'acct_for_entertain_fee' => 'getAcctForEntertainFee',
        'acct_for_assets_inventory' => 'getAcctForAssetsInventory',
        'acct_for_sale_cost_trans' => 'getAcctForSaleCostTrans',
        'acct_for_added_tax' => 'getAcctForAddedTax',
        'acct_for_advertisement_fee' => 'getAcctForAdvertisementFee',
        'adjust_rate_voucher_gen_type' => 'getAdjustRateVoucherGenType',
        'adjust_rate_account' => 'getAdjustRateAccount',
        'adjust_rate_item' => 'getAdjustRateItem',
        'adjust_rate_voucher_group' => 'getAdjustRateVoucherGroup',
        'adjust_rate_account_loss' => 'getAdjustRateAccountLoss',
        'adjust_rate_dcbybal' => 'getAdjustRateDcbybal',
        'adjust_rate_voucher_explanation' => 'getAdjustRateVoucherExplanation',
        'adjust_rate_loss_item' => 'getAdjustRateLossItem',
        'trans_pl_voucher_gen_type' => 'getTransPlVoucherGenType',
        'trans_pl_account' => 'getTransPlAccount',
        'trans_pl_dc_by_bal' => 'getTransPlDcByBal',
        'trans_pl_voucher_explanation' => 'getTransPlVoucherExplanation',
        'trans_pl_assist_item' => 'getTransPlAssistItem',
        'trans_pl_account_ago' => 'getTransPlAccountAgo',
        'trans_pl_voucher_group' => 'getTransPlVoucherGroup',
        'trans_pl_advance_assist_item' => 'getTransPlAdvanceAssistItem',
        'trans_pl_advance_by_assist' => 'getTransPlAdvanceByAssist',
        'trans_pl_account_adjust' => 'getTransPlAccountAdjust'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['start_year'] = isset($data['start_year']) ? $data['start_year'] : null;
        $this->container['start_period'] = isset($data['start_period']) ? $data['start_period'] : null;
        $this->container['current_year'] = isset($data['current_year']) ? $data['current_year'] : null;
        $this->container['current_period'] = isset($data['current_period']) ? $data['current_period'] : null;
        $this->container['account_rule'] = isset($data['account_rule']) ? $data['account_rule'] : null;
        $this->container['vch_maker_not_single'] = isset($data['vch_maker_not_single']) ? $data['vch_maker_not_single'] : null;
        $this->container['check_cash_bank_redink'] = isset($data['check_cash_bank_redink']) ? $data['check_cash_bank_redink'] : null;
        $this->container['must_transpl'] = isset($data['must_transpl']) ? $data['must_transpl'] : null;
        $this->container['trans_dc_by_balance'] = isset($data['trans_dc_by_balance']) ? $data['trans_dc_by_balance'] : null;
        $this->container['vch_checker_single'] = isset($data['vch_checker_single']) ? $data['vch_checker_single'] : null;
        $this->container['must_vch_checked'] = isset($data['must_vch_checked']) ? $data['must_vch_checked'] : null;
        $this->container['allow_recheck_vch'] = isset($data['allow_recheck_vch']) ? $data['allow_recheck_vch'] : null;
        $this->container['is_first_close_set'] = isset($data['is_first_close_set']) ? $data['is_first_close_set'] : null;
        $this->container['is_check_for_assets'] = isset($data['is_check_for_assets']) ? $data['is_check_for_assets'] : null;
        $this->container['is_check_for_fee'] = isset($data['is_check_for_fee']) ? $data['is_check_for_fee'] : null;
        $this->container['is_check_for_close'] = isset($data['is_check_for_close']) ? $data['is_check_for_close'] : null;
        $this->container['is_check_for_other'] = isset($data['is_check_for_other']) ? $data['is_check_for_other'] : null;
        $this->container['is_check_for_pa'] = isset($data['is_check_for_pa']) ? $data['is_check_for_pa'] : null;
        $this->container['is_check_for_arap'] = isset($data['is_check_for_arap']) ? $data['is_check_for_arap'] : null;
        $this->container['max_voucher_number'] = isset($data['max_voucher_number']) ? $data['max_voucher_number'] : null;
        $this->container['max_of_gen_voucher'] = isset($data['max_of_gen_voucher']) ? $data['max_of_gen_voucher'] : null;
        $this->container['acct_for_arap_recmoney'] = isset($data['acct_for_arap_recmoney']) ? $data['acct_for_arap_recmoney'] : null;
        $this->container['acct_for_sale_income_trans'] = isset($data['acct_for_sale_income_trans']) ? $data['acct_for_sale_income_trans'] : null;
        $this->container['acct_for_arap_recbill'] = isset($data['acct_for_arap_recbill']) ? $data['acct_for_arap_recbill'] : null;
        $this->container['acct_for_pending_loss'] = isset($data['acct_for_pending_loss']) ? $data['acct_for_pending_loss'] : null;
        $this->container['acct_for_virtual_assets_dep'] = isset($data['acct_for_virtual_assets_dep']) ? $data['acct_for_virtual_assets_dep'] : null;
        $this->container['acct_for_arap_long_recmoney'] = isset($data['acct_for_arap_long_recmoney']) ? $data['acct_for_arap_long_recmoney'] : null;
        $this->container['acct_for_virtual_assets_bal'] = isset($data['acct_for_virtual_assets_bal']) ? $data['acct_for_virtual_assets_bal'] : null;
        $this->container['acct_for_arap_pay_money'] = isset($data['acct_for_arap_pay_money']) ? $data['acct_for_arap_pay_money'] : null;
        $this->container['acct_for_fixed_asset_sclear'] = isset($data['acct_for_fixed_asset_sclear']) ? $data['acct_for_fixed_asset_sclear'] : null;
        $this->container['acct_for_long_pending_fee'] = isset($data['acct_for_long_pending_fee']) ? $data['acct_for_long_pending_fee'] : null;
        $this->container['acct_for_employee_pay'] = isset($data['acct_for_employee_pay']) ? $data['acct_for_employee_pay'] : null;
        $this->container['acct_for_fixed_assets_dep'] = isset($data['acct_for_fixed_assets_dep']) ? $data['acct_for_fixed_assets_dep'] : null;
        $this->container['acct_for_currency_amount'] = isset($data['acct_for_currency_amount']) ? $data['acct_for_currency_amount'] : null;
        $this->container['acct_for_fixed_assets_bal'] = isset($data['acct_for_fixed_assets_bal']) ? $data['acct_for_fixed_assets_bal'] : null;
        $this->container['acct_for_fixed_assets_impa'] = isset($data['acct_for_fixed_assets_impa']) ? $data['acct_for_fixed_assets_impa'] : null;
        $this->container['acct_for_virtual_assets_impa'] = isset($data['acct_for_virtual_assets_impa']) ? $data['acct_for_virtual_assets_impa'] : null;
        $this->container['acct_for_sale_income_fee'] = isset($data['acct_for_sale_income_fee']) ? $data['acct_for_sale_income_fee'] : null;
        $this->container['acct_for_entertain_fee'] = isset($data['acct_for_entertain_fee']) ? $data['acct_for_entertain_fee'] : null;
        $this->container['acct_for_assets_inventory'] = isset($data['acct_for_assets_inventory']) ? $data['acct_for_assets_inventory'] : null;
        $this->container['acct_for_sale_cost_trans'] = isset($data['acct_for_sale_cost_trans']) ? $data['acct_for_sale_cost_trans'] : null;
        $this->container['acct_for_added_tax'] = isset($data['acct_for_added_tax']) ? $data['acct_for_added_tax'] : null;
        $this->container['acct_for_advertisement_fee'] = isset($data['acct_for_advertisement_fee']) ? $data['acct_for_advertisement_fee'] : null;
        $this->container['adjust_rate_voucher_gen_type'] = isset($data['adjust_rate_voucher_gen_type']) ? $data['adjust_rate_voucher_gen_type'] : null;
        $this->container['adjust_rate_account'] = isset($data['adjust_rate_account']) ? $data['adjust_rate_account'] : null;
        $this->container['adjust_rate_item'] = isset($data['adjust_rate_item']) ? $data['adjust_rate_item'] : null;
        $this->container['adjust_rate_voucher_group'] = isset($data['adjust_rate_voucher_group']) ? $data['adjust_rate_voucher_group'] : null;
        $this->container['adjust_rate_account_loss'] = isset($data['adjust_rate_account_loss']) ? $data['adjust_rate_account_loss'] : null;
        $this->container['adjust_rate_dcbybal'] = isset($data['adjust_rate_dcbybal']) ? $data['adjust_rate_dcbybal'] : null;
        $this->container['adjust_rate_voucher_explanation'] = isset($data['adjust_rate_voucher_explanation']) ? $data['adjust_rate_voucher_explanation'] : null;
        $this->container['adjust_rate_loss_item'] = isset($data['adjust_rate_loss_item']) ? $data['adjust_rate_loss_item'] : null;
        $this->container['trans_pl_voucher_gen_type'] = isset($data['trans_pl_voucher_gen_type']) ? $data['trans_pl_voucher_gen_type'] : null;
        $this->container['trans_pl_account'] = isset($data['trans_pl_account']) ? $data['trans_pl_account'] : null;
        $this->container['trans_pl_dc_by_bal'] = isset($data['trans_pl_dc_by_bal']) ? $data['trans_pl_dc_by_bal'] : null;
        $this->container['trans_pl_voucher_explanation'] = isset($data['trans_pl_voucher_explanation']) ? $data['trans_pl_voucher_explanation'] : null;
        $this->container['trans_pl_assist_item'] = isset($data['trans_pl_assist_item']) ? $data['trans_pl_assist_item'] : null;
        $this->container['trans_pl_account_ago'] = isset($data['trans_pl_account_ago']) ? $data['trans_pl_account_ago'] : null;
        $this->container['trans_pl_voucher_group'] = isset($data['trans_pl_voucher_group']) ? $data['trans_pl_voucher_group'] : null;
        $this->container['trans_pl_advance_assist_item'] = isset($data['trans_pl_advance_assist_item']) ? $data['trans_pl_advance_assist_item'] : null;
        $this->container['trans_pl_advance_by_assist'] = isset($data['trans_pl_advance_by_assist']) ? $data['trans_pl_advance_by_assist'] : null;
        $this->container['trans_pl_account_adjust'] = isset($data['trans_pl_account_adjust']) ? $data['trans_pl_account_adjust'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets start_year
     *
     * @return string
     */
    public function getStartYear()
    {
        return $this->container['start_year'];
    }

    /**
     * Sets start_year
     *
     * @param string $start_year start_year
     *
     * @return $this
     */
    public function setStartYear($start_year)
    {
        $this->container['start_year'] = $start_year;

        return $this;
    }

    /**
     * Gets start_period
     *
     * @return string
     */
    public function getStartPeriod()
    {
        return $this->container['start_period'];
    }

    /**
     * Sets start_period
     *
     * @param string $start_period start_period
     *
     * @return $this
     */
    public function setStartPeriod($start_period)
    {
        $this->container['start_period'] = $start_period;

        return $this;
    }

    /**
     * Gets current_year
     *
     * @return string
     */
    public function getCurrentYear()
    {
        return $this->container['current_year'];
    }

    /**
     * Sets current_year
     *
     * @param string $current_year current_year
     *
     * @return $this
     */
    public function setCurrentYear($current_year)
    {
        $this->container['current_year'] = $current_year;

        return $this;
    }

    /**
     * Gets current_period
     *
     * @return string
     */
    public function getCurrentPeriod()
    {
        return $this->container['current_period'];
    }

    /**
     * Sets current_period
     *
     * @param string $current_period current_period
     *
     * @return $this
     */
    public function setCurrentPeriod($current_period)
    {
        $this->container['current_period'] = $current_period;

        return $this;
    }

    /**
     * Gets account_rule
     *
     * @return int
     */
    public function getAccountRule()
    {
        return $this->container['account_rule'];
    }

    /**
     * Sets account_rule
     *
     * @param int $account_rule account_rule
     *
     * @return $this
     */
    public function setAccountRule($account_rule)
    {
        $this->container['account_rule'] = $account_rule;

        return $this;
    }

    /**
     * Gets vch_maker_not_single
     *
     * @return bool
     */
    public function getVchMakerNotSingle()
    {
        return $this->container['vch_maker_not_single'];
    }

    /**
     * Sets vch_maker_not_single
     *
     * @param bool $vch_maker_not_single vch_maker_not_single
     *
     * @return $this
     */
    public function setVchMakerNotSingle($vch_maker_not_single)
    {
        $this->container['vch_maker_not_single'] = $vch_maker_not_single;

        return $this;
    }

    /**
     * Gets check_cash_bank_redink
     *
     * @return bool
     */
    public function getCheckCashBankRedink()
    {
        return $this->container['check_cash_bank_redink'];
    }

    /**
     * Sets check_cash_bank_redink
     *
     * @param bool $check_cash_bank_redink check_cash_bank_redink
     *
     * @return $this
     */
    public function setCheckCashBankRedink($check_cash_bank_redink)
    {
        $this->container['check_cash_bank_redink'] = $check_cash_bank_redink;

        return $this;
    }

    /**
     * Gets must_transpl
     *
     * @return bool
     */
    public function getMustTranspl()
    {
        return $this->container['must_transpl'];
    }

    /**
     * Sets must_transpl
     *
     * @param bool $must_transpl must_transpl
     *
     * @return $this
     */
    public function setMustTranspl($must_transpl)
    {
        $this->container['must_transpl'] = $must_transpl;

        return $this;
    }

    /**
     * Gets trans_dc_by_balance
     *
     * @return bool
     */
    public function getTransDcByBalance()
    {
        return $this->container['trans_dc_by_balance'];
    }

    /**
     * Sets trans_dc_by_balance
     *
     * @param bool $trans_dc_by_balance trans_dc_by_balance
     *
     * @return $this
     */
    public function setTransDcByBalance($trans_dc_by_balance)
    {
        $this->container['trans_dc_by_balance'] = $trans_dc_by_balance;

        return $this;
    }

    /**
     * Gets vch_checker_single
     *
     * @return bool
     */
    public function getVchCheckerSingle()
    {
        return $this->container['vch_checker_single'];
    }

    /**
     * Sets vch_checker_single
     *
     * @param bool $vch_checker_single vch_checker_single
     *
     * @return $this
     */
    public function setVchCheckerSingle($vch_checker_single)
    {
        $this->container['vch_checker_single'] = $vch_checker_single;

        return $this;
    }

    /**
     * Gets must_vch_checked
     *
     * @return bool
     */
    public function getMustVchChecked()
    {
        return $this->container['must_vch_checked'];
    }

    /**
     * Sets must_vch_checked
     *
     * @param bool $must_vch_checked must_vch_checked
     *
     * @return $this
     */
    public function setMustVchChecked($must_vch_checked)
    {
        $this->container['must_vch_checked'] = $must_vch_checked;

        return $this;
    }

    /**
     * Gets allow_recheck_vch
     *
     * @return bool
     */
    public function getAllowRecheckVch()
    {
        return $this->container['allow_recheck_vch'];
    }

    /**
     * Sets allow_recheck_vch
     *
     * @param bool $allow_recheck_vch allow_recheck_vch
     *
     * @return $this
     */
    public function setAllowRecheckVch($allow_recheck_vch)
    {
        $this->container['allow_recheck_vch'] = $allow_recheck_vch;

        return $this;
    }

    /**
     * Gets is_first_close_set
     *
     * @return bool
     */
    public function getIsFirstCloseSet()
    {
        return $this->container['is_first_close_set'];
    }

    /**
     * Sets is_first_close_set
     *
     * @param bool $is_first_close_set is_first_close_set
     *
     * @return $this
     */
    public function setIsFirstCloseSet($is_first_close_set)
    {
        $this->container['is_first_close_set'] = $is_first_close_set;

        return $this;
    }

    /**
     * Gets is_check_for_assets
     *
     * @return bool
     */
    public function getIsCheckForAssets()
    {
        return $this->container['is_check_for_assets'];
    }

    /**
     * Sets is_check_for_assets
     *
     * @param bool $is_check_for_assets is_check_for_assets
     *
     * @return $this
     */
    public function setIsCheckForAssets($is_check_for_assets)
    {
        $this->container['is_check_for_assets'] = $is_check_for_assets;

        return $this;
    }

    /**
     * Gets is_check_for_fee
     *
     * @return bool
     */
    public function getIsCheckForFee()
    {
        return $this->container['is_check_for_fee'];
    }

    /**
     * Sets is_check_for_fee
     *
     * @param bool $is_check_for_fee is_check_for_fee
     *
     * @return $this
     */
    public function setIsCheckForFee($is_check_for_fee)
    {
        $this->container['is_check_for_fee'] = $is_check_for_fee;

        return $this;
    }

    /**
     * Gets is_check_for_close
     *
     * @return bool
     */
    public function getIsCheckForClose()
    {
        return $this->container['is_check_for_close'];
    }

    /**
     * Sets is_check_for_close
     *
     * @param bool $is_check_for_close is_check_for_close
     *
     * @return $this
     */
    public function setIsCheckForClose($is_check_for_close)
    {
        $this->container['is_check_for_close'] = $is_check_for_close;

        return $this;
    }

    /**
     * Gets is_check_for_other
     *
     * @return bool
     */
    public function getIsCheckForOther()
    {
        return $this->container['is_check_for_other'];
    }

    /**
     * Sets is_check_for_other
     *
     * @param bool $is_check_for_other is_check_for_other
     *
     * @return $this
     */
    public function setIsCheckForOther($is_check_for_other)
    {
        $this->container['is_check_for_other'] = $is_check_for_other;

        return $this;
    }

    /**
     * Gets is_check_for_pa
     *
     * @return bool
     */
    public function getIsCheckForPa()
    {
        return $this->container['is_check_for_pa'];
    }

    /**
     * Sets is_check_for_pa
     *
     * @param bool $is_check_for_pa is_check_for_pa
     *
     * @return $this
     */
    public function setIsCheckForPa($is_check_for_pa)
    {
        $this->container['is_check_for_pa'] = $is_check_for_pa;

        return $this;
    }

    /**
     * Gets is_check_for_arap
     *
     * @return bool
     */
    public function getIsCheckForArap()
    {
        return $this->container['is_check_for_arap'];
    }

    /**
     * Sets is_check_for_arap
     *
     * @param bool $is_check_for_arap is_check_for_arap
     *
     * @return $this
     */
    public function setIsCheckForArap($is_check_for_arap)
    {
        $this->container['is_check_for_arap'] = $is_check_for_arap;

        return $this;
    }

    /**
     * Gets max_voucher_number
     *
     * @return string
     */
    public function getMaxVoucherNumber()
    {
        return $this->container['max_voucher_number'];
    }

    /**
     * Sets max_voucher_number
     *
     * @param string $max_voucher_number max_voucher_number
     *
     * @return $this
     */
    public function setMaxVoucherNumber($max_voucher_number)
    {
        $this->container['max_voucher_number'] = $max_voucher_number;

        return $this;
    }

    /**
     * Gets max_of_gen_voucher
     *
     * @return string
     */
    public function getMaxOfGenVoucher()
    {
        return $this->container['max_of_gen_voucher'];
    }

    /**
     * Sets max_of_gen_voucher
     *
     * @param string $max_of_gen_voucher max_of_gen_voucher
     *
     * @return $this
     */
    public function setMaxOfGenVoucher($max_of_gen_voucher)
    {
        $this->container['max_of_gen_voucher'] = $max_of_gen_voucher;

        return $this;
    }

    /**
     * Gets acct_for_arap_recmoney
     *
     * @return string
     */
    public function getAcctForArapRecmoney()
    {
        return $this->container['acct_for_arap_recmoney'];
    }

    /**
     * Sets acct_for_arap_recmoney
     *
     * @param string $acct_for_arap_recmoney acct_for_arap_recmoney
     *
     * @return $this
     */
    public function setAcctForArapRecmoney($acct_for_arap_recmoney)
    {
        $this->container['acct_for_arap_recmoney'] = $acct_for_arap_recmoney;

        return $this;
    }

    /**
     * Gets acct_for_sale_income_trans
     *
     * @return string
     */
    public function getAcctForSaleIncomeTrans()
    {
        return $this->container['acct_for_sale_income_trans'];
    }

    /**
     * Sets acct_for_sale_income_trans
     *
     * @param string $acct_for_sale_income_trans acct_for_sale_income_trans
     *
     * @return $this
     */
    public function setAcctForSaleIncomeTrans($acct_for_sale_income_trans)
    {
        $this->container['acct_for_sale_income_trans'] = $acct_for_sale_income_trans;

        return $this;
    }

    /**
     * Gets acct_for_arap_recbill
     *
     * @return string
     */
    public function getAcctForArapRecbill()
    {
        return $this->container['acct_for_arap_recbill'];
    }

    /**
     * Sets acct_for_arap_recbill
     *
     * @param string $acct_for_arap_recbill acct_for_arap_recbill
     *
     * @return $this
     */
    public function setAcctForArapRecbill($acct_for_arap_recbill)
    {
        $this->container['acct_for_arap_recbill'] = $acct_for_arap_recbill;

        return $this;
    }

    /**
     * Gets acct_for_pending_loss
     *
     * @return string
     */
    public function getAcctForPendingLoss()
    {
        return $this->container['acct_for_pending_loss'];
    }

    /**
     * Sets acct_for_pending_loss
     *
     * @param string $acct_for_pending_loss acct_for_pending_loss
     *
     * @return $this
     */
    public function setAcctForPendingLoss($acct_for_pending_loss)
    {
        $this->container['acct_for_pending_loss'] = $acct_for_pending_loss;

        return $this;
    }

    /**
     * Gets acct_for_virtual_assets_dep
     *
     * @return string
     */
    public function getAcctForVirtualAssetsDep()
    {
        return $this->container['acct_for_virtual_assets_dep'];
    }

    /**
     * Sets acct_for_virtual_assets_dep
     *
     * @param string $acct_for_virtual_assets_dep acct_for_virtual_assets_dep
     *
     * @return $this
     */
    public function setAcctForVirtualAssetsDep($acct_for_virtual_assets_dep)
    {
        $this->container['acct_for_virtual_assets_dep'] = $acct_for_virtual_assets_dep;

        return $this;
    }

    /**
     * Gets acct_for_arap_long_recmoney
     *
     * @return string
     */
    public function getAcctForArapLongRecmoney()
    {
        return $this->container['acct_for_arap_long_recmoney'];
    }

    /**
     * Sets acct_for_arap_long_recmoney
     *
     * @param string $acct_for_arap_long_recmoney acct_for_arap_long_recmoney
     *
     * @return $this
     */
    public function setAcctForArapLongRecmoney($acct_for_arap_long_recmoney)
    {
        $this->container['acct_for_arap_long_recmoney'] = $acct_for_arap_long_recmoney;

        return $this;
    }

    /**
     * Gets acct_for_virtual_assets_bal
     *
     * @return string
     */
    public function getAcctForVirtualAssetsBal()
    {
        return $this->container['acct_for_virtual_assets_bal'];
    }

    /**
     * Sets acct_for_virtual_assets_bal
     *
     * @param string $acct_for_virtual_assets_bal acct_for_virtual_assets_bal
     *
     * @return $this
     */
    public function setAcctForVirtualAssetsBal($acct_for_virtual_assets_bal)
    {
        $this->container['acct_for_virtual_assets_bal'] = $acct_for_virtual_assets_bal;

        return $this;
    }

    /**
     * Gets acct_for_arap_pay_money
     *
     * @return string
     */
    public function getAcctForArapPayMoney()
    {
        return $this->container['acct_for_arap_pay_money'];
    }

    /**
     * Sets acct_for_arap_pay_money
     *
     * @param string $acct_for_arap_pay_money acct_for_arap_pay_money
     *
     * @return $this
     */
    public function setAcctForArapPayMoney($acct_for_arap_pay_money)
    {
        $this->container['acct_for_arap_pay_money'] = $acct_for_arap_pay_money;

        return $this;
    }

    /**
     * Gets acct_for_fixed_asset_sclear
     *
     * @return string
     */
    public function getAcctForFixedAssetSclear()
    {
        return $this->container['acct_for_fixed_asset_sclear'];
    }

    /**
     * Sets acct_for_fixed_asset_sclear
     *
     * @param string $acct_for_fixed_asset_sclear acct_for_fixed_asset_sclear
     *
     * @return $this
     */
    public function setAcctForFixedAssetSclear($acct_for_fixed_asset_sclear)
    {
        $this->container['acct_for_fixed_asset_sclear'] = $acct_for_fixed_asset_sclear;

        return $this;
    }

    /**
     * Gets acct_for_long_pending_fee
     *
     * @return string
     */
    public function getAcctForLongPendingFee()
    {
        return $this->container['acct_for_long_pending_fee'];
    }

    /**
     * Sets acct_for_long_pending_fee
     *
     * @param string $acct_for_long_pending_fee acct_for_long_pending_fee
     *
     * @return $this
     */
    public function setAcctForLongPendingFee($acct_for_long_pending_fee)
    {
        $this->container['acct_for_long_pending_fee'] = $acct_for_long_pending_fee;

        return $this;
    }

    /**
     * Gets acct_for_employee_pay
     *
     * @return string
     */
    public function getAcctForEmployeePay()
    {
        return $this->container['acct_for_employee_pay'];
    }

    /**
     * Sets acct_for_employee_pay
     *
     * @param string $acct_for_employee_pay acct_for_employee_pay
     *
     * @return $this
     */
    public function setAcctForEmployeePay($acct_for_employee_pay)
    {
        $this->container['acct_for_employee_pay'] = $acct_for_employee_pay;

        return $this;
    }

    /**
     * Gets acct_for_fixed_assets_dep
     *
     * @return string
     */
    public function getAcctForFixedAssetsDep()
    {
        return $this->container['acct_for_fixed_assets_dep'];
    }

    /**
     * Sets acct_for_fixed_assets_dep
     *
     * @param string $acct_for_fixed_assets_dep acct_for_fixed_assets_dep
     *
     * @return $this
     */
    public function setAcctForFixedAssetsDep($acct_for_fixed_assets_dep)
    {
        $this->container['acct_for_fixed_assets_dep'] = $acct_for_fixed_assets_dep;

        return $this;
    }

    /**
     * Gets acct_for_currency_amount
     *
     * @return string
     */
    public function getAcctForCurrencyAmount()
    {
        return $this->container['acct_for_currency_amount'];
    }

    /**
     * Sets acct_for_currency_amount
     *
     * @param string $acct_for_currency_amount acct_for_currency_amount
     *
     * @return $this
     */
    public function setAcctForCurrencyAmount($acct_for_currency_amount)
    {
        $this->container['acct_for_currency_amount'] = $acct_for_currency_amount;

        return $this;
    }

    /**
     * Gets acct_for_fixed_assets_bal
     *
     * @return string
     */
    public function getAcctForFixedAssetsBal()
    {
        return $this->container['acct_for_fixed_assets_bal'];
    }

    /**
     * Sets acct_for_fixed_assets_bal
     *
     * @param string $acct_for_fixed_assets_bal acct_for_fixed_assets_bal
     *
     * @return $this
     */
    public function setAcctForFixedAssetsBal($acct_for_fixed_assets_bal)
    {
        $this->container['acct_for_fixed_assets_bal'] = $acct_for_fixed_assets_bal;

        return $this;
    }

    /**
     * Gets acct_for_fixed_assets_impa
     *
     * @return string
     */
    public function getAcctForFixedAssetsImpa()
    {
        return $this->container['acct_for_fixed_assets_impa'];
    }

    /**
     * Sets acct_for_fixed_assets_impa
     *
     * @param string $acct_for_fixed_assets_impa acct_for_fixed_assets_impa
     *
     * @return $this
     */
    public function setAcctForFixedAssetsImpa($acct_for_fixed_assets_impa)
    {
        $this->container['acct_for_fixed_assets_impa'] = $acct_for_fixed_assets_impa;

        return $this;
    }

    /**
     * Gets acct_for_virtual_assets_impa
     *
     * @return string
     */
    public function getAcctForVirtualAssetsImpa()
    {
        return $this->container['acct_for_virtual_assets_impa'];
    }

    /**
     * Sets acct_for_virtual_assets_impa
     *
     * @param string $acct_for_virtual_assets_impa acct_for_virtual_assets_impa
     *
     * @return $this
     */
    public function setAcctForVirtualAssetsImpa($acct_for_virtual_assets_impa)
    {
        $this->container['acct_for_virtual_assets_impa'] = $acct_for_virtual_assets_impa;

        return $this;
    }

    /**
     * Gets acct_for_sale_income_fee
     *
     * @return string
     */
    public function getAcctForSaleIncomeFee()
    {
        return $this->container['acct_for_sale_income_fee'];
    }

    /**
     * Sets acct_for_sale_income_fee
     *
     * @param string $acct_for_sale_income_fee acct_for_sale_income_fee
     *
     * @return $this
     */
    public function setAcctForSaleIncomeFee($acct_for_sale_income_fee)
    {
        $this->container['acct_for_sale_income_fee'] = $acct_for_sale_income_fee;

        return $this;
    }

    /**
     * Gets acct_for_entertain_fee
     *
     * @return string
     */
    public function getAcctForEntertainFee()
    {
        return $this->container['acct_for_entertain_fee'];
    }

    /**
     * Sets acct_for_entertain_fee
     *
     * @param string $acct_for_entertain_fee acct_for_entertain_fee
     *
     * @return $this
     */
    public function setAcctForEntertainFee($acct_for_entertain_fee)
    {
        $this->container['acct_for_entertain_fee'] = $acct_for_entertain_fee;

        return $this;
    }

    /**
     * Gets acct_for_assets_inventory
     *
     * @return string
     */
    public function getAcctForAssetsInventory()
    {
        return $this->container['acct_for_assets_inventory'];
    }

    /**
     * Sets acct_for_assets_inventory
     *
     * @param string $acct_for_assets_inventory acct_for_assets_inventory
     *
     * @return $this
     */
    public function setAcctForAssetsInventory($acct_for_assets_inventory)
    {
        $this->container['acct_for_assets_inventory'] = $acct_for_assets_inventory;

        return $this;
    }

    /**
     * Gets acct_for_sale_cost_trans
     *
     * @return string
     */
    public function getAcctForSaleCostTrans()
    {
        return $this->container['acct_for_sale_cost_trans'];
    }

    /**
     * Sets acct_for_sale_cost_trans
     *
     * @param string $acct_for_sale_cost_trans acct_for_sale_cost_trans
     *
     * @return $this
     */
    public function setAcctForSaleCostTrans($acct_for_sale_cost_trans)
    {
        $this->container['acct_for_sale_cost_trans'] = $acct_for_sale_cost_trans;

        return $this;
    }

    /**
     * Gets acct_for_added_tax
     *
     * @return string
     */
    public function getAcctForAddedTax()
    {
        return $this->container['acct_for_added_tax'];
    }

    /**
     * Sets acct_for_added_tax
     *
     * @param string $acct_for_added_tax acct_for_added_tax
     *
     * @return $this
     */
    public function setAcctForAddedTax($acct_for_added_tax)
    {
        $this->container['acct_for_added_tax'] = $acct_for_added_tax;

        return $this;
    }

    /**
     * Gets acct_for_advertisement_fee
     *
     * @return string
     */
    public function getAcctForAdvertisementFee()
    {
        return $this->container['acct_for_advertisement_fee'];
    }

    /**
     * Sets acct_for_advertisement_fee
     *
     * @param string $acct_for_advertisement_fee acct_for_advertisement_fee
     *
     * @return $this
     */
    public function setAcctForAdvertisementFee($acct_for_advertisement_fee)
    {
        $this->container['acct_for_advertisement_fee'] = $acct_for_advertisement_fee;

        return $this;
    }

    /**
     * Gets adjust_rate_voucher_gen_type
     *
     * @return string
     */
    public function getAdjustRateVoucherGenType()
    {
        return $this->container['adjust_rate_voucher_gen_type'];
    }

    /**
     * Sets adjust_rate_voucher_gen_type
     *
     * @param string $adjust_rate_voucher_gen_type adjust_rate_voucher_gen_type
     *
     * @return $this
     */
    public function setAdjustRateVoucherGenType($adjust_rate_voucher_gen_type)
    {
        $this->container['adjust_rate_voucher_gen_type'] = $adjust_rate_voucher_gen_type;

        return $this;
    }

    /**
     * Gets adjust_rate_account
     *
     * @return string
     */
    public function getAdjustRateAccount()
    {
        return $this->container['adjust_rate_account'];
    }

    /**
     * Sets adjust_rate_account
     *
     * @param string $adjust_rate_account adjust_rate_account
     *
     * @return $this
     */
    public function setAdjustRateAccount($adjust_rate_account)
    {
        $this->container['adjust_rate_account'] = $adjust_rate_account;

        return $this;
    }

    /**
     * Gets adjust_rate_item
     *
     * @return string
     */
    public function getAdjustRateItem()
    {
        return $this->container['adjust_rate_item'];
    }

    /**
     * Sets adjust_rate_item
     *
     * @param string $adjust_rate_item adjust_rate_item
     *
     * @return $this
     */
    public function setAdjustRateItem($adjust_rate_item)
    {
        $this->container['adjust_rate_item'] = $adjust_rate_item;

        return $this;
    }

    /**
     * Gets adjust_rate_voucher_group
     *
     * @return string
     */
    public function getAdjustRateVoucherGroup()
    {
        return $this->container['adjust_rate_voucher_group'];
    }

    /**
     * Sets adjust_rate_voucher_group
     *
     * @param string $adjust_rate_voucher_group adjust_rate_voucher_group
     *
     * @return $this
     */
    public function setAdjustRateVoucherGroup($adjust_rate_voucher_group)
    {
        $this->container['adjust_rate_voucher_group'] = $adjust_rate_voucher_group;

        return $this;
    }

    /**
     * Gets adjust_rate_account_loss
     *
     * @return string
     */
    public function getAdjustRateAccountLoss()
    {
        return $this->container['adjust_rate_account_loss'];
    }

    /**
     * Sets adjust_rate_account_loss
     *
     * @param string $adjust_rate_account_loss adjust_rate_account_loss
     *
     * @return $this
     */
    public function setAdjustRateAccountLoss($adjust_rate_account_loss)
    {
        $this->container['adjust_rate_account_loss'] = $adjust_rate_account_loss;

        return $this;
    }

    /**
     * Gets adjust_rate_dcbybal
     *
     * @return string
     */
    public function getAdjustRateDcbybal()
    {
        return $this->container['adjust_rate_dcbybal'];
    }

    /**
     * Sets adjust_rate_dcbybal
     *
     * @param string $adjust_rate_dcbybal adjust_rate_dcbybal
     *
     * @return $this
     */
    public function setAdjustRateDcbybal($adjust_rate_dcbybal)
    {
        $this->container['adjust_rate_dcbybal'] = $adjust_rate_dcbybal;

        return $this;
    }

    /**
     * Gets adjust_rate_voucher_explanation
     *
     * @return string
     */
    public function getAdjustRateVoucherExplanation()
    {
        return $this->container['adjust_rate_voucher_explanation'];
    }

    /**
     * Sets adjust_rate_voucher_explanation
     *
     * @param string $adjust_rate_voucher_explanation adjust_rate_voucher_explanation
     *
     * @return $this
     */
    public function setAdjustRateVoucherExplanation($adjust_rate_voucher_explanation)
    {
        $this->container['adjust_rate_voucher_explanation'] = $adjust_rate_voucher_explanation;

        return $this;
    }

    /**
     * Gets adjust_rate_loss_item
     *
     * @return string
     */
    public function getAdjustRateLossItem()
    {
        return $this->container['adjust_rate_loss_item'];
    }

    /**
     * Sets adjust_rate_loss_item
     *
     * @param string $adjust_rate_loss_item adjust_rate_loss_item
     *
     * @return $this
     */
    public function setAdjustRateLossItem($adjust_rate_loss_item)
    {
        $this->container['adjust_rate_loss_item'] = $adjust_rate_loss_item;

        return $this;
    }

    /**
     * Gets trans_pl_voucher_gen_type
     *
     * @return string
     */
    public function getTransPlVoucherGenType()
    {
        return $this->container['trans_pl_voucher_gen_type'];
    }

    /**
     * Sets trans_pl_voucher_gen_type
     *
     * @param string $trans_pl_voucher_gen_type trans_pl_voucher_gen_type
     *
     * @return $this
     */
    public function setTransPlVoucherGenType($trans_pl_voucher_gen_type)
    {
        $this->container['trans_pl_voucher_gen_type'] = $trans_pl_voucher_gen_type;

        return $this;
    }

    /**
     * Gets trans_pl_account
     *
     * @return string
     */
    public function getTransPlAccount()
    {
        return $this->container['trans_pl_account'];
    }

    /**
     * Sets trans_pl_account
     *
     * @param string $trans_pl_account trans_pl_account
     *
     * @return $this
     */
    public function setTransPlAccount($trans_pl_account)
    {
        $this->container['trans_pl_account'] = $trans_pl_account;

        return $this;
    }

    /**
     * Gets trans_pl_dc_by_bal
     *
     * @return bool
     */
    public function getTransPlDcByBal()
    {
        return $this->container['trans_pl_dc_by_bal'];
    }

    /**
     * Sets trans_pl_dc_by_bal
     *
     * @param bool $trans_pl_dc_by_bal trans_pl_dc_by_bal
     *
     * @return $this
     */
    public function setTransPlDcByBal($trans_pl_dc_by_bal)
    {
        $this->container['trans_pl_dc_by_bal'] = $trans_pl_dc_by_bal;

        return $this;
    }

    /**
     * Gets trans_pl_voucher_explanation
     *
     * @return string
     */
    public function getTransPlVoucherExplanation()
    {
        return $this->container['trans_pl_voucher_explanation'];
    }

    /**
     * Sets trans_pl_voucher_explanation
     *
     * @param string $trans_pl_voucher_explanation trans_pl_voucher_explanation
     *
     * @return $this
     */
    public function setTransPlVoucherExplanation($trans_pl_voucher_explanation)
    {
        $this->container['trans_pl_voucher_explanation'] = $trans_pl_voucher_explanation;

        return $this;
    }

    /**
     * Gets trans_pl_assist_item
     *
     * @return string
     */
    public function getTransPlAssistItem()
    {
        return $this->container['trans_pl_assist_item'];
    }

    /**
     * Sets trans_pl_assist_item
     *
     * @param string $trans_pl_assist_item trans_pl_assist_item
     *
     * @return $this
     */
    public function setTransPlAssistItem($trans_pl_assist_item)
    {
        $this->container['trans_pl_assist_item'] = $trans_pl_assist_item;

        return $this;
    }

    /**
     * Gets trans_pl_account_ago
     *
     * @return string
     */
    public function getTransPlAccountAgo()
    {
        return $this->container['trans_pl_account_ago'];
    }

    /**
     * Sets trans_pl_account_ago
     *
     * @param string $trans_pl_account_ago trans_pl_account_ago
     *
     * @return $this
     */
    public function setTransPlAccountAgo($trans_pl_account_ago)
    {
        $this->container['trans_pl_account_ago'] = $trans_pl_account_ago;

        return $this;
    }

    /**
     * Gets trans_pl_voucher_group
     *
     * @return string
     */
    public function getTransPlVoucherGroup()
    {
        return $this->container['trans_pl_voucher_group'];
    }

    /**
     * Sets trans_pl_voucher_group
     *
     * @param string $trans_pl_voucher_group trans_pl_voucher_group
     *
     * @return $this
     */
    public function setTransPlVoucherGroup($trans_pl_voucher_group)
    {
        $this->container['trans_pl_voucher_group'] = $trans_pl_voucher_group;

        return $this;
    }

    /**
     * Gets trans_pl_advance_assist_item
     *
     * @return string
     */
    public function getTransPlAdvanceAssistItem()
    {
        return $this->container['trans_pl_advance_assist_item'];
    }

    /**
     * Sets trans_pl_advance_assist_item
     *
     * @param string $trans_pl_advance_assist_item trans_pl_advance_assist_item
     *
     * @return $this
     */
    public function setTransPlAdvanceAssistItem($trans_pl_advance_assist_item)
    {
        $this->container['trans_pl_advance_assist_item'] = $trans_pl_advance_assist_item;

        return $this;
    }

    /**
     * Gets trans_pl_advance_by_assist
     *
     * @return bool
     */
    public function getTransPlAdvanceByAssist()
    {
        return $this->container['trans_pl_advance_by_assist'];
    }

    /**
     * Sets trans_pl_advance_by_assist
     *
     * @param bool $trans_pl_advance_by_assist trans_pl_advance_by_assist
     *
     * @return $this
     */
    public function setTransPlAdvanceByAssist($trans_pl_advance_by_assist)
    {
        $this->container['trans_pl_advance_by_assist'] = $trans_pl_advance_by_assist;

        return $this;
    }

    /**
     * Gets trans_pl_account_adjust
     *
     * @return string
     */
    public function getTransPlAccountAdjust()
    {
        return $this->container['trans_pl_account_adjust'];
    }

    /**
     * Sets trans_pl_account_adjust
     *
     * @param string $trans_pl_account_adjust trans_pl_account_adjust
     *
     * @return $this
     */
    public function setTransPlAccountAdjust($trans_pl_account_adjust)
    {
        $this->container['trans_pl_account_adjust'] = $trans_pl_account_adjust;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


