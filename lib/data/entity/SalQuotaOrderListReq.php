<?php
/**
 * SalQuotaOrderListReq
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * SalQuotaOrderListReq Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalQuotaOrderListReq implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SalQuotaOrder_listReq';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'end_date' => 'string',
        'end_bill_date' => 'string',
        'bill_close_state' => 'string',
        'begin_date' => 'string',
        'show_material_total' => 'bool',
        'search' => 'string',
        'top' => 'int',
        'show_only_push_move' => 'bool',
        'barcode' => 'string',
        'start_bill_date' => 'string',
        'start_date' => 'string',
        'page_size' => 'string',
        'end_time' => 'string',
        'begin_time' => 'string',
        'expire_time' => 'string',
        'stock_id' => 'string[]',
        'bill_status' => 'string',
        'start_time' => 'string',
        'expire_date' => 'string',
        'creator_id' => 'string[]',
        'order_by' => 'string',
        'page' => 'string',
        'dept_id' => 'string[]',
        'customer_group_id' => 'string[]',
        'emp_id' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'end_date' => null,
        'end_bill_date' => null,
        'bill_close_state' => null,
        'begin_date' => null,
        'show_material_total' => null,
        'search' => null,
        'top' => 'int32',
        'show_only_push_move' => null,
        'barcode' => null,
        'start_bill_date' => null,
        'start_date' => null,
        'page_size' => null,
        'end_time' => null,
        'begin_time' => null,
        'expire_time' => null,
        'stock_id' => null,
        'bill_status' => null,
        'start_time' => null,
        'expire_date' => null,
        'creator_id' => null,
        'order_by' => null,
        'page' => null,
        'dept_id' => null,
        'customer_group_id' => null,
        'emp_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'end_date' => 'end_date',
        'end_bill_date' => 'end_bill_date',
        'bill_close_state' => 'bill_close_state',
        'begin_date' => 'begin_date',
        'show_material_total' => 'show_material_total',
        'search' => 'search',
        'top' => 'top',
        'show_only_push_move' => 'show_only_push_move',
        'barcode' => 'barcode',
        'start_bill_date' => 'start_bill_date',
        'start_date' => 'start_date',
        'page_size' => 'page_size',
        'end_time' => 'end_time',
        'begin_time' => 'begin_time',
        'expire_time' => 'expire_time',
        'stock_id' => 'stock_id',
        'bill_status' => 'bill_status',
        'start_time' => 'start_time',
        'expire_date' => 'expire_date',
        'creator_id' => 'creator_id',
        'order_by' => 'order_by',
        'page' => 'page',
        'dept_id' => 'dept_id',
        'customer_group_id' => 'customer_group_id',
        'emp_id' => 'emp_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'end_date' => 'setEndDate',
        'end_bill_date' => 'setEndBillDate',
        'bill_close_state' => 'setBillCloseState',
        'begin_date' => 'setBeginDate',
        'show_material_total' => 'setShowMaterialTotal',
        'search' => 'setSearch',
        'top' => 'setTop',
        'show_only_push_move' => 'setShowOnlyPushMove',
        'barcode' => 'setBarcode',
        'start_bill_date' => 'setStartBillDate',
        'start_date' => 'setStartDate',
        'page_size' => 'setPageSize',
        'end_time' => 'setEndTime',
        'begin_time' => 'setBeginTime',
        'expire_time' => 'setExpireTime',
        'stock_id' => 'setStockId',
        'bill_status' => 'setBillStatus',
        'start_time' => 'setStartTime',
        'expire_date' => 'setExpireDate',
        'creator_id' => 'setCreatorId',
        'order_by' => 'setOrderBy',
        'page' => 'setPage',
        'dept_id' => 'setDeptId',
        'customer_group_id' => 'setCustomerGroupId',
        'emp_id' => 'setEmpId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'end_date' => 'getEndDate',
        'end_bill_date' => 'getEndBillDate',
        'bill_close_state' => 'getBillCloseState',
        'begin_date' => 'getBeginDate',
        'show_material_total' => 'getShowMaterialTotal',
        'search' => 'getSearch',
        'top' => 'getTop',
        'show_only_push_move' => 'getShowOnlyPushMove',
        'barcode' => 'getBarcode',
        'start_bill_date' => 'getStartBillDate',
        'start_date' => 'getStartDate',
        'page_size' => 'getPageSize',
        'end_time' => 'getEndTime',
        'begin_time' => 'getBeginTime',
        'expire_time' => 'getExpireTime',
        'stock_id' => 'getStockId',
        'bill_status' => 'getBillStatus',
        'start_time' => 'getStartTime',
        'expire_date' => 'getExpireDate',
        'creator_id' => 'getCreatorId',
        'order_by' => 'getOrderBy',
        'page' => 'getPage',
        'dept_id' => 'getDeptId',
        'customer_group_id' => 'getCustomerGroupId',
        'emp_id' => 'getEmpId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['end_bill_date'] = isset($data['end_bill_date']) ? $data['end_bill_date'] : null;
        $this->container['bill_close_state'] = isset($data['bill_close_state']) ? $data['bill_close_state'] : null;
        $this->container['begin_date'] = isset($data['begin_date']) ? $data['begin_date'] : null;
        $this->container['show_material_total'] = isset($data['show_material_total']) ? $data['show_material_total'] : null;
        $this->container['search'] = isset($data['search']) ? $data['search'] : null;
        $this->container['top'] = isset($data['top']) ? $data['top'] : null;
        $this->container['show_only_push_move'] = isset($data['show_only_push_move']) ? $data['show_only_push_move'] : null;
        $this->container['barcode'] = isset($data['barcode']) ? $data['barcode'] : null;
        $this->container['start_bill_date'] = isset($data['start_bill_date']) ? $data['start_bill_date'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['page_size'] = isset($data['page_size']) ? $data['page_size'] : null;
        $this->container['end_time'] = isset($data['end_time']) ? $data['end_time'] : null;
        $this->container['begin_time'] = isset($data['begin_time']) ? $data['begin_time'] : null;
        $this->container['expire_time'] = isset($data['expire_time']) ? $data['expire_time'] : null;
        $this->container['stock_id'] = isset($data['stock_id']) ? $data['stock_id'] : null;
        $this->container['bill_status'] = isset($data['bill_status']) ? $data['bill_status'] : null;
        $this->container['start_time'] = isset($data['start_time']) ? $data['start_time'] : null;
        $this->container['expire_date'] = isset($data['expire_date']) ? $data['expire_date'] : null;
        $this->container['creator_id'] = isset($data['creator_id']) ? $data['creator_id'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['page'] = isset($data['page']) ? $data['page'] : null;
        $this->container['dept_id'] = isset($data['dept_id']) ? $data['dept_id'] : null;
        $this->container['customer_group_id'] = isset($data['customer_group_id']) ? $data['customer_group_id'] : null;
        $this->container['emp_id'] = isset($data['emp_id']) ? $data['emp_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets end_date
     *
     * @return string
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param string $end_date end_date
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets end_bill_date
     *
     * @return string
     */
    public function getEndBillDate()
    {
        return $this->container['end_bill_date'];
    }

    /**
     * Sets end_bill_date
     *
     * @param string $end_bill_date end_bill_date
     *
     * @return $this
     */
    public function setEndBillDate($end_bill_date)
    {
        $this->container['end_bill_date'] = $end_bill_date;

        return $this;
    }

    /**
     * Gets bill_close_state
     *
     * @return string
     */
    public function getBillCloseState()
    {
        return $this->container['bill_close_state'];
    }

    /**
     * Sets bill_close_state
     *
     * @param string $bill_close_state bill_close_state
     *
     * @return $this
     */
    public function setBillCloseState($bill_close_state)
    {
        $this->container['bill_close_state'] = $bill_close_state;

        return $this;
    }

    /**
     * Gets begin_date
     *
     * @return string
     */
    public function getBeginDate()
    {
        return $this->container['begin_date'];
    }

    /**
     * Sets begin_date
     *
     * @param string $begin_date begin_date
     *
     * @return $this
     */
    public function setBeginDate($begin_date)
    {
        $this->container['begin_date'] = $begin_date;

        return $this;
    }

    /**
     * Gets show_material_total
     *
     * @return bool
     */
    public function getShowMaterialTotal()
    {
        return $this->container['show_material_total'];
    }

    /**
     * Sets show_material_total
     *
     * @param bool $show_material_total show_material_total
     *
     * @return $this
     */
    public function setShowMaterialTotal($show_material_total)
    {
        $this->container['show_material_total'] = $show_material_total;

        return $this;
    }

    /**
     * Gets search
     *
     * @return string
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param string $search search
     *
     * @return $this
     */
    public function setSearch($search)
    {
        $this->container['search'] = $search;

        return $this;
    }

    /**
     * Gets top
     *
     * @return int
     */
    public function getTop()
    {
        return $this->container['top'];
    }

    /**
     * Sets top
     *
     * @param int $top top
     *
     * @return $this
     */
    public function setTop($top)
    {
        $this->container['top'] = $top;

        return $this;
    }

    /**
     * Gets show_only_push_move
     *
     * @return bool
     */
    public function getShowOnlyPushMove()
    {
        return $this->container['show_only_push_move'];
    }

    /**
     * Sets show_only_push_move
     *
     * @param bool $show_only_push_move show_only_push_move
     *
     * @return $this
     */
    public function setShowOnlyPushMove($show_only_push_move)
    {
        $this->container['show_only_push_move'] = $show_only_push_move;

        return $this;
    }

    /**
     * Gets barcode
     *
     * @return string
     */
    public function getBarcode()
    {
        return $this->container['barcode'];
    }

    /**
     * Sets barcode
     *
     * @param string $barcode barcode
     *
     * @return $this
     */
    public function setBarcode($barcode)
    {
        $this->container['barcode'] = $barcode;

        return $this;
    }

    /**
     * Gets start_bill_date
     *
     * @return string
     */
    public function getStartBillDate()
    {
        return $this->container['start_bill_date'];
    }

    /**
     * Sets start_bill_date
     *
     * @param string $start_bill_date start_bill_date
     *
     * @return $this
     */
    public function setStartBillDate($start_bill_date)
    {
        $this->container['start_bill_date'] = $start_bill_date;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return string
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param string $start_date start_date
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets page_size
     *
     * @return string
     */
    public function getPageSize()
    {
        return $this->container['page_size'];
    }

    /**
     * Sets page_size
     *
     * @param string $page_size page_size
     *
     * @return $this
     */
    public function setPageSize($page_size)
    {
        $this->container['page_size'] = $page_size;

        return $this;
    }

    /**
     * Gets end_time
     *
     * @return string
     */
    public function getEndTime()
    {
        return $this->container['end_time'];
    }

    /**
     * Sets end_time
     *
     * @param string $end_time end_time
     *
     * @return $this
     */
    public function setEndTime($end_time)
    {
        $this->container['end_time'] = $end_time;

        return $this;
    }

    /**
     * Gets begin_time
     *
     * @return string
     */
    public function getBeginTime()
    {
        return $this->container['begin_time'];
    }

    /**
     * Sets begin_time
     *
     * @param string $begin_time begin_time
     *
     * @return $this
     */
    public function setBeginTime($begin_time)
    {
        $this->container['begin_time'] = $begin_time;

        return $this;
    }

    /**
     * Gets expire_time
     *
     * @return string
     */
    public function getExpireTime()
    {
        return $this->container['expire_time'];
    }

    /**
     * Sets expire_time
     *
     * @param string $expire_time expire_time
     *
     * @return $this
     */
    public function setExpireTime($expire_time)
    {
        $this->container['expire_time'] = $expire_time;

        return $this;
    }

    /**
     * Gets stock_id
     *
     * @return string[]
     */
    public function getStockId()
    {
        return $this->container['stock_id'];
    }

    /**
     * Sets stock_id
     *
     * @param string[] $stock_id stock_id
     *
     * @return $this
     */
    public function setStockId($stock_id)
    {
        $this->container['stock_id'] = $stock_id;

        return $this;
    }

    /**
     * Gets bill_status
     *
     * @return string
     */
    public function getBillStatus()
    {
        return $this->container['bill_status'];
    }

    /**
     * Sets bill_status
     *
     * @param string $bill_status bill_status
     *
     * @return $this
     */
    public function setBillStatus($bill_status)
    {
        $this->container['bill_status'] = $bill_status;

        return $this;
    }

    /**
     * Gets start_time
     *
     * @return string
     */
    public function getStartTime()
    {
        return $this->container['start_time'];
    }

    /**
     * Sets start_time
     *
     * @param string $start_time start_time
     *
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->container['start_time'] = $start_time;

        return $this;
    }

    /**
     * Gets expire_date
     *
     * @return string
     */
    public function getExpireDate()
    {
        return $this->container['expire_date'];
    }

    /**
     * Sets expire_date
     *
     * @param string $expire_date expire_date
     *
     * @return $this
     */
    public function setExpireDate($expire_date)
    {
        $this->container['expire_date'] = $expire_date;

        return $this;
    }

    /**
     * Gets creator_id
     *
     * @return string[]
     */
    public function getCreatorId()
    {
        return $this->container['creator_id'];
    }

    /**
     * Sets creator_id
     *
     * @param string[] $creator_id creator_id
     *
     * @return $this
     */
    public function setCreatorId($creator_id)
    {
        $this->container['creator_id'] = $creator_id;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets page
     *
     * @return string
     */
    public function getPage()
    {
        return $this->container['page'];
    }

    /**
     * Sets page
     *
     * @param string $page page
     *
     * @return $this
     */
    public function setPage($page)
    {
        $this->container['page'] = $page;

        return $this;
    }

    /**
     * Gets dept_id
     *
     * @return string[]
     */
    public function getDeptId()
    {
        return $this->container['dept_id'];
    }

    /**
     * Sets dept_id
     *
     * @param string[] $dept_id dept_id
     *
     * @return $this
     */
    public function setDeptId($dept_id)
    {
        $this->container['dept_id'] = $dept_id;

        return $this;
    }

    /**
     * Gets customer_group_id
     *
     * @return string[]
     */
    public function getCustomerGroupId()
    {
        return $this->container['customer_group_id'];
    }

    /**
     * Sets customer_group_id
     *
     * @param string[] $customer_group_id customer_group_id
     *
     * @return $this
     */
    public function setCustomerGroupId($customer_group_id)
    {
        $this->container['customer_group_id'] = $customer_group_id;

        return $this;
    }

    /**
     * Gets emp_id
     *
     * @return string[]
     */
    public function getEmpId()
    {
        return $this->container['emp_id'];
    }

    /**
     * Sets emp_id
     *
     * @param string[] $emp_id emp_id
     *
     * @return $this
     */
    public function setEmpId($emp_id)
    {
        $this->container['emp_id'] = $emp_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


