<?php
/**
 * ModelPublic
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * ModelPublic Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ModelPublic implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Public';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'system_start_period' => 'string',
        'company_name' => 'string',
        'company_address' => 'string',
        'company_phone' => 'string',
        'company_fax' => 'string',
        'company_postcode' => 'string',
        'tax_payer_name' => 'string',
        'tax_payer_idnumber' => 'string',
        'invoice_company_address' => 'string',
        'invoice_company_phone' => 'string',
        'invoice_bank' => 'string',
        'invoice_account_number' => 'string',
        'open_custom_field' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'system_start_period' => null,
        'company_name' => null,
        'company_address' => null,
        'company_phone' => null,
        'company_fax' => null,
        'company_postcode' => null,
        'tax_payer_name' => null,
        'tax_payer_idnumber' => null,
        'invoice_company_address' => null,
        'invoice_company_phone' => null,
        'invoice_bank' => null,
        'invoice_account_number' => null,
        'open_custom_field' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'system_start_period' => 'system_start_period',
        'company_name' => 'company_name',
        'company_address' => 'company_address',
        'company_phone' => 'company_phone',
        'company_fax' => 'company_fax',
        'company_postcode' => 'company_postcode',
        'tax_payer_name' => 'tax_payer_name',
        'tax_payer_idnumber' => 'tax_payer_idnumber',
        'invoice_company_address' => 'invoice_company_address',
        'invoice_company_phone' => 'invoice_company_phone',
        'invoice_bank' => 'invoice_bank',
        'invoice_account_number' => 'invoice_account_number',
        'open_custom_field' => 'open_custom_field'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'system_start_period' => 'setSystemStartPeriod',
        'company_name' => 'setCompanyName',
        'company_address' => 'setCompanyAddress',
        'company_phone' => 'setCompanyPhone',
        'company_fax' => 'setCompanyFax',
        'company_postcode' => 'setCompanyPostcode',
        'tax_payer_name' => 'setTaxPayerName',
        'tax_payer_idnumber' => 'setTaxPayerIdnumber',
        'invoice_company_address' => 'setInvoiceCompanyAddress',
        'invoice_company_phone' => 'setInvoiceCompanyPhone',
        'invoice_bank' => 'setInvoiceBank',
        'invoice_account_number' => 'setInvoiceAccountNumber',
        'open_custom_field' => 'setOpenCustomField'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'system_start_period' => 'getSystemStartPeriod',
        'company_name' => 'getCompanyName',
        'company_address' => 'getCompanyAddress',
        'company_phone' => 'getCompanyPhone',
        'company_fax' => 'getCompanyFax',
        'company_postcode' => 'getCompanyPostcode',
        'tax_payer_name' => 'getTaxPayerName',
        'tax_payer_idnumber' => 'getTaxPayerIdnumber',
        'invoice_company_address' => 'getInvoiceCompanyAddress',
        'invoice_company_phone' => 'getInvoiceCompanyPhone',
        'invoice_bank' => 'getInvoiceBank',
        'invoice_account_number' => 'getInvoiceAccountNumber',
        'open_custom_field' => 'getOpenCustomField'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['system_start_period'] = isset($data['system_start_period']) ? $data['system_start_period'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['company_address'] = isset($data['company_address']) ? $data['company_address'] : null;
        $this->container['company_phone'] = isset($data['company_phone']) ? $data['company_phone'] : null;
        $this->container['company_fax'] = isset($data['company_fax']) ? $data['company_fax'] : null;
        $this->container['company_postcode'] = isset($data['company_postcode']) ? $data['company_postcode'] : null;
        $this->container['tax_payer_name'] = isset($data['tax_payer_name']) ? $data['tax_payer_name'] : null;
        $this->container['tax_payer_idnumber'] = isset($data['tax_payer_idnumber']) ? $data['tax_payer_idnumber'] : null;
        $this->container['invoice_company_address'] = isset($data['invoice_company_address']) ? $data['invoice_company_address'] : null;
        $this->container['invoice_company_phone'] = isset($data['invoice_company_phone']) ? $data['invoice_company_phone'] : null;
        $this->container['invoice_bank'] = isset($data['invoice_bank']) ? $data['invoice_bank'] : null;
        $this->container['invoice_account_number'] = isset($data['invoice_account_number']) ? $data['invoice_account_number'] : null;
        $this->container['open_custom_field'] = isset($data['open_custom_field']) ? $data['open_custom_field'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets system_start_period
     *
     * @return string
     */
    public function getSystemStartPeriod()
    {
        return $this->container['system_start_period'];
    }

    /**
     * Sets system_start_period
     *
     * @param string $system_start_period system_start_period
     *
     * @return $this
     */
    public function setSystemStartPeriod($system_start_period)
    {
        $this->container['system_start_period'] = $system_start_period;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name company_name
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets company_address
     *
     * @return string
     */
    public function getCompanyAddress()
    {
        return $this->container['company_address'];
    }

    /**
     * Sets company_address
     *
     * @param string $company_address company_address
     *
     * @return $this
     */
    public function setCompanyAddress($company_address)
    {
        $this->container['company_address'] = $company_address;

        return $this;
    }

    /**
     * Gets company_phone
     *
     * @return string
     */
    public function getCompanyPhone()
    {
        return $this->container['company_phone'];
    }

    /**
     * Sets company_phone
     *
     * @param string $company_phone company_phone
     *
     * @return $this
     */
    public function setCompanyPhone($company_phone)
    {
        $this->container['company_phone'] = $company_phone;

        return $this;
    }

    /**
     * Gets company_fax
     *
     * @return string
     */
    public function getCompanyFax()
    {
        return $this->container['company_fax'];
    }

    /**
     * Sets company_fax
     *
     * @param string $company_fax company_fax
     *
     * @return $this
     */
    public function setCompanyFax($company_fax)
    {
        $this->container['company_fax'] = $company_fax;

        return $this;
    }

    /**
     * Gets company_postcode
     *
     * @return string
     */
    public function getCompanyPostcode()
    {
        return $this->container['company_postcode'];
    }

    /**
     * Sets company_postcode
     *
     * @param string $company_postcode company_postcode
     *
     * @return $this
     */
    public function setCompanyPostcode($company_postcode)
    {
        $this->container['company_postcode'] = $company_postcode;

        return $this;
    }

    /**
     * Gets tax_payer_name
     *
     * @return string
     */
    public function getTaxPayerName()
    {
        return $this->container['tax_payer_name'];
    }

    /**
     * Sets tax_payer_name
     *
     * @param string $tax_payer_name tax_payer_name
     *
     * @return $this
     */
    public function setTaxPayerName($tax_payer_name)
    {
        $this->container['tax_payer_name'] = $tax_payer_name;

        return $this;
    }

    /**
     * Gets tax_payer_idnumber
     *
     * @return string
     */
    public function getTaxPayerIdnumber()
    {
        return $this->container['tax_payer_idnumber'];
    }

    /**
     * Sets tax_payer_idnumber
     *
     * @param string $tax_payer_idnumber tax_payer_idnumber
     *
     * @return $this
     */
    public function setTaxPayerIdnumber($tax_payer_idnumber)
    {
        $this->container['tax_payer_idnumber'] = $tax_payer_idnumber;

        return $this;
    }

    /**
     * Gets invoice_company_address
     *
     * @return string
     */
    public function getInvoiceCompanyAddress()
    {
        return $this->container['invoice_company_address'];
    }

    /**
     * Sets invoice_company_address
     *
     * @param string $invoice_company_address invoice_company_address
     *
     * @return $this
     */
    public function setInvoiceCompanyAddress($invoice_company_address)
    {
        $this->container['invoice_company_address'] = $invoice_company_address;

        return $this;
    }

    /**
     * Gets invoice_company_phone
     *
     * @return string
     */
    public function getInvoiceCompanyPhone()
    {
        return $this->container['invoice_company_phone'];
    }

    /**
     * Sets invoice_company_phone
     *
     * @param string $invoice_company_phone invoice_company_phone
     *
     * @return $this
     */
    public function setInvoiceCompanyPhone($invoice_company_phone)
    {
        $this->container['invoice_company_phone'] = $invoice_company_phone;

        return $this;
    }

    /**
     * Gets invoice_bank
     *
     * @return string
     */
    public function getInvoiceBank()
    {
        return $this->container['invoice_bank'];
    }

    /**
     * Sets invoice_bank
     *
     * @param string $invoice_bank invoice_bank
     *
     * @return $this
     */
    public function setInvoiceBank($invoice_bank)
    {
        $this->container['invoice_bank'] = $invoice_bank;

        return $this;
    }

    /**
     * Gets invoice_account_number
     *
     * @return string
     */
    public function getInvoiceAccountNumber()
    {
        return $this->container['invoice_account_number'];
    }

    /**
     * Sets invoice_account_number
     *
     * @param string $invoice_account_number invoice_account_number
     *
     * @return $this
     */
    public function setInvoiceAccountNumber($invoice_account_number)
    {
        $this->container['invoice_account_number'] = $invoice_account_number;

        return $this;
    }

    /**
     * Gets open_custom_field
     *
     * @return bool
     */
    public function getOpenCustomField()
    {
        return $this->container['open_custom_field'];
    }

    /**
     * Sets open_custom_field
     *
     * @param bool $open_custom_field open_custom_field
     *
     * @return $this
     */
    public function setOpenCustomField($open_custom_field)
    {
        $this->container['open_custom_field'] = $open_custom_field;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


