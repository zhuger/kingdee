<?php
/**
 * Bomentity
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * Bomentity Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Bomentity implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Bomentity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'birthday' => 'string',
        'qq' => 'string',
        'contact_person' => 'string',
        'contact_country_id' => 'string',
        'contact_country_name' => 'string',
        'contact_country_number' => 'string',
        'contact_province_id' => 'string',
        'contact_province_name' => 'string',
        'contact_province_number' => 'string',
        'contact_city_id' => 'string',
        'contact_city_name' => 'string',
        'contact_city_number' => 'string',
        'contact_district_id' => 'string',
        'contact_district_name' => 'string',
        'contact_district_number' => 'string',
        'gender' => 'string',
        'mobile' => 'string',
        'wechat' => 'string',
        'phone' => 'string',
        'is_default_linkman' => 'bool',
        'id' => 'string',
        'contact_address' => 'string',
        'seq' => 'string',
        'email' => 'string',
        'group_number' => 'string',
        'rate' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'birthday' => null,
        'qq' => null,
        'contact_person' => null,
        'contact_country_id' => null,
        'contact_country_name' => null,
        'contact_country_number' => null,
        'contact_province_id' => null,
        'contact_province_name' => null,
        'contact_province_number' => null,
        'contact_city_id' => null,
        'contact_city_name' => null,
        'contact_city_number' => null,
        'contact_district_id' => null,
        'contact_district_name' => null,
        'contact_district_number' => null,
        'gender' => null,
        'mobile' => null,
        'wechat' => null,
        'phone' => null,
        'is_default_linkman' => null,
        'id' => null,
        'contact_address' => null,
        'seq' => null,
        'email' => null,
        'group_number' => null,
        'rate' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'birthday' => 'birthday',
        'qq' => 'qq',
        'contact_person' => 'contact_person',
        'contact_country_id' => 'contact_country_id',
        'contact_country_name' => 'contact_country_name',
        'contact_country_number' => 'contact_country_number',
        'contact_province_id' => 'contact_province_id',
        'contact_province_name' => 'contact_province_name',
        'contact_province_number' => 'contact_province_number',
        'contact_city_id' => 'contact_city_id',
        'contact_city_name' => 'contact_city_name',
        'contact_city_number' => 'contact_city_number',
        'contact_district_id' => 'contact_district_id',
        'contact_district_name' => 'contact_district_name',
        'contact_district_number' => 'contact_district_number',
        'gender' => 'gender',
        'mobile' => 'mobile',
        'wechat' => 'wechat',
        'phone' => 'phone',
        'is_default_linkman' => 'is_default_linkman',
        'id' => 'id',
        'contact_address' => 'contact_address',
        'seq' => 'seq',
        'email' => 'email',
        'group_number' => 'group_number',
        'rate' => 'rate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'birthday' => 'setBirthday',
        'qq' => 'setQq',
        'contact_person' => 'setContactPerson',
        'contact_country_id' => 'setContactCountryId',
        'contact_country_name' => 'setContactCountryName',
        'contact_country_number' => 'setContactCountryNumber',
        'contact_province_id' => 'setContactProvinceId',
        'contact_province_name' => 'setContactProvinceName',
        'contact_province_number' => 'setContactProvinceNumber',
        'contact_city_id' => 'setContactCityId',
        'contact_city_name' => 'setContactCityName',
        'contact_city_number' => 'setContactCityNumber',
        'contact_district_id' => 'setContactDistrictId',
        'contact_district_name' => 'setContactDistrictName',
        'contact_district_number' => 'setContactDistrictNumber',
        'gender' => 'setGender',
        'mobile' => 'setMobile',
        'wechat' => 'setWechat',
        'phone' => 'setPhone',
        'is_default_linkman' => 'setIsDefaultLinkman',
        'id' => 'setId',
        'contact_address' => 'setContactAddress',
        'seq' => 'setSeq',
        'email' => 'setEmail',
        'group_number' => 'setGroupNumber',
        'rate' => 'setRate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'birthday' => 'getBirthday',
        'qq' => 'getQq',
        'contact_person' => 'getContactPerson',
        'contact_country_id' => 'getContactCountryId',
        'contact_country_name' => 'getContactCountryName',
        'contact_country_number' => 'getContactCountryNumber',
        'contact_province_id' => 'getContactProvinceId',
        'contact_province_name' => 'getContactProvinceName',
        'contact_province_number' => 'getContactProvinceNumber',
        'contact_city_id' => 'getContactCityId',
        'contact_city_name' => 'getContactCityName',
        'contact_city_number' => 'getContactCityNumber',
        'contact_district_id' => 'getContactDistrictId',
        'contact_district_name' => 'getContactDistrictName',
        'contact_district_number' => 'getContactDistrictNumber',
        'gender' => 'getGender',
        'mobile' => 'getMobile',
        'wechat' => 'getWechat',
        'phone' => 'getPhone',
        'is_default_linkman' => 'getIsDefaultLinkman',
        'id' => 'getId',
        'contact_address' => 'getContactAddress',
        'seq' => 'getSeq',
        'email' => 'getEmail',
        'group_number' => 'getGroupNumber',
        'rate' => 'getRate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['birthday'] = isset($data['birthday']) ? $data['birthday'] : null;
        $this->container['qq'] = isset($data['qq']) ? $data['qq'] : null;
        $this->container['contact_person'] = isset($data['contact_person']) ? $data['contact_person'] : null;
        $this->container['contact_country_id'] = isset($data['contact_country_id']) ? $data['contact_country_id'] : null;
        $this->container['contact_country_name'] = isset($data['contact_country_name']) ? $data['contact_country_name'] : null;
        $this->container['contact_country_number'] = isset($data['contact_country_number']) ? $data['contact_country_number'] : null;
        $this->container['contact_province_id'] = isset($data['contact_province_id']) ? $data['contact_province_id'] : null;
        $this->container['contact_province_name'] = isset($data['contact_province_name']) ? $data['contact_province_name'] : null;
        $this->container['contact_province_number'] = isset($data['contact_province_number']) ? $data['contact_province_number'] : null;
        $this->container['contact_city_id'] = isset($data['contact_city_id']) ? $data['contact_city_id'] : null;
        $this->container['contact_city_name'] = isset($data['contact_city_name']) ? $data['contact_city_name'] : null;
        $this->container['contact_city_number'] = isset($data['contact_city_number']) ? $data['contact_city_number'] : null;
        $this->container['contact_district_id'] = isset($data['contact_district_id']) ? $data['contact_district_id'] : null;
        $this->container['contact_district_name'] = isset($data['contact_district_name']) ? $data['contact_district_name'] : null;
        $this->container['contact_district_number'] = isset($data['contact_district_number']) ? $data['contact_district_number'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['mobile'] = isset($data['mobile']) ? $data['mobile'] : null;
        $this->container['wechat'] = isset($data['wechat']) ? $data['wechat'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['is_default_linkman'] = isset($data['is_default_linkman']) ? $data['is_default_linkman'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['contact_address'] = isset($data['contact_address']) ? $data['contact_address'] : null;
        $this->container['seq'] = isset($data['seq']) ? $data['seq'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['group_number'] = isset($data['group_number']) ? $data['group_number'] : null;
        $this->container['rate'] = isset($data['rate']) ? $data['rate'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets birthday
     *
     * @return string
     */
    public function getBirthday()
    {
        return $this->container['birthday'];
    }

    /**
     * Sets birthday
     *
     * @param string $birthday birthday
     *
     * @return $this
     */
    public function setBirthday($birthday)
    {
        $this->container['birthday'] = $birthday;

        return $this;
    }

    /**
     * Gets qq
     *
     * @return string
     */
    public function getQq()
    {
        return $this->container['qq'];
    }

    /**
     * Sets qq
     *
     * @param string $qq qq
     *
     * @return $this
     */
    public function setQq($qq)
    {
        $this->container['qq'] = $qq;

        return $this;
    }

    /**
     * Gets contact_person
     *
     * @return string
     */
    public function getContactPerson()
    {
        return $this->container['contact_person'];
    }

    /**
     * Sets contact_person
     *
     * @param string $contact_person contact_person
     *
     * @return $this
     */
    public function setContactPerson($contact_person)
    {
        $this->container['contact_person'] = $contact_person;

        return $this;
    }

    /**
     * Gets contact_country_id
     *
     * @return string
     */
    public function getContactCountryId()
    {
        return $this->container['contact_country_id'];
    }

    /**
     * Sets contact_country_id
     *
     * @param string $contact_country_id contact_country_id
     *
     * @return $this
     */
    public function setContactCountryId($contact_country_id)
    {
        $this->container['contact_country_id'] = $contact_country_id;

        return $this;
    }

    /**
     * Gets contact_country_name
     *
     * @return string
     */
    public function getContactCountryName()
    {
        return $this->container['contact_country_name'];
    }

    /**
     * Sets contact_country_name
     *
     * @param string $contact_country_name contact_country_name
     *
     * @return $this
     */
    public function setContactCountryName($contact_country_name)
    {
        $this->container['contact_country_name'] = $contact_country_name;

        return $this;
    }

    /**
     * Gets contact_country_number
     *
     * @return string
     */
    public function getContactCountryNumber()
    {
        return $this->container['contact_country_number'];
    }

    /**
     * Sets contact_country_number
     *
     * @param string $contact_country_number contact_country_number
     *
     * @return $this
     */
    public function setContactCountryNumber($contact_country_number)
    {
        $this->container['contact_country_number'] = $contact_country_number;

        return $this;
    }

    /**
     * Gets contact_province_id
     *
     * @return string
     */
    public function getContactProvinceId()
    {
        return $this->container['contact_province_id'];
    }

    /**
     * Sets contact_province_id
     *
     * @param string $contact_province_id contact_province_id
     *
     * @return $this
     */
    public function setContactProvinceId($contact_province_id)
    {
        $this->container['contact_province_id'] = $contact_province_id;

        return $this;
    }

    /**
     * Gets contact_province_name
     *
     * @return string
     */
    public function getContactProvinceName()
    {
        return $this->container['contact_province_name'];
    }

    /**
     * Sets contact_province_name
     *
     * @param string $contact_province_name contact_province_name
     *
     * @return $this
     */
    public function setContactProvinceName($contact_province_name)
    {
        $this->container['contact_province_name'] = $contact_province_name;

        return $this;
    }

    /**
     * Gets contact_province_number
     *
     * @return string
     */
    public function getContactProvinceNumber()
    {
        return $this->container['contact_province_number'];
    }

    /**
     * Sets contact_province_number
     *
     * @param string $contact_province_number contact_province_number
     *
     * @return $this
     */
    public function setContactProvinceNumber($contact_province_number)
    {
        $this->container['contact_province_number'] = $contact_province_number;

        return $this;
    }

    /**
     * Gets contact_city_id
     *
     * @return string
     */
    public function getContactCityId()
    {
        return $this->container['contact_city_id'];
    }

    /**
     * Sets contact_city_id
     *
     * @param string $contact_city_id contact_city_id
     *
     * @return $this
     */
    public function setContactCityId($contact_city_id)
    {
        $this->container['contact_city_id'] = $contact_city_id;

        return $this;
    }

    /**
     * Gets contact_city_name
     *
     * @return string
     */
    public function getContactCityName()
    {
        return $this->container['contact_city_name'];
    }

    /**
     * Sets contact_city_name
     *
     * @param string $contact_city_name contact_city_name
     *
     * @return $this
     */
    public function setContactCityName($contact_city_name)
    {
        $this->container['contact_city_name'] = $contact_city_name;

        return $this;
    }

    /**
     * Gets contact_city_number
     *
     * @return string
     */
    public function getContactCityNumber()
    {
        return $this->container['contact_city_number'];
    }

    /**
     * Sets contact_city_number
     *
     * @param string $contact_city_number contact_city_number
     *
     * @return $this
     */
    public function setContactCityNumber($contact_city_number)
    {
        $this->container['contact_city_number'] = $contact_city_number;

        return $this;
    }

    /**
     * Gets contact_district_id
     *
     * @return string
     */
    public function getContactDistrictId()
    {
        return $this->container['contact_district_id'];
    }

    /**
     * Sets contact_district_id
     *
     * @param string $contact_district_id contact_district_id
     *
     * @return $this
     */
    public function setContactDistrictId($contact_district_id)
    {
        $this->container['contact_district_id'] = $contact_district_id;

        return $this;
    }

    /**
     * Gets contact_district_name
     *
     * @return string
     */
    public function getContactDistrictName()
    {
        return $this->container['contact_district_name'];
    }

    /**
     * Sets contact_district_name
     *
     * @param string $contact_district_name contact_district_name
     *
     * @return $this
     */
    public function setContactDistrictName($contact_district_name)
    {
        $this->container['contact_district_name'] = $contact_district_name;

        return $this;
    }

    /**
     * Gets contact_district_number
     *
     * @return string
     */
    public function getContactDistrictNumber()
    {
        return $this->container['contact_district_number'];
    }

    /**
     * Sets contact_district_number
     *
     * @param string $contact_district_number contact_district_number
     *
     * @return $this
     */
    public function setContactDistrictNumber($contact_district_number)
    {
        $this->container['contact_district_number'] = $contact_district_number;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string $gender gender
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     *
     * @param string $mobile mobile
     *
     * @return $this
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets wechat
     *
     * @return string
     */
    public function getWechat()
    {
        return $this->container['wechat'];
    }

    /**
     * Sets wechat
     *
     * @param string $wechat wechat
     *
     * @return $this
     */
    public function setWechat($wechat)
    {
        $this->container['wechat'] = $wechat;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets is_default_linkman
     *
     * @return bool
     */
    public function getIsDefaultLinkman()
    {
        return $this->container['is_default_linkman'];
    }

    /**
     * Sets is_default_linkman
     *
     * @param bool $is_default_linkman is_default_linkman
     *
     * @return $this
     */
    public function setIsDefaultLinkman($is_default_linkman)
    {
        $this->container['is_default_linkman'] = $is_default_linkman;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets contact_address
     *
     * @return string
     */
    public function getContactAddress()
    {
        return $this->container['contact_address'];
    }

    /**
     * Sets contact_address
     *
     * @param string $contact_address contact_address
     *
     * @return $this
     */
    public function setContactAddress($contact_address)
    {
        $this->container['contact_address'] = $contact_address;

        return $this;
    }

    /**
     * Gets seq
     *
     * @return string
     */
    public function getSeq()
    {
        return $this->container['seq'];
    }

    /**
     * Sets seq
     *
     * @param string $seq seq
     *
     * @return $this
     */
    public function setSeq($seq)
    {
        $this->container['seq'] = $seq;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets group_number
     *
     * @return string
     */
    public function getGroupNumber()
    {
        return $this->container['group_number'];
    }

    /**
     * Sets group_number
     *
     * @param string $group_number group_number
     *
     * @return $this
     */
    public function setGroupNumber($group_number)
    {
        $this->container['group_number'] = $group_number;

        return $this;
    }

    /**
     * Gets rate
     *
     * @return string
     */
    public function getRate()
    {
        return $this->container['rate'];
    }

    /**
     * Sets rate
     *
     * @param string $rate rate
     *
     * @return $this
     */
    public function setRate($rate)
    {
        $this->container['rate'] = $rate;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


