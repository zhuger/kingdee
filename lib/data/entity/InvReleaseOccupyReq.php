<?php
/**
 * InvReleaseOccupyReq
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * æ˜Ÿè¾°
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * InvReleaseOccupyReq Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvReleaseOccupyReq implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InvReleaseOccupyReq';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'src_bill_resource' => 'string',
        'src_bill_type_id' => 'string',
        'src_inter_id' => 'string',
        'bill_no' => 'string',
        'bill_date' => 'string',
        'is_re_calc_qty' => 'bool',
        'material_entity' => '\com_kingdee_service\data\entity\InvReleaseOccupyReqMaterialEntity[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'src_bill_resource' => null,
        'src_bill_type_id' => null,
        'src_inter_id' => null,
        'bill_no' => null,
        'bill_date' => null,
        'is_re_calc_qty' => null,
        'material_entity' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'src_bill_resource' => 'src_bill_resource',
        'src_bill_type_id' => 'src_bill_type_id',
        'src_inter_id' => 'src_inter_id',
        'bill_no' => 'bill_no',
        'bill_date' => 'bill_date',
        'is_re_calc_qty' => 'is_re_calc_qty',
        'material_entity' => 'material_entity'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'src_bill_resource' => 'setSrcBillResource',
        'src_bill_type_id' => 'setSrcBillTypeId',
        'src_inter_id' => 'setSrcInterId',
        'bill_no' => 'setBillNo',
        'bill_date' => 'setBillDate',
        'is_re_calc_qty' => 'setIsReCalcQty',
        'material_entity' => 'setMaterialEntity'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'src_bill_resource' => 'getSrcBillResource',
        'src_bill_type_id' => 'getSrcBillTypeId',
        'src_inter_id' => 'getSrcInterId',
        'bill_no' => 'getBillNo',
        'bill_date' => 'getBillDate',
        'is_re_calc_qty' => 'getIsReCalcQty',
        'material_entity' => 'getMaterialEntity'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['src_bill_resource'] = isset($data['src_bill_resource']) ? $data['src_bill_resource'] : null;
        $this->container['src_bill_type_id'] = isset($data['src_bill_type_id']) ? $data['src_bill_type_id'] : null;
        $this->container['src_inter_id'] = isset($data['src_inter_id']) ? $data['src_inter_id'] : null;
        $this->container['bill_no'] = isset($data['bill_no']) ? $data['bill_no'] : null;
        $this->container['bill_date'] = isset($data['bill_date']) ? $data['bill_date'] : null;
        $this->container['is_re_calc_qty'] = isset($data['is_re_calc_qty']) ? $data['is_re_calc_qty'] : null;
        $this->container['material_entity'] = isset($data['material_entity']) ? $data['material_entity'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets src_bill_resource
     *
     * @return string
     */
    public function getSrcBillResource()
    {
        return $this->container['src_bill_resource'];
    }

    /**
     * Sets src_bill_resource
     *
     * @param string $src_bill_resource src_bill_resource
     *
     * @return $this
     */
    public function setSrcBillResource($src_bill_resource)
    {
        $this->container['src_bill_resource'] = $src_bill_resource;

        return $this;
    }

    /**
     * Gets src_bill_type_id
     *
     * @return string
     */
    public function getSrcBillTypeId()
    {
        return $this->container['src_bill_type_id'];
    }

    /**
     * Sets src_bill_type_id
     *
     * @param string $src_bill_type_id src_bill_type_id
     *
     * @return $this
     */
    public function setSrcBillTypeId($src_bill_type_id)
    {
        $this->container['src_bill_type_id'] = $src_bill_type_id;

        return $this;
    }

    /**
     * Gets src_inter_id
     *
     * @return string
     */
    public function getSrcInterId()
    {
        return $this->container['src_inter_id'];
    }

    /**
     * Sets src_inter_id
     *
     * @param string $src_inter_id src_inter_id
     *
     * @return $this
     */
    public function setSrcInterId($src_inter_id)
    {
        $this->container['src_inter_id'] = $src_inter_id;

        return $this;
    }

    /**
     * Gets bill_no
     *
     * @return string
     */
    public function getBillNo()
    {
        return $this->container['bill_no'];
    }

    /**
     * Sets bill_no
     *
     * @param string $bill_no bill_no
     *
     * @return $this
     */
    public function setBillNo($bill_no)
    {
        $this->container['bill_no'] = $bill_no;

        return $this;
    }

    /**
     * Gets bill_date
     *
     * @return string
     */
    public function getBillDate()
    {
        return $this->container['bill_date'];
    }

    /**
     * Sets bill_date
     *
     * @param string $bill_date bill_date
     *
     * @return $this
     */
    public function setBillDate($bill_date)
    {
        $this->container['bill_date'] = $bill_date;

        return $this;
    }

    /**
     * Gets is_re_calc_qty
     *
     * @return bool
     */
    public function getIsReCalcQty()
    {
        return $this->container['is_re_calc_qty'];
    }

    /**
     * Sets is_re_calc_qty
     *
     * @param bool $is_re_calc_qty is_re_calc_qty
     *
     * @return $this
     */
    public function setIsReCalcQty($is_re_calc_qty)
    {
        $this->container['is_re_calc_qty'] = $is_re_calc_qty;

        return $this;
    }

    /**
     * Gets material_entity
     *
     * @return \com_kingdee_service\data\entity\InvReleaseOccupyReqMaterialEntity[]
     */
    public function getMaterialEntity()
    {
        return $this->container['material_entity'];
    }

    /**
     * Sets material_entity
     *
     * @param \com_kingdee_service\data\entity\InvReleaseOccupyReqMaterialEntity[] $material_entity material_entity
     *
     * @return $this
     */
    public function setMaterialEntity($material_entity)
    {
        $this->container['material_entity'] = $material_entity;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


