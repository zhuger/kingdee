<?php
/**
 * RetailBillListResMaterialEntries
 *
 * PHP version 5
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 星辰
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com_kingdee_service\data\entity;

use \ArrayAccess;
use \com_kingdee_service\ObjectSerializer;

/**
 * RetailBillListResMaterialEntries Class Doc Comment
 *
 * @category Class
 * @package  com_kingdee_service
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RetailBillListResMaterialEntries implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RetailBillListRes.MaterialEntries';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'index' => 'string',
        'material_id' => 'string',
        'barcode' => 'string',
        'sku_id' => 'string',
        'batch_no' => 'string',
        'kf_date' => 'string',
        'kf_type' => 'string',
        'kf_period' => 'string',
        'valid_date' => 'string',
        'stock_id' => 'string',
        'sp_id' => 'string',
        'free' => 'string',
        'unit_id' => 'string',
        'base_unit_id' => 'string',
        'qty' => 'string',
        'return_qty' => 'string',
        'base_qty' => 'string',
        'price' => 'string',
        'tax_price' => 'string',
        'predis_amount' => 'string',
        'dis_rate' => 'string',
        'discount' => 'string',
        'dis_amount' => 'string',
        'dis_amount_before' => 'string',
        'dis_price' => 'string',
        'bill_dis_before_amount' => 'string',
        'act_tax_price' => 'string',
        'cess' => 'string',
        'tax_amount' => 'string',
        'bill_dis_distribution' => 'string',
        'all_amount' => 'string',
        'act_non_tax_price' => 'string',
        'act_non_tax_amount' => 'string',
        'material_info' => '\com_kingdee_service\data\entity\RetailBillListResMaterialEntriesMaterialInfo',
        'is_serial' => 'bool',
        'name' => 'string',
        'is_batch' => 'bool',
        'check_type' => 'string',
        'all_amount_for' => 'string',
        'serials' => 'string[]',
        'total_dis_amount' => 'string',
        'total_dis_rate' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'index' => null,
        'material_id' => null,
        'barcode' => null,
        'sku_id' => null,
        'batch_no' => null,
        'kf_date' => null,
        'kf_type' => null,
        'kf_period' => null,
        'valid_date' => null,
        'stock_id' => null,
        'sp_id' => null,
        'free' => null,
        'unit_id' => null,
        'base_unit_id' => null,
        'qty' => null,
        'return_qty' => null,
        'base_qty' => null,
        'price' => null,
        'tax_price' => null,
        'predis_amount' => null,
        'dis_rate' => null,
        'discount' => null,
        'dis_amount' => null,
        'dis_amount_before' => null,
        'dis_price' => null,
        'bill_dis_before_amount' => null,
        'act_tax_price' => null,
        'cess' => null,
        'tax_amount' => null,
        'bill_dis_distribution' => null,
        'all_amount' => null,
        'act_non_tax_price' => null,
        'act_non_tax_amount' => null,
        'material_info' => null,
        'is_serial' => null,
        'name' => null,
        'is_batch' => null,
        'check_type' => null,
        'all_amount_for' => null,
        'serials' => null,
        'total_dis_amount' => null,
        'total_dis_rate' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'index' => 'index',
        'material_id' => 'material_id',
        'barcode' => 'barcode',
        'sku_id' => 'sku_id',
        'batch_no' => 'batch_no',
        'kf_date' => 'kf_date',
        'kf_type' => 'kf_type',
        'kf_period' => 'kf_period',
        'valid_date' => 'valid_date',
        'stock_id' => 'stock_id',
        'sp_id' => 'sp_id',
        'free' => 'free',
        'unit_id' => 'unit_id',
        'base_unit_id' => 'base_unit_id',
        'qty' => 'qty',
        'return_qty' => 'return_qty',
        'base_qty' => 'base_qty',
        'price' => 'price',
        'tax_price' => 'tax_price',
        'predis_amount' => 'predis_amount',
        'dis_rate' => 'dis_rate',
        'discount' => 'discount',
        'dis_amount' => 'dis_amount',
        'dis_amount_before' => 'dis_amount_before',
        'dis_price' => 'dis_price',
        'bill_dis_before_amount' => 'bill_dis_before_amount',
        'act_tax_price' => 'act_tax_price',
        'cess' => 'cess',
        'tax_amount' => 'tax_amount',
        'bill_dis_distribution' => 'bill_dis_distribution',
        'all_amount' => 'all_amount',
        'act_non_tax_price' => 'act_non_tax_price',
        'act_non_tax_amount' => 'act_non_tax_amount',
        'material_info' => 'material_info',
        'is_serial' => 'is_serial',
        'name' => 'name',
        'is_batch' => 'is_batch',
        'check_type' => 'check_type',
        'all_amount_for' => 'all_amount_for',
        'serials' => 'serials',
        'total_dis_amount' => 'total_dis_amount',
        'total_dis_rate' => 'total_dis_rate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'index' => 'setIndex',
        'material_id' => 'setMaterialId',
        'barcode' => 'setBarcode',
        'sku_id' => 'setSkuId',
        'batch_no' => 'setBatchNo',
        'kf_date' => 'setKfDate',
        'kf_type' => 'setKfType',
        'kf_period' => 'setKfPeriod',
        'valid_date' => 'setValidDate',
        'stock_id' => 'setStockId',
        'sp_id' => 'setSpId',
        'free' => 'setFree',
        'unit_id' => 'setUnitId',
        'base_unit_id' => 'setBaseUnitId',
        'qty' => 'setQty',
        'return_qty' => 'setReturnQty',
        'base_qty' => 'setBaseQty',
        'price' => 'setPrice',
        'tax_price' => 'setTaxPrice',
        'predis_amount' => 'setPredisAmount',
        'dis_rate' => 'setDisRate',
        'discount' => 'setDiscount',
        'dis_amount' => 'setDisAmount',
        'dis_amount_before' => 'setDisAmountBefore',
        'dis_price' => 'setDisPrice',
        'bill_dis_before_amount' => 'setBillDisBeforeAmount',
        'act_tax_price' => 'setActTaxPrice',
        'cess' => 'setCess',
        'tax_amount' => 'setTaxAmount',
        'bill_dis_distribution' => 'setBillDisDistribution',
        'all_amount' => 'setAllAmount',
        'act_non_tax_price' => 'setActNonTaxPrice',
        'act_non_tax_amount' => 'setActNonTaxAmount',
        'material_info' => 'setMaterialInfo',
        'is_serial' => 'setIsSerial',
        'name' => 'setName',
        'is_batch' => 'setIsBatch',
        'check_type' => 'setCheckType',
        'all_amount_for' => 'setAllAmountFor',
        'serials' => 'setSerials',
        'total_dis_amount' => 'setTotalDisAmount',
        'total_dis_rate' => 'setTotalDisRate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'index' => 'getIndex',
        'material_id' => 'getMaterialId',
        'barcode' => 'getBarcode',
        'sku_id' => 'getSkuId',
        'batch_no' => 'getBatchNo',
        'kf_date' => 'getKfDate',
        'kf_type' => 'getKfType',
        'kf_period' => 'getKfPeriod',
        'valid_date' => 'getValidDate',
        'stock_id' => 'getStockId',
        'sp_id' => 'getSpId',
        'free' => 'getFree',
        'unit_id' => 'getUnitId',
        'base_unit_id' => 'getBaseUnitId',
        'qty' => 'getQty',
        'return_qty' => 'getReturnQty',
        'base_qty' => 'getBaseQty',
        'price' => 'getPrice',
        'tax_price' => 'getTaxPrice',
        'predis_amount' => 'getPredisAmount',
        'dis_rate' => 'getDisRate',
        'discount' => 'getDiscount',
        'dis_amount' => 'getDisAmount',
        'dis_amount_before' => 'getDisAmountBefore',
        'dis_price' => 'getDisPrice',
        'bill_dis_before_amount' => 'getBillDisBeforeAmount',
        'act_tax_price' => 'getActTaxPrice',
        'cess' => 'getCess',
        'tax_amount' => 'getTaxAmount',
        'bill_dis_distribution' => 'getBillDisDistribution',
        'all_amount' => 'getAllAmount',
        'act_non_tax_price' => 'getActNonTaxPrice',
        'act_non_tax_amount' => 'getActNonTaxAmount',
        'material_info' => 'getMaterialInfo',
        'is_serial' => 'getIsSerial',
        'name' => 'getName',
        'is_batch' => 'getIsBatch',
        'check_type' => 'getCheckType',
        'all_amount_for' => 'getAllAmountFor',
        'serials' => 'getSerials',
        'total_dis_amount' => 'getTotalDisAmount',
        'total_dis_rate' => 'getTotalDisRate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['index'] = isset($data['index']) ? $data['index'] : null;
        $this->container['material_id'] = isset($data['material_id']) ? $data['material_id'] : null;
        $this->container['barcode'] = isset($data['barcode']) ? $data['barcode'] : null;
        $this->container['sku_id'] = isset($data['sku_id']) ? $data['sku_id'] : null;
        $this->container['batch_no'] = isset($data['batch_no']) ? $data['batch_no'] : null;
        $this->container['kf_date'] = isset($data['kf_date']) ? $data['kf_date'] : null;
        $this->container['kf_type'] = isset($data['kf_type']) ? $data['kf_type'] : null;
        $this->container['kf_period'] = isset($data['kf_period']) ? $data['kf_period'] : null;
        $this->container['valid_date'] = isset($data['valid_date']) ? $data['valid_date'] : null;
        $this->container['stock_id'] = isset($data['stock_id']) ? $data['stock_id'] : null;
        $this->container['sp_id'] = isset($data['sp_id']) ? $data['sp_id'] : null;
        $this->container['free'] = isset($data['free']) ? $data['free'] : null;
        $this->container['unit_id'] = isset($data['unit_id']) ? $data['unit_id'] : null;
        $this->container['base_unit_id'] = isset($data['base_unit_id']) ? $data['base_unit_id'] : null;
        $this->container['qty'] = isset($data['qty']) ? $data['qty'] : null;
        $this->container['return_qty'] = isset($data['return_qty']) ? $data['return_qty'] : null;
        $this->container['base_qty'] = isset($data['base_qty']) ? $data['base_qty'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['tax_price'] = isset($data['tax_price']) ? $data['tax_price'] : null;
        $this->container['predis_amount'] = isset($data['predis_amount']) ? $data['predis_amount'] : null;
        $this->container['dis_rate'] = isset($data['dis_rate']) ? $data['dis_rate'] : null;
        $this->container['discount'] = isset($data['discount']) ? $data['discount'] : null;
        $this->container['dis_amount'] = isset($data['dis_amount']) ? $data['dis_amount'] : null;
        $this->container['dis_amount_before'] = isset($data['dis_amount_before']) ? $data['dis_amount_before'] : null;
        $this->container['dis_price'] = isset($data['dis_price']) ? $data['dis_price'] : null;
        $this->container['bill_dis_before_amount'] = isset($data['bill_dis_before_amount']) ? $data['bill_dis_before_amount'] : null;
        $this->container['act_tax_price'] = isset($data['act_tax_price']) ? $data['act_tax_price'] : null;
        $this->container['cess'] = isset($data['cess']) ? $data['cess'] : null;
        $this->container['tax_amount'] = isset($data['tax_amount']) ? $data['tax_amount'] : null;
        $this->container['bill_dis_distribution'] = isset($data['bill_dis_distribution']) ? $data['bill_dis_distribution'] : null;
        $this->container['all_amount'] = isset($data['all_amount']) ? $data['all_amount'] : null;
        $this->container['act_non_tax_price'] = isset($data['act_non_tax_price']) ? $data['act_non_tax_price'] : null;
        $this->container['act_non_tax_amount'] = isset($data['act_non_tax_amount']) ? $data['act_non_tax_amount'] : null;
        $this->container['material_info'] = isset($data['material_info']) ? $data['material_info'] : null;
        $this->container['is_serial'] = isset($data['is_serial']) ? $data['is_serial'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['is_batch'] = isset($data['is_batch']) ? $data['is_batch'] : null;
        $this->container['check_type'] = isset($data['check_type']) ? $data['check_type'] : null;
        $this->container['all_amount_for'] = isset($data['all_amount_for']) ? $data['all_amount_for'] : null;
        $this->container['serials'] = isset($data['serials']) ? $data['serials'] : null;
        $this->container['total_dis_amount'] = isset($data['total_dis_amount']) ? $data['total_dis_amount'] : null;
        $this->container['total_dis_rate'] = isset($data['total_dis_rate']) ? $data['total_dis_rate'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets index
     *
     * @return string
     */
    public function getIndex()
    {
        return $this->container['index'];
    }

    /**
     * Sets index
     *
     * @param string $index index
     *
     * @return $this
     */
    public function setIndex($index)
    {
        $this->container['index'] = $index;

        return $this;
    }

    /**
     * Gets material_id
     *
     * @return string
     */
    public function getMaterialId()
    {
        return $this->container['material_id'];
    }

    /**
     * Sets material_id
     *
     * @param string $material_id material_id
     *
     * @return $this
     */
    public function setMaterialId($material_id)
    {
        $this->container['material_id'] = $material_id;

        return $this;
    }

    /**
     * Gets barcode
     *
     * @return string
     */
    public function getBarcode()
    {
        return $this->container['barcode'];
    }

    /**
     * Sets barcode
     *
     * @param string $barcode barcode
     *
     * @return $this
     */
    public function setBarcode($barcode)
    {
        $this->container['barcode'] = $barcode;

        return $this;
    }

    /**
     * Gets sku_id
     *
     * @return string
     */
    public function getSkuId()
    {
        return $this->container['sku_id'];
    }

    /**
     * Sets sku_id
     *
     * @param string $sku_id sku_id
     *
     * @return $this
     */
    public function setSkuId($sku_id)
    {
        $this->container['sku_id'] = $sku_id;

        return $this;
    }

    /**
     * Gets batch_no
     *
     * @return string
     */
    public function getBatchNo()
    {
        return $this->container['batch_no'];
    }

    /**
     * Sets batch_no
     *
     * @param string $batch_no batch_no
     *
     * @return $this
     */
    public function setBatchNo($batch_no)
    {
        $this->container['batch_no'] = $batch_no;

        return $this;
    }

    /**
     * Gets kf_date
     *
     * @return string
     */
    public function getKfDate()
    {
        return $this->container['kf_date'];
    }

    /**
     * Sets kf_date
     *
     * @param string $kf_date kf_date
     *
     * @return $this
     */
    public function setKfDate($kf_date)
    {
        $this->container['kf_date'] = $kf_date;

        return $this;
    }

    /**
     * Gets kf_type
     *
     * @return string
     */
    public function getKfType()
    {
        return $this->container['kf_type'];
    }

    /**
     * Sets kf_type
     *
     * @param string $kf_type kf_type
     *
     * @return $this
     */
    public function setKfType($kf_type)
    {
        $this->container['kf_type'] = $kf_type;

        return $this;
    }

    /**
     * Gets kf_period
     *
     * @return string
     */
    public function getKfPeriod()
    {
        return $this->container['kf_period'];
    }

    /**
     * Sets kf_period
     *
     * @param string $kf_period kf_period
     *
     * @return $this
     */
    public function setKfPeriod($kf_period)
    {
        $this->container['kf_period'] = $kf_period;

        return $this;
    }

    /**
     * Gets valid_date
     *
     * @return string
     */
    public function getValidDate()
    {
        return $this->container['valid_date'];
    }

    /**
     * Sets valid_date
     *
     * @param string $valid_date valid_date
     *
     * @return $this
     */
    public function setValidDate($valid_date)
    {
        $this->container['valid_date'] = $valid_date;

        return $this;
    }

    /**
     * Gets stock_id
     *
     * @return string
     */
    public function getStockId()
    {
        return $this->container['stock_id'];
    }

    /**
     * Sets stock_id
     *
     * @param string $stock_id stock_id
     *
     * @return $this
     */
    public function setStockId($stock_id)
    {
        $this->container['stock_id'] = $stock_id;

        return $this;
    }

    /**
     * Gets sp_id
     *
     * @return string
     */
    public function getSpId()
    {
        return $this->container['sp_id'];
    }

    /**
     * Sets sp_id
     *
     * @param string $sp_id sp_id
     *
     * @return $this
     */
    public function setSpId($sp_id)
    {
        $this->container['sp_id'] = $sp_id;

        return $this;
    }

    /**
     * Gets free
     *
     * @return string
     */
    public function getFree()
    {
        return $this->container['free'];
    }

    /**
     * Sets free
     *
     * @param string $free free
     *
     * @return $this
     */
    public function setFree($free)
    {
        $this->container['free'] = $free;

        return $this;
    }

    /**
     * Gets unit_id
     *
     * @return string
     */
    public function getUnitId()
    {
        return $this->container['unit_id'];
    }

    /**
     * Sets unit_id
     *
     * @param string $unit_id unit_id
     *
     * @return $this
     */
    public function setUnitId($unit_id)
    {
        $this->container['unit_id'] = $unit_id;

        return $this;
    }

    /**
     * Gets base_unit_id
     *
     * @return string
     */
    public function getBaseUnitId()
    {
        return $this->container['base_unit_id'];
    }

    /**
     * Sets base_unit_id
     *
     * @param string $base_unit_id base_unit_id
     *
     * @return $this
     */
    public function setBaseUnitId($base_unit_id)
    {
        $this->container['base_unit_id'] = $base_unit_id;

        return $this;
    }

    /**
     * Gets qty
     *
     * @return string
     */
    public function getQty()
    {
        return $this->container['qty'];
    }

    /**
     * Sets qty
     *
     * @param string $qty qty
     *
     * @return $this
     */
    public function setQty($qty)
    {
        $this->container['qty'] = $qty;

        return $this;
    }

    /**
     * Gets return_qty
     *
     * @return string
     */
    public function getReturnQty()
    {
        return $this->container['return_qty'];
    }

    /**
     * Sets return_qty
     *
     * @param string $return_qty return_qty
     *
     * @return $this
     */
    public function setReturnQty($return_qty)
    {
        $this->container['return_qty'] = $return_qty;

        return $this;
    }

    /**
     * Gets base_qty
     *
     * @return string
     */
    public function getBaseQty()
    {
        return $this->container['base_qty'];
    }

    /**
     * Sets base_qty
     *
     * @param string $base_qty base_qty
     *
     * @return $this
     */
    public function setBaseQty($base_qty)
    {
        $this->container['base_qty'] = $base_qty;

        return $this;
    }

    /**
     * Gets price
     *
     * @return string
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param string $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets tax_price
     *
     * @return string
     */
    public function getTaxPrice()
    {
        return $this->container['tax_price'];
    }

    /**
     * Sets tax_price
     *
     * @param string $tax_price tax_price
     *
     * @return $this
     */
    public function setTaxPrice($tax_price)
    {
        $this->container['tax_price'] = $tax_price;

        return $this;
    }

    /**
     * Gets predis_amount
     *
     * @return string
     */
    public function getPredisAmount()
    {
        return $this->container['predis_amount'];
    }

    /**
     * Sets predis_amount
     *
     * @param string $predis_amount predis_amount
     *
     * @return $this
     */
    public function setPredisAmount($predis_amount)
    {
        $this->container['predis_amount'] = $predis_amount;

        return $this;
    }

    /**
     * Gets dis_rate
     *
     * @return string
     */
    public function getDisRate()
    {
        return $this->container['dis_rate'];
    }

    /**
     * Sets dis_rate
     *
     * @param string $dis_rate dis_rate
     *
     * @return $this
     */
    public function setDisRate($dis_rate)
    {
        $this->container['dis_rate'] = $dis_rate;

        return $this;
    }

    /**
     * Gets discount
     *
     * @return string
     */
    public function getDiscount()
    {
        return $this->container['discount'];
    }

    /**
     * Sets discount
     *
     * @param string $discount discount
     *
     * @return $this
     */
    public function setDiscount($discount)
    {
        $this->container['discount'] = $discount;

        return $this;
    }

    /**
     * Gets dis_amount
     *
     * @return string
     */
    public function getDisAmount()
    {
        return $this->container['dis_amount'];
    }

    /**
     * Sets dis_amount
     *
     * @param string $dis_amount dis_amount
     *
     * @return $this
     */
    public function setDisAmount($dis_amount)
    {
        $this->container['dis_amount'] = $dis_amount;

        return $this;
    }

    /**
     * Gets dis_amount_before
     *
     * @return string
     */
    public function getDisAmountBefore()
    {
        return $this->container['dis_amount_before'];
    }

    /**
     * Sets dis_amount_before
     *
     * @param string $dis_amount_before dis_amount_before
     *
     * @return $this
     */
    public function setDisAmountBefore($dis_amount_before)
    {
        $this->container['dis_amount_before'] = $dis_amount_before;

        return $this;
    }

    /**
     * Gets dis_price
     *
     * @return string
     */
    public function getDisPrice()
    {
        return $this->container['dis_price'];
    }

    /**
     * Sets dis_price
     *
     * @param string $dis_price dis_price
     *
     * @return $this
     */
    public function setDisPrice($dis_price)
    {
        $this->container['dis_price'] = $dis_price;

        return $this;
    }

    /**
     * Gets bill_dis_before_amount
     *
     * @return string
     */
    public function getBillDisBeforeAmount()
    {
        return $this->container['bill_dis_before_amount'];
    }

    /**
     * Sets bill_dis_before_amount
     *
     * @param string $bill_dis_before_amount bill_dis_before_amount
     *
     * @return $this
     */
    public function setBillDisBeforeAmount($bill_dis_before_amount)
    {
        $this->container['bill_dis_before_amount'] = $bill_dis_before_amount;

        return $this;
    }

    /**
     * Gets act_tax_price
     *
     * @return string
     */
    public function getActTaxPrice()
    {
        return $this->container['act_tax_price'];
    }

    /**
     * Sets act_tax_price
     *
     * @param string $act_tax_price act_tax_price
     *
     * @return $this
     */
    public function setActTaxPrice($act_tax_price)
    {
        $this->container['act_tax_price'] = $act_tax_price;

        return $this;
    }

    /**
     * Gets cess
     *
     * @return string
     */
    public function getCess()
    {
        return $this->container['cess'];
    }

    /**
     * Sets cess
     *
     * @param string $cess cess
     *
     * @return $this
     */
    public function setCess($cess)
    {
        $this->container['cess'] = $cess;

        return $this;
    }

    /**
     * Gets tax_amount
     *
     * @return string
     */
    public function getTaxAmount()
    {
        return $this->container['tax_amount'];
    }

    /**
     * Sets tax_amount
     *
     * @param string $tax_amount tax_amount
     *
     * @return $this
     */
    public function setTaxAmount($tax_amount)
    {
        $this->container['tax_amount'] = $tax_amount;

        return $this;
    }

    /**
     * Gets bill_dis_distribution
     *
     * @return string
     */
    public function getBillDisDistribution()
    {
        return $this->container['bill_dis_distribution'];
    }

    /**
     * Sets bill_dis_distribution
     *
     * @param string $bill_dis_distribution bill_dis_distribution
     *
     * @return $this
     */
    public function setBillDisDistribution($bill_dis_distribution)
    {
        $this->container['bill_dis_distribution'] = $bill_dis_distribution;

        return $this;
    }

    /**
     * Gets all_amount
     *
     * @return string
     */
    public function getAllAmount()
    {
        return $this->container['all_amount'];
    }

    /**
     * Sets all_amount
     *
     * @param string $all_amount all_amount
     *
     * @return $this
     */
    public function setAllAmount($all_amount)
    {
        $this->container['all_amount'] = $all_amount;

        return $this;
    }

    /**
     * Gets act_non_tax_price
     *
     * @return string
     */
    public function getActNonTaxPrice()
    {
        return $this->container['act_non_tax_price'];
    }

    /**
     * Sets act_non_tax_price
     *
     * @param string $act_non_tax_price act_non_tax_price
     *
     * @return $this
     */
    public function setActNonTaxPrice($act_non_tax_price)
    {
        $this->container['act_non_tax_price'] = $act_non_tax_price;

        return $this;
    }

    /**
     * Gets act_non_tax_amount
     *
     * @return string
     */
    public function getActNonTaxAmount()
    {
        return $this->container['act_non_tax_amount'];
    }

    /**
     * Sets act_non_tax_amount
     *
     * @param string $act_non_tax_amount act_non_tax_amount
     *
     * @return $this
     */
    public function setActNonTaxAmount($act_non_tax_amount)
    {
        $this->container['act_non_tax_amount'] = $act_non_tax_amount;

        return $this;
    }

    /**
     * Gets material_info
     *
     * @return \com_kingdee_service\data\entity\RetailBillListResMaterialEntriesMaterialInfo
     */
    public function getMaterialInfo()
    {
        return $this->container['material_info'];
    }

    /**
     * Sets material_info
     *
     * @param \com_kingdee_service\data\entity\RetailBillListResMaterialEntriesMaterialInfo $material_info material_info
     *
     * @return $this
     */
    public function setMaterialInfo($material_info)
    {
        $this->container['material_info'] = $material_info;

        return $this;
    }

    /**
     * Gets is_serial
     *
     * @return bool
     */
    public function getIsSerial()
    {
        return $this->container['is_serial'];
    }

    /**
     * Sets is_serial
     *
     * @param bool $is_serial is_serial
     *
     * @return $this
     */
    public function setIsSerial($is_serial)
    {
        $this->container['is_serial'] = $is_serial;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets is_batch
     *
     * @return bool
     */
    public function getIsBatch()
    {
        return $this->container['is_batch'];
    }

    /**
     * Sets is_batch
     *
     * @param bool $is_batch is_batch
     *
     * @return $this
     */
    public function setIsBatch($is_batch)
    {
        $this->container['is_batch'] = $is_batch;

        return $this;
    }

    /**
     * Gets check_type
     *
     * @return string
     */
    public function getCheckType()
    {
        return $this->container['check_type'];
    }

    /**
     * Sets check_type
     *
     * @param string $check_type check_type
     *
     * @return $this
     */
    public function setCheckType($check_type)
    {
        $this->container['check_type'] = $check_type;

        return $this;
    }

    /**
     * Gets all_amount_for
     *
     * @return string
     */
    public function getAllAmountFor()
    {
        return $this->container['all_amount_for'];
    }

    /**
     * Sets all_amount_for
     *
     * @param string $all_amount_for all_amount_for
     *
     * @return $this
     */
    public function setAllAmountFor($all_amount_for)
    {
        $this->container['all_amount_for'] = $all_amount_for;

        return $this;
    }

    /**
     * Gets serials
     *
     * @return string[]
     */
    public function getSerials()
    {
        return $this->container['serials'];
    }

    /**
     * Sets serials
     *
     * @param string[] $serials serials
     *
     * @return $this
     */
    public function setSerials($serials)
    {
        $this->container['serials'] = $serials;

        return $this;
    }

    /**
     * Gets total_dis_amount
     *
     * @return string
     */
    public function getTotalDisAmount()
    {
        return $this->container['total_dis_amount'];
    }

    /**
     * Sets total_dis_amount
     *
     * @param string $total_dis_amount total_dis_amount
     *
     * @return $this
     */
    public function setTotalDisAmount($total_dis_amount)
    {
        $this->container['total_dis_amount'] = $total_dis_amount;

        return $this;
    }

    /**
     * Gets total_dis_rate
     *
     * @return string
     */
    public function getTotalDisRate()
    {
        return $this->container['total_dis_rate'];
    }

    /**
     * Sets total_dis_rate
     *
     * @param string $total_dis_rate total_dis_rate
     *
     * @return $this
     */
    public function setTotalDisRate($total_dis_rate)
    {
        $this->container['total_dis_rate'] = $total_dis_rate;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


